<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Spencer Woo</title>
  <icon>https://www.gravatar.com/avatar/3ac258739291acea853bf86b8882e6e2</icon>
  <subtitle>啊，你在看我的主页。</subtitle>
  <link href="/feed.xml" rel="self"/>
  
  <link href="https://spencerwoo.com/"/>
  <updated>2018-10-01T08:20:51.892Z</updated>
  <id>https://spencerwoo.com/</id>
  
  <author>
    <name>Spencer Woo</name>
    <email>spencerwoo98@gmail.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>💎 Dev on Windows with WSL 👨‍💻</title>
    <link href="https://spencerwoo.com/2018/10/01/WSL/"/>
    <id>https://spencerwoo.com/2018/10/01/WSL/</id>
    <published>2018-10-01T08:16:22.000Z</published>
    <updated>2018-10-01T08:20:51.892Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><blockquote><p>在 Windows 上面用 WSL 优雅开发，GitHub 项目地址位于 &gt; <a href="https://github.com/spencerwoo98/Dev-on-Windows-with-WSL" target="_blank" rel="noopener">spencerwoo98/Dev-on-Windows-with-WSL</a></p></blockquote><ul><li><a href="#前言">前言</a></li><li><a href="#准备工作">准备工作</a><ul><li><a href="#windows-10-">Windows 10 💻</a></li><li><a href="#wsl---windows-subsystem-for-linux">WSL - Windows Subsystem for Linux</a></li></ul></li><li><a href="#工具链">工具链</a><ul><li><a href="#终端环境">终端环境</a><ul><li><a href="#bash">bash</a></li><li><a href="#hyper-终端">Hyper 终端</a></li><li><a href="#zsh--oh-my-zsh">zsh &amp; oh-my-zsh</a></li></ul></li><li><a href="#开发工具">开发工具</a><ul><li><a href="#git">git</a></li><li><a href="#ssh">ssh</a></li><li><a href="#wsl-open">wsl-open</a></li></ul></li><li><a href="#使用-visual-studio-code-作为主要代码编辑工具">使用 Visual Studio Code 作为主要代码编辑工具</a><ul><li><a href="#让-vscode-使用-wsl-内的-git-进行版本控制">让 VSCode 使用 WSL 内的 <code>git</code> 进行版本控制</a></li><li><a href="#python">Python</a></li><li><a href="#其他语言-期待补充-">其他语言 期待补充 💗💗💗</a></li></ul></li><li><a href="#gui-图形化窗口">GUI 图形化窗口</a><ul><li><a href="#安装-xserver-for-windows">安装 XServer for windows</a></li><li><a href="#在-wsl-侧安装-visual-studio-code">在 WSL 侧安装 Visual Studio Code</a></li></ul></li></ul></li><li><a href="#后记与使用">后记与使用</a><ul><li><a href="#终端">终端</a></li><li><a href="#vscode--wsl-工具链">VSCode + WSL 工具链</a></li></ul></li><li><a href="#参考资料">参考资料</a></li></ul><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>首先达成一个共识：<strong>Windows 给编程初学者带来了很大的困难</strong>。比如缺乏好用的包管理系统、终端环境难看难用和环境变量不易配置等等，这些都让 Windows 在开发体验上难以匹敌 Linux 甚至 macOS（不包括一定需要 IDE 支持的语言，比如 Java 和 .NET 等等）。然而 Linux 桌面环境虽然在 2018 年的今天有很大的改善，但是相比 Windows 还是有很大的差距，程序假死、卡住、崩掉的情况数不胜数。（还有 Linux 每一个发行版几乎都没有很好的支持 Emoji 啊！😫）</p><p>WSL 的出现似乎缓解了这些烦恼。我们可以在 Windows 上借助 Windows Subsystem for Linux 来给我们的 Windows 配置一个可用的开发环境，包括：Linux 终端环境 <code>zsh</code>、Linux 下的包管理器 <code>apt</code>、Visual Studio Code 开发环境等等。这篇文章的意义即此。🎉🎉🎉</p><h1 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h1><p><img src="https://i.loli.net/2018/09/30/5bb0d9c859392.png" alt="img"></p><h2 id="Windows-10-💻"><a href="#Windows-10-💻" class="headerlink" title="Windows 10 💻"></a>Windows 10 💻</h2><ol><li>需要保证 Windows 10 至少为 Windows 10 Fall Creators Update 及之后的版本。</li><li>安装之前必须保证为 Windows 10 开启了「Windows Subsystem for Linux」的可选功能。</li><li>Windows 用户名不能有空格。（有空格会对 WSL 环境造成影响。）</li></ol><h2 id="WSL-Windows-Subsystem-for-Linux"><a href="#WSL-Windows-Subsystem-for-Linux" class="headerlink" title="WSL - Windows Subsystem for Linux"></a>WSL - Windows Subsystem for Linux</h2><p>直接从微软商店下载。</p><p>官方支持的 Linux 发行版有：</p><ul><li>Ubuntu</li><li>Debian</li><li>OpenSUSE / SUSE Enterprise Linux</li><li>Kali Linux</li></ul><p>具体下载安装过程见 &gt; <a href="https://docs.microsoft.com/zh-cn/windows/wsl/install-win10" target="_blank" rel="noopener">微软官方支持文档</a>。</p><p>下文以 Ubuntu 18.04 发行版为例。</p><h1 id="工具链"><a href="#工具链" class="headerlink" title="工具链"></a>工具链</h1><h2 id="终端环境"><a href="#终端环境" class="headerlink" title="终端环境"></a>终端环境</h2><blockquote><p>💎 按照安装顺序介绍：</p></blockquote><h3 id="bash"><a href="#bash" class="headerlink" title="bash"></a>bash</h3><p>下载安装的 Windows Subsystem for Linux 自带。<code>bash</code> 是 <code>Unix shell</code> 的一种，是我们开发环境的基础。</p><blockquote><p>参考：<a href="https://unix.stackexchange.com/questions/4126/what-is-the-exact-difference-between-a-terminal-a-shell-a-tty-and-a-con" target="_blank" rel="noopener">Shell、Terminal 和 Console 的区别。</a></p></blockquote><h3 id="Hyper-终端"><a href="#Hyper-终端" class="headerlink" title="Hyper 终端"></a>Hyper 终端</h3><p>Hyper 是基于 Electron 的 Terminal（我们需要一个「终端模拟器」去和我们的 <code>shell</code> 进行交互），也可能是目前 Windows 上面可定制化程度最高的终端模拟器了。当然，Hyper 也支持 macOS 和 Linux。</p><p>首先，下载 <a href="https://nodejs.org/en/download/" target="_blank" rel="noopener">Node.js for Windows</a> 并安装。</p><p>然后，下载 Hyper 终端：</p><ul><li><a href="https://hyper.is/" target="_blank" rel="noopener">Hyper 终端官网</a></li><li><a href="https://hyper.is/#installation" target="_blank" rel="noopener">Hyper 终端下载地址</a></li></ul><p>安装一些主题：</p><ul><li><a href="https://github.com/bnb/awesome-hyper" target="_blank" rel="noopener">Awesome Hyper</a> - 有趣的与 Hyper 相关的内容、项目，可以找到合适的主题配置、字体、插件和 Hyper 的使用指南。</li></ul><p>配置 Hyper 终端默认使用 WSL 的 <code>bash</code>：</p><ul><li>打开 Hyper，快捷键 <code>Ctrl</code> + <code>,</code>：开启配置文件；</li><li>找到 <code>Shell</code> 选项，将其改成：<code>C:\\Windows\\System32\\bash.exe</code></li><li>重启 Hyper。</li></ul><blockquote><p>💎 参考配置文件：<a href="https://gist.github.com/spencerwoo98/f90d1ce8a24e7fc0fe6a3a7aab097f6e" target="_blank" rel="noopener">我的 <code>.hyper.js</code> 长这样儿。🎈🎈🎈</a></p></blockquote><p>禁用令人闹心的终端提示音：</p><ul><li>在 Hyper 中打开位于 Linux 文件系统根目录的 <code>.bashrc</code> 并添加以下代码:</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#</span> Disable the bell sound on backspace</div><div class="line">set bell-style none</div></pre></td></tr></table></figure><ul><li>加载设置：<code>source ~/.bashrc</code></li></ul><h3 id="zsh-amp-oh-my-zsh"><a href="#zsh-amp-oh-my-zsh" class="headerlink" title="zsh &amp; oh-my-zsh"></a>zsh &amp; oh-my-zsh</h3><p>下载安装 <code>zsh</code> 代替自动补全功能欠缺的 <code>bash</code>：</p><ul><li>利用 Ubuntu 的包管理器安装 <code>zsh</code>：<code>sudo apt install zsh</code></li><li>修改 <code>.bashrc</code> 加入以下代码，使得默认 <code>shell</code> 变成 <code>zsh</code>：</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">if [ -t 1 ]; then</div><div class="line">exec zsh</div><div class="line">fi</div></pre></td></tr></table></figure><ul><li>加载设置：<code>source ~/.bashrc</code></li></ul><p>下载安装 <a href="https://ohmyz.sh/" target="_blank" rel="noopener"><code>oh-my-zsh</code></a>，一个好用的 <code>zsh</code> 配置管理工具：</p><ul><li>运行命令下载安装：<code>sh -c &quot;$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)&quot;</code> （提醒没有什么就安装什么。比如：没有 <code>curl</code> 的话，运行 <code>sudo apt-get install curl</code> 安装。然后再执行上述语句。）</li></ul><p>去除 <code>ls</code> 和 <code>cd</code> 命令之后背景色出现的问题：</p><ul><li>修改 <code>.zshrc</code>，添加如下代码</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#</span> Change ls colours</div><div class="line">LS_COLORS="ow=01;36;40" &amp;&amp; export LS_COLORS</div><div class="line"></div><div class="line"><span class="meta">#</span> make cd use the ls colours</div><div class="line">zstyle ':completion:*' list-colors "$&#123;(@s.:.)LS_COLORS&#125;"</div><div class="line">autoload -Uz compinit</div><div class="line">compinit</div></pre></td></tr></table></figure><ul><li>加载设置：<code>source ~/.zshrc</code></li></ul><p>基本的终端环境就到这里了。推荐安装 <code>zsh</code> 组件：<a href="https://github.com/zsh-users/zsh-autosuggestions" target="_blank" rel="noopener">zsh-autosuggestions</a>。</p><div align="center"><img src="https://i.loli.net/2018/10/01/5bb1aa3bc42fa.png" width="60%"></div><p>最后成品大概是这样的。🎉🎉🎉</p><h2 id="开发工具"><a href="#开发工具" class="headerlink" title="开发工具"></a>开发工具</h2><blockquote><p>💎 日常运行 <code>sudo apt update &amp;&amp; sudo apt upgrade</code> 来保证所安装的组件最新。</p></blockquote><h3 id="git"><a href="#git" class="headerlink" title="git"></a>git</h3><p><code>git</code>：版本控制系统，安装：</p><ul><li><code>sudo apt install git</code></li></ul><h3 id="ssh"><a href="#ssh" class="headerlink" title="ssh"></a>ssh</h3><p><code>ssh</code>：与远程服务器沟通的渠道，配置与 GitHub 链接的 SSH 钥匙 🔑：</p><ul><li>按照 <a href="https://help.github.com/articles/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent/#platform-linux" target="_blank" rel="noopener">GitHub 官方给出的教程</a>在 Linux 下生成钥匙对，并将之添加到你的 SSH agent 中；</li><li>查看公钥：<code>cat ~/.ssh/id_rsa.pub</code>；</li><li>将公钥复制并添加到 GitHub 账户密钥里面。</li></ul><h3 id="wsl-open"><a href="#wsl-open" class="headerlink" title="wsl-open"></a><a href="https://github.com/4U6U57/wsl-open" target="_blank" rel="noopener">wsl-open</a></h3><p><code>wsl-open</code> 是类似于 macOS 里面 <code>open</code> 命令的程序。它能够在 WSL 中用 Windows 文件资源管理器打开文件夹，用 Windows 默认照片打开图片等等，方便开发。</p><div align="center"><img src="https://i.loli.net/2018/10/01/5bb1b57c6f8ee.gif" alt="wsl-open gif" width="80%"></div><p>下载：</p><ul><li>如果还没安装 npm 的话：</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#</span> Get npm if you don't have it already</div><div class="line">sudo apt-get install -yqq npm</div></pre></td></tr></table></figure><ul><li>然后安装 wsl-open：</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#</span> Install</div><div class="line">sudo npm install -g wsl-open</div></pre></td></tr></table></figure><h2 id="使用-Visual-Studio-Code-作为主要代码编辑工具"><a href="#使用-Visual-Studio-Code-作为主要代码编辑工具" class="headerlink" title="使用 Visual Studio Code 作为主要代码编辑工具"></a>使用 Visual Studio Code 作为主要代码编辑工具</h2><blockquote><p>💎 以下步骤适用于 Windows 这边安装的 Visual Studio Code。</p><p>💎 目前存在的一个问题是：VSCode 和 WSL 侧的工具链兼容性都很糟糕（除了 Node.js），都需要一定的配置才能丝滑工作。这也是一个当前微软 VSCode 各大语言插件组和 WSL 开发组都知道并在解决的问题（参考 <a href="https://github.com/Microsoft/vscode-python/issues/67" target="_blank" rel="noopener">VSCode Python 插件 Issue #67</a>），由于 WSL 是一个 Runtime 环境，而 VSCode 只和 Windows 侧的组件进行沟通，因此当前一个比较好的解决方法是：在 Windows 侧手动创建一些脚本帮助 VSCode 和 WSL 侧安装的组件沟通。</p></blockquote><h3 id="让-VSCode-使用-WSL-内的-git-进行版本控制"><a href="#让-VSCode-使用-WSL-内的-git-进行版本控制" class="headerlink" title="让 VSCode 使用 WSL 内的 git 进行版本控制"></a>让 VSCode 使用 WSL 内的 <code>git</code> 进行版本控制</h3><blockquote><p>Use Git installed in Bash on Windows/Windows Subsystem for Linux (WSL) from Windows and Visual Studio Code (VSCode)</p></blockquote><p>为了不浪费资源、方便开发，我们从这一步开始试图将 WSL(Linux) 侧的工具链全部整合到 Windows 侧的 Visual Studio Code。<a href="https://github.com/andy-5/wslgit" target="_blank" rel="noopener">wslgit</a> 提供了一个小巧的转换工具，让 Linux 侧的 <code>git</code> 能够直接被 Visual Studio Code 版本控制工具识别到。</p><ul><li><p>下载：<a href="https://github.com/andy-5/wslgit/releases" target="_blank" rel="noopener"><code>wslgit</code> release.</a></p></li><li><p>使用：</p><ul><li>将 <code>wslgit.exe</code> 文件放到一个合适的地方，并复制路径；</li><li>在 VSCode 设置中添加：</li></ul></li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">"git.path": "C:\\$更换为 wslgit.exe 的路径$\\wslgit.exe"</div></pre></td></tr></table></figure><h3 id="Python"><a href="#Python" class="headerlink" title="Python"></a>Python</h3><p>首先安装 Visual Studio Code <a href="https://marketplace.visualstudio.com/items?itemName=ms-python.python" target="_blank" rel="noopener">官方 Python 插件</a>。</p><p>在 WSL 侧安装 Python：</p><ul><li><p>安装必备工具：<code>sudo apt install -y make build-essential libssl-dev zlib1g-dev libbz2-dev libreadline-dev libsqlite3-dev wget curl llvm libncurses5-dev libncursesw5-dev xz-utils tk-dev</code></p></li><li><p>安装 Python 3（或者你想要的 Python 版本）：<code>sudo apt install python3</code></p></li></ul><p>让 VSCode 集成 WSL 侧 Python：</p><ul><li>在 WSL 终端中进入 Windows 系统用户根目录（即：<code>/mnt/c/Users/$Windows 用户名$</code>）</li><li>创建文件夹：<code>mkdir .vscode_bats</code></li><li>进入文件夹 <code>cd .vscode_bats</code>，<strong>⚠ 用 VSCode 创建文件 <code>code python.bat &amp;</code></strong></li><li>将下面内容 <strong>在 VSCode 中</strong> 加入文件 <code>python.bat</code>：</li></ul><figure class="highlight bat"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">@<span class="built_in">echo</span> off</div><div class="line"><span class="built_in">set</span> v_params=%*</div><div class="line"><span class="built_in">set</span> v_params=<span class="variable">%v_params:\=/%</span></div><div class="line"><span class="built_in">set</span> v_params=<span class="variable">%v_params:c:=/mnt/c%</span></div><div class="line"><span class="built_in">set</span> v_params=<span class="variable">%v_params:"=\"%</span></div><div class="line">bash.exe -c "/usr/bin/python3 <span class="variable">%v_params%</span>"</div></pre></td></tr></table></figure><ul><li>在 VSCode 设置中加入：</li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">"python.pythonPath": "C:\\Users\\$用户名$\\.vscode_bats\\python3.bat",</div></pre></td></tr></table></figure><p>官方 Python 插件集成了实时代码风格检查工具 <code>pylint</code>，快速定位工具 <code>ctags</code> 和代码美化插件 <code>autopep8</code>。这些同样也可以在 WSL 侧安装并从 Windows VSCode 侧调用。</p><ul><li>安装 Python 包管理器 <code>pip</code>：<code>sudo apt install python3-pip</code></li><li>安装 <code>pylint</code>：<code>pip3 install pylint</code></li><li>安装 <code>exuberant ctags</code>：<code>sudo apt install exuberant-ctags</code></li><li>安装 <code>autopep8</code>：<code>pip3 install autopep8</code></li><li>在刚刚创建的 <code>.vscode_bats</code> 文件夹下<strong>用 VSCode 创建</strong> <code>pylint.bat</code>：<code>code pylint.bat &amp;</code> 并加入以下内容：</li></ul><figure class="highlight bat"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">@<span class="built_in">echo</span> off</div><div class="line"><span class="built_in">set</span> v_params=%*</div><div class="line"><span class="built_in">set</span> v_params=<span class="variable">%v_params:\=/%</span></div><div class="line"><span class="built_in">set</span> v_params=<span class="variable">%v_params:c:=/mnt/c%</span></div><div class="line"><span class="built_in">set</span> v_params=<span class="variable">%v_params:"=\"%</span></div><div class="line">bash.exe -c "/usr/bin/pylint <span class="variable">%v_params%</span>"</div></pre></td></tr></table></figure><ul><li>在刚刚创建的 <code>.vscode_bats</code> 文件夹下<strong>用 VSCode 创建</strong> <code>ctags.bat</code>：<code>code ctags.bat &amp;</code> 并加入以下内容：</li></ul><figure class="highlight bat"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">@<span class="built_in">echo</span> off</div><div class="line"><span class="built_in">set</span> v_params=%*</div><div class="line"><span class="built_in">set</span> v_params=<span class="variable">%v_params:\=/%</span></div><div class="line"><span class="built_in">set</span> v_params=<span class="variable">%v_params:c:=/mnt/c%</span></div><div class="line"><span class="built_in">set</span> v_params=<span class="variable">%v_params:"=\"%</span></div><div class="line">bash.exe -c "ctags <span class="variable">%v_params%</span>"</div></pre></td></tr></table></figure><ul><li>在刚刚创建的 <code>.vscode_bats</code> 文件夹下<strong>用 VSCode 创建</strong> <code>autopep8.bat</code>：<code>code autopep8.bat &amp;</code> 并加入以下内容：</li></ul><figure class="highlight bat"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">@<span class="built_in">echo</span> off</div><div class="line"><span class="built_in">set</span> v_params=%*</div><div class="line"><span class="built_in">set</span> v_params=<span class="variable">%v_params:\=/%</span></div><div class="line"><span class="built_in">set</span> v_params=<span class="variable">%v_params:c:=/mnt/c%</span></div><div class="line"><span class="built_in">set</span> v_params=<span class="variable">%v_params:"=\"%</span></div><div class="line">bash.exe -c "autopep8 <span class="variable">%v_params%</span>"</div></pre></td></tr></table></figure><ul><li>在 VSCode 设置中加入：</li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">"python.linting.pylintPath": "C:\\Users\\spenc\\.vscode_bats\\pylint.bat",</div><div class="line">"python.workspaceSymbols.ctagsPath": "C:\\Users\\spenc\\.vscode_bats\\ctags.bat",</div><div class="line">"python.formatting.autopep8Path": "C:\\Users\\spenc\\.vscode_bats\\autopep8.bat"</div></pre></td></tr></table></figure><p>那么现在拿 VSCode 写 Python 项目的时候应该可以自动代码补全、IntelliSense、跳转定义和自动美化了。👍</p><h3 id="其他语言-期待补充-💗💗💗"><a href="#其他语言-期待补充-💗💗💗" class="headerlink" title="其他语言 期待补充 💗💗💗"></a>其他语言 期待补充 💗💗💗</h3><blockquote><p>💨 深坑待补：C/C++、Javascript/Node.js、Typescript、Golang…</p><p>💨 任何有经验的同学欢迎来这里添加补充内容。Fork &gt; PR &gt; Review &gt; Merge 一条龙。💗</p></blockquote><h2 id="GUI-图形化窗口"><a href="#GUI-图形化窗口" class="headerlink" title="GUI 图形化窗口"></a>GUI 图形化窗口</h2><blockquote><p>虽然上面的方案有时候能够解决问题，但是最为深度整合的方案是：在 WSL 侧的 Linux 环境下安装 VSCode 并从 Linux 侧打开，这样就一定能保证 VSCode 使用的工具链全部是 WSL 侧工具链了。</p><p>方案：安装一个 XServer 来让 Linux 侧 GUI 程序有窗口显示。</p></blockquote><h3 id="安装-XServer-for-windows"><a href="#安装-XServer-for-windows" class="headerlink" title="安装 XServer for windows"></a>安装 XServer for windows</h3><ul><li>推荐安装 <a href="https://sourceforge.net/projects/vcxsrv/" target="_blank" rel="noopener">VcXsrv Windows X Server</a>，并以这样的配置打开：</li></ul><p><img src="https://i.loli.net/2018/10/01/5bb1c9d292ce0.jpg" alt="img"></p><ul><li>在 WSL 中安装必要组件：</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo apt install libgtk2.0-0 libxss1 libasound2</div></pre></td></tr></table></figure><ul><li>配置 WSL 参数：</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">echo 'export DISPLAY=:0.0' &gt;&gt; .profile</div></pre></td></tr></table></figure><ul><li>安装一个小眼睛，看看图形窗口安装成功没有：</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo apt install x11-apps -y &amp;&amp; xeyes</div></pre></td></tr></table></figure><p><img src="https://i.loli.net/2018/10/01/5bb1cc9565f02.png" alt="img"></p><p>如果出现了这样的小眼睛盯着你的鼠标看，那么说明我们的 XServer 安装成功了。</p><h3 id="在-WSL-侧安装-Visual-Studio-Code"><a href="#在-WSL-侧安装-Visual-Studio-Code" class="headerlink" title="在 WSL 侧安装 Visual Studio Code"></a>在 WSL 侧安装 Visual Studio Code</h3><ul><li>添加 Visual Studio Code 库：</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">curl https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor &gt; microsoft.gpg</div><div class="line">sudo mv microsoft.gpg /etc/apt/trusted.gpg.d/microsoft.gpg</div><div class="line">sudo sh -c 'echo "deb [arch=amd64] https://packages.microsoft.com/repos/vscode stable main" &gt; /etc/apt/sources.list.d/vscode.list'</div></pre></td></tr></table></figure><ul><li>安装 Visual Studio Code：</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">sudo apt update &amp;&amp; sudo apt upgrade</div><div class="line">sudo apt install code</div></pre></td></tr></table></figure><ul><li>打开 XServer 窗口，在 WSL 终端执行 <code>code</code>，应该就可以看到 WSL 中的 VSCode 窗口启动了。</li></ul><h1 id="后记与使用"><a href="#后记与使用" class="headerlink" title="后记与使用"></a>后记与使用</h1><h2 id="终端"><a href="#终端" class="headerlink" title="终端"></a>终端</h2><p>WSL + Hyper 终端的环境是完全可用的一个完美 Linux 环境。美观、稳定、可定制化程度高。完美。👌</p><h2 id="VSCode-WSL-工具链"><a href="#VSCode-WSL-工具链" class="headerlink" title="VSCode + WSL 工具链"></a>VSCode + WSL 工具链</h2><p>还是有诸多不完美的地方。代码实时风格检查正常使用，代码美化正常执行，IntelliSense 有时候会抽风，但是跳转定义很多情况会出现问题。</p><h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><p>感谢前辈总结的经验，没有以下这些文章我不可能总结出这些东西。</p><ul><li><a href="https://github.com/lloydstubber/my-wsl-setup" target="_blank" rel="noopener">lloydstubber/my-wsl-setup</a></li><li><a href="https://gist.github.com/Voronoff/059c50f9fd354386c305c55af1f3a61f#install-and-set-up-python-to-work-with-vscode-and-wsl" target="_blank" rel="noopener">Voronoff/wsl_setup.md</a></li><li><a href="https://github.com/Microsoft/WSL/issues/2760" target="_blank" rel="noopener">Running VSCode for Linux in WSL #2760</a></li><li><a href="https://github.com/sirredbeard/Awesome-WSL" target="_blank" rel="noopener">sirredbeard/Awesome-WSL</a></li><li><a href="https://github.com/ethanhs/WSL-Programs" target="_blank" rel="noopener">ethanhs/WSL-Programs</a></li><li><a href="http://www.yuan-ji.me/%E5%A6%82%E4%BD%95%E5%9C%A8Windows-Subsystem-for-Linux-(WSL" target="_blank" rel="noopener">如何在 Windows Subsystem for Linux (WSL) 上运行 Linux GUI 软件</a>-%E4%B8%8A%E8%BF%90%E8%A1%8CLinux-GUI-%E8%BD%AF%E4%BB%B6/)</li><li><a href="https://zhuanlan.zhihu.com/p/33226830" target="_blank" rel="noopener">在 WSL 下启动 VSCode</a></li></ul><hr><p>👨‍💻 Dev on Windows with WSL © Spencer Woo. Released under the MIT License.</p><p>Authored and maintained by Spencer Woo.</p><p><a href="https://spencerwoo.com/">@Blog</a> · <a href="https://web.okjike.com/user/4DDA0425-FB41-4188-89E4-952CA15E3C5E/post" target="_blank" rel="noopener">ⒿJiKe</a> · <a href="https://github.com/spencerwoo98" target="_blank" rel="noopener">@GitHub</a></p>]]></content>
    
    <summary type="html">
    
      
      
        
        
          
        
      
    
    </summary>
    
    
      <category term="tutorial" scheme="https://spencerwoo.com/tags/tutorial/"/>
    
      <category term="sexy moves" scheme="https://spencerwoo.com/tags/sexy-moves/"/>
    
      <category term="sspai" scheme="https://spencerwoo.com/tags/sspai/"/>
    
      <category term="github" scheme="https://spencerwoo.com/tags/github/"/>
    
  </entry>
  
  <entry>
    <title>Markdown 进阶操作 | 流程图、时序图制作</title>
    <link href="https://spencerwoo.com/2018/09/10/MDCharts/"/>
    <id>https://spencerwoo.com/2018/09/10/MDCharts/</id>
    <published>2018-09-10T12:14:55.000Z</published>
    <updated>2018-09-10T12:49:08.333Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p><img src="https://i.loli.net/2018/09/10/5b966095542c3.png" alt="1 Markdown with Typora.png"></p><p>自从我派在 2014 年发布了「<a href="https://sspai.com/post/25137" target="_blank" rel="noopener">认识与入门 Markdown</a>」这篇文章，Markdown 这个简洁、轻量而又强大的标记语言就逐渐走进了非专业人士的生活中。无论是对于程序员，还是博客作者、微信公众平台作者等等，Markdown 语言都逐渐深入人心。</p><p>作为可能是市面上免费的 Markdown 编辑器中最优雅的一个，还是全平台（Windows, macOS 和绝大多数 Linux 发行版）支持的 Markdown 利器 —— Typora，除了最基础的「标题」「列表」「表格」「图片」「代码」等等功能，你可能不知道的是：<strong>Typora 还原生支持直接绘制时序图 Sequence、流程图 Flow Chart，</strong>甚至<strong>直接集成了 Mermaid 渲染引擎。</strong></p><p>本文写作环境为 Windows 10 1803，Typora 版本 0.9.57 (beta)。在 Typora「偏好设置 → Markdown 扩展语法」中打开「序列图、流程图和 Mermaid 选项」即可开启相关绘制功能。</p><p><img src="https://i.loli.net/2018/09/10/5b9660b0a1ff3.png" alt="2 Typora Settings.png"></p><blockquote><p>Typora 官网参考：<a href="https://support.typora.io/Draw-Diagrams-With-Markdown/" target="_blank" rel="noopener">Draw Diagrams With Markdown</a></p></blockquote><h2 id="时序图-Sequence"><a href="#时序图-Sequence" class="headerlink" title="时序图 Sequence"></a>时序图 Sequence</h2><blockquote><p>Typora 的时序图渲染引擎是 <a href="https://bramp.github.io/js-sequence-diagrams/#syntax" target="_blank" rel="noopener"><code>js-sequence</code> - Turns text into UML sequence diagrams.</a></p></blockquote><p>在 Typora 中，你可以通过下面的方式开启时序图渲染：</p><p><img src="https://i.loli.net/2018/09/10/5b9663525d683.png" alt="code.png"></p><p>上面是时序图的代码例子，渲染之后，这个时序图是这个样子的：</p><p><img src="https://i.loli.net/2018/09/10/5b96613e8708f.png" alt="3 Sequence-1.png"></p><p>实际上时序图是一个循环，其<strong>基本元素包括标题 <code>Title</code>、参与者 <code>participant</code>、箭头 <code>-&gt;</code> 和标签 <code>Notes</code></strong>。经过渲染之后，每个参与者 <code>participant</code> 由两个元素块构成，一条线段将两个元素块连接，这样就可以方便的用箭头表示他们之间的转换关系了。</p><h3 id="标题和箭头的语法"><a href="#标题和箭头的语法" class="headerlink" title="标题和箭头的语法"></a>标题和箭头的语法</h3><p><img src="https://i.loli.net/2018/09/10/5b9663c41df18.png" alt="code.png"></p><p><strong>在时序图基本语法中：</strong>标题 <code>Title</code> 放在第一行，之后是参与者与用箭头标识的参与者之间的相互关系。</p><p>箭头有四种形式：常规箭头、虚线箭头、开口箭头和虚线开口箭头。分别通过：<code>-&gt;</code>、<code>--&gt;</code>、<code>-&gt;&gt;</code>、<code>--&gt;&gt;</code> 来表示。</p><p><img src="https://i.loli.net/2018/09/10/5b9661553d5ea.png" alt="4 Sequence-2.png"></p><h3 id="标签语法"><a href="#标签语法" class="headerlink" title="标签语法"></a>标签语法</h3><p><img src="https://i.loli.net/2018/09/10/5b9663f6e7036.png" alt="code.png"></p><p>在时序图中，我们可以通过「标签」这个组件来给我们的某个参与者或是某些参与者进行标注。标签可以放在参与者的左侧 - <code>Note left of A</code>、右侧 - <code>Note right of A</code> 或者浮于参与者上方 - <code>Note over A</code>。当然，标签也可以同时浮于两个参与者上方 - <code>Note over A,B</code>。</p><p><img src="https://i.loli.net/2018/09/10/5b966168e5334.png" alt="5 Sequence-3.png"></p><h3 id="参与者顺序语法"><a href="#参与者顺序语法" class="headerlink" title="参与者顺序语法"></a>参与者顺序语法</h3><p><img src="https://i.loli.net/2018/09/10/5b966422a0f8f.png" alt="code.png"></p><p>如果我们希望更改参与者的顺序，那么可以在一开始按照我们想要的顺序，先列出参与者的名字：<code>participant A</code> 这样。</p><p><img src="https://i.loli.net/2018/09/10/5b9661789a6bd.png" alt="6 Sequence-4.png"></p><p>上面的几个例子是 Typora 所支持的基本时序图绘制语法，除了这些相对大的语法外，还有注释：<code># 你的注释</code> 和在某个模块中换行：<code>\n</code> 这两个重要的语法。基本上通过这样的方式，我们就能绘制出简单的时序图了。🍻</p><p>更加详细的语法可以通过下图进行实现，深黄色为关键保留词，浅黄色为具体信息：</p><p><img src="https://i.loli.net/2018/09/10/5b96619b6d8c9.png" alt="7 Grammar.png"></p><h2 id="流程图-Flow-Chart"><a href="#流程图-Flow-Chart" class="headerlink" title="流程图 Flow Chart"></a>流程图 Flow Chart</h2><blockquote><p>Typora 的时序图渲染引擎是 <a href="http://flowchart.js.org" target="_blank" rel="noopener"><code>flowchart.js</code> - Draws simple SVG flow chart diagrams from textual representation of the diagram.</a></p></blockquote><p>流程图的代码部分相对复杂。我们先从 Typora 官方文档给出的例子开始：</p><p><img src="https://i.loli.net/2018/09/10/5b966447ac1d6.png" alt="code.png"></p><p>上面这部分代码，我们可以看到流程图的渲染代码<strong>大体分为两个部分：元素定义部分、元素连接部分。</strong>即：首先在第一部分，我们<strong>定义整个流程图中的节点元素</strong>；之后在第二部分，我们将各个节点通过箭头连接，以<strong>表示整个图表的流向。</strong></p><p>经过渲染之后，我们可以得到以下这样的基础流程图：</p><p><img src="https://i.loli.net/2018/09/10/5b9661aa79bd2.png" alt="8 Flow-1.png"></p><h4 id="第一部分：元素定义"><a href="#第一部分：元素定义" class="headerlink" title="第一部分：元素定义"></a>第一部分：元素定义</h4><p>我们从第一部分开始，可以看到，一个流程图的基本元素有六大类别：</p><ul><li><code>start</code>：流程图开始</li><li><code>end</code>：流程图结束</li><li><code>operation</code>：操作</li><li><code>subroutine</code>：子进程</li><li><code>condition</code>：判断条件</li><li><code>inputoutput</code>：输入输出</li></ul><p>元素定义部分的基本代码结构是这样的：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">tag=&gt;type: content:&gt;url</div></pre></td></tr></table></figure><p>其中：</p><ul><li><code>tag</code>：就是作为第二部分连接元素时候引用我们定义元素时的名称，这个 <code>tag</code> 需要独一无二。</li><li><code>type</code>：就是我们流程图的六大基本元素类别，选择元素种类填入即可。</li><li><code>content</code>：是我们流程图元素中所显示的文字。这里的冒号与文本之间一定要有个空格。</li><li><code>url</code>：是元素所带有的超链接。🔗</li></ul><p>这样就是我们元素定义部分的基本语法了。🎉🎉🎉</p><h4 id="第二部分：元素连接"><a href="#第二部分：元素连接" class="headerlink" title="第二部分：元素连接"></a>第二部分：元素连接</h4><p>第二部分就是将我们在第一部分定义的元素通过我们想要的方式进行连接。</p><p>在这一部分，连接十分简单，就是利用 <code>-&gt;</code> 来连接我们在第一部分定义的那些元素，元素利用 <code>tag</code> 来区分。这里面需要注意的是：</p><ul><li>对于每个「判断条件元素」 <code>condition</code>，都会有 <code>yes</code> 和 <code>no</code> 两个分支，比如上面代码中的 <code>cond(yes)</code> 和 <code>cond(no)</code>。</li><li>每个元素可以制定分支走向，默认是 <code>向下</code> 的，也可以用 <code>right</code> 指向右边，比如下面这个流程图中，我们可以将「子进程元素」 <code>subroutine</code> 放在右侧显示：</li></ul><p><img src="https://i.loli.net/2018/09/10/5b96647b9b6fc.png" alt="code.png"></p><p><img src="https://i.loli.net/2018/09/10/5b9661cb98988.png" alt="9 Flow-2.png"></p><h2 id="Mermaid-集成"><a href="#Mermaid-集成" class="headerlink" title="Mermaid 集成"></a>Mermaid 集成</h2><blockquote><p>Typora also has integration with <a href="https://knsv.github.io/mermaid/#mermaid" target="_blank" rel="noopener">mermaid</a>, which supports sequence, flowchart and Gantt.</p></blockquote><p>Mermaid 是另一种更加方便的生成流程图、时序图的语法 ——「Generation of diagrams and flowcharts from text in a similar manner as markdown.」。其官方文档在这里 → <a href="https://mermaidjs.github.io/" target="_blank" rel="noopener">mermaid.js</a>。Typora 集成了 Mermaid 渲染引擎，我们可以直接用 Mermaid 语法画时序图、流程图和甘特图。🎉🎉🎉</p><p>这部分语法相对更加复杂，而本篇文章我已经写了近两千字了，因此我决定另起一篇文章进行介绍：包括 Mermaid 基础语法的介绍、甘特图 Gantt 的介绍和利用 Mermaid 绘制 Sequence, Flowchart 和 Gantt 这三种基本图像的方法。👌</p><p>感谢阅读。🍻</p>]]></content>
    
    <summary type="html">
    
      
      
        
        
          
        
      
    
    </summary>
    
    
      <category term="tutorial" scheme="https://spencerwoo.com/tags/tutorial/"/>
    
      <category term="sexy moves" scheme="https://spencerwoo.com/tags/sexy-moves/"/>
    
      <category term="sspai" scheme="https://spencerwoo.com/tags/sspai/"/>
    
  </entry>
  
  <entry>
    <title>主页推荐 | 新时代的互联网门户 - 万花筒</title>
    <link href="https://spencerwoo.com/2018/08/11/whtim/"/>
    <id>https://spencerwoo.com/2018/08/11/whtim/</id>
    <published>2018-08-11T12:05:08.000Z</published>
    <updated>2018-08-11T16:27:23.888Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><blockquote><p>大约在 2000 年前后，由于互联网中的<a href="https://zh.wikipedia.org/wiki/%E7%BD%91%E7%AB%99" target="_blank" rel="noopener">网站</a>数量迅速增加，网站的 <a href="https://zh.wikipedia.org/wiki/URL" target="_blank" rel="noopener">URL</a> 不便于记忆，所以产生了一类将<a href="https://zh.wikipedia.org/wiki/%E4%BA%92%E8%81%94%E7%BD%91" target="_blank" rel="noopener">互联网</a>中的网站地址分类收集在一起的网站，此类网站被称为「网址导航」网站。—— <a href="https://zh.wikipedia.org/wiki/%E7%BD%91%E5%9D%80%E5%AF%BC%E8%88%AA" target="_blank" rel="noopener">Wikipedia</a> </p></blockquote><p><strong>网址导航 - DirectIndustry Web Guide</strong> 是一个出现在互联网萌芽期的事物。虽然从诞生之初，网址导航就被设计为一个方便我们浏览网站、查看与记录信息的地方，但是如今这类在国内被 2345 导航、hao123、360 导航等等毒瘤网站所「代言」的事物早已失去了曾经的意义。敛财、垃圾广告的泛滥、恶意装机与篡改用户主页等等毒瘤行为让这些「网址导航」变成了互联网上病毒、垃圾的代名词。</p><p>虽然如此，据我所知有些同学在 2018 年的今天依旧依赖于这些毒瘤网站在互联网上寻找获取信息的途径。他们：「上网，先打开（被 hao123 篡改了的）hao123 主页，点开百度，然后再输入网易邮箱搜索……」。😱😱😱</p><p>是时候做出点改变了。如果你：依旧通过 hao123 等等网站「网上冲浪」、或是觉得自己收藏的标签页有丰富的余地、或是只希望有一个美观简洁不需要自己维护的浏览器主页，不妨看看这个<strong>新时代的互联网门户 - 万花筒</strong>。</p><p><img src="https://i.loli.net/2018/08/11/5b6ef0abedebe.png" alt=""></p><h2 id="wht-im-万花筒"><a href="#wht-im-万花筒" class="headerlink" title="wht.im - 万花筒"></a><a href="https://wht.im/" target="_blank" rel="noopener">wht.im</a> - 万花筒</h2><p>如果让我挑选一个门户网站作为我的浏览器主页，我的三个挑选标准，按照必要性递减的顺序，估计是这样的：</p><ol><li>美观、简洁、没有<strong>任何</strong>广告、收录的网址优质。</li><li>加载速度飞快。</li><li>是 <code>https</code> 加持的网站。</li></ol><p>这三个标准分别是为了养眼、效率和安全。恰巧，我觉得万花筒这个导航网站符合我的需求。</p><h3 id="美观简洁、没有广告"><a href="#美观简洁、没有广告" class="headerlink" title="美观简洁、没有广告"></a>美观简洁、没有广告</h3><p>「美观简洁」是一个优质的门户网站最为必要的特点。一个网页设计感的有无是我将这个网站加入收藏的首要标准，而如果这个网站将是我每天打开浏览器第一眼看到的网站，那么这个网站自然是要完美符合「美观简洁」的。</p><p>「没有广告」这一特点则是我的个人偏好，我是一个无法容忍我使用的 APP、网站等等任何地方出现令人头疼的侵入式广告的人。当然我相信也没有多少人会喜欢那些侵入式广告。为此，我的浏览器必装拦截广告的 AdBlock 插件，我的油猴脚本里面有 90% 是为了处理（屏蔽）搜索引擎给我的无用信息。与此同时，我购买了微博第三方客户端 Moke、网易云音乐黑胶会员，<a href="https://spencerwoo.com/2018/06/10/ByeZhihu/">并删除了知乎 iOS 客户端</a>，都为了「没有广告」的纯净体验。<strong>对于侵入式广告的处理</strong> 确实是我评判一款产品的核心标准。</p><p><strong>万花筒</strong> 设计简洁、没有广告，同时它收录了 6 个大类别，近三百个优质网站，其中除了常见的网站，在其技术与设计门类里面不乏有一些我之前未曾涉猎过的优秀网站，比如 <code>技术 - 工具</code> 类别下的网站测速网：<a href="https://www.17ce.com/" target="_blank" rel="noopener">17CE</a>、<code>设计 - 素材</code> 类别下的免费矢量图网：<a href="https://www.freepik.com/" target="_blank" rel="noopener">freepik</a> 等等，当然它在 <code>技术 - 资源</code> 下也收录了我派官网。🤭</p><p><img src="https://i.loli.net/2018/08/11/5b6efcc267f2a.png" alt=""></p><h3 id="飞快的加载速度"><a href="#飞快的加载速度" class="headerlink" title="飞快的加载速度"></a>飞快的加载速度</h3><p>如果我要将一个网站当作我浏览器的主页，那么它若不是本地网址（比如一些 Chrome 新标签页插件的实现方式），就应该有着飞快的加载速度。经过我在我自己的网络环境下测试，页面的平均加载时间在 1039 ms 左右。</p><p><img src="https://i.loli.net/2018/08/11/5b6efee7048d9.png" alt=""></p><p>我在 17CE 上面测试全国范围内加载万花筒的时间（除了个别地区）都在 2 秒以内。</p><p><img src="https://i.loli.net/2018/08/11/5b6efff4a76a3.png" alt=""></p><p>同时我在日常体验中，万花筒的加载速度也确实不亚于那些本地的浏览器新标签页插件的加载速度。因此我也很放心：只要我联网，万花筒主页就能瞬间加载。</p><h3 id="是-https-加持的网站"><a href="#是-https-加持的网站" class="headerlink" title="是 https 加持的网站"></a>是 <code>https</code> 加持的网站</h3><p>尽管一个门户网站没有登录一说，但是这已经是 2018 年了，如果没有 <code>https</code> 加持，连 Chrome 都会把你的网站标记为不安全。</p><blockquote><p><a href="https://www.blog.google/products/chrome/milestone-chrome-security-marking-http-not-secure/" target="_blank" rel="noopener">A milestone for Chrome security: marking HTTP as “not secure”</a></p></blockquote><p>这样看来，依旧没有 <code>https</code> 加持的网站到今天是说不过去了。幸运的是，万花筒全站 <code>https</code>。</p><p>以上这三个标准是我能将我浏览器首页放心的交给这个网站的必要条件。在此之上，万花筒还有一些更加微妙的特性值得我们关注。</p><h2 id="「处处细微」的细节特性"><a href="#「处处细微」的细节特性" class="headerlink" title="「处处细微」的细节特性"></a>「处处细微」的细节特性</h2><blockquote><p>推荐阅读：<a href="https://jsthon.com/wht-nav-site/" target="_blank" rel="noopener">万花筒的作者 - 我们做了一个不太艳俗的网址导航</a></p></blockquote><h4 id="根据网络环境进行搜索引擎的切换"><a href="#根据网络环境进行搜索引擎的切换" class="headerlink" title="根据网络环境进行搜索引擎的切换"></a>根据网络环境进行搜索引擎的切换</h4><blockquote><p>一切都是理所当然。你会发现，不同的网络环境，将得到不同的搜索体验。我们会对不同的网络环境进行识别，当更好的搜索引擎可用时，不需要额外的操作，我们会尽力切换到更好的搜索引擎。</p><p>*当 Google 服务可用时，图片搜索与学术搜索将会调用 Google 搜索引擎。</p></blockquote><p>这个特性在使用过程中体验颇佳，根据相关法律法规我们就不细致讨论了。😄</p><h4 id="面向大学生的校园网门户加持"><a href="#面向大学生的校园网门户加持" class="headerlink" title="面向大学生的校园网门户加持"></a>面向大学生的校园网门户加持</h4><blockquote><p>我们针对年轻的大学生群体，制作了专属的校园导航，可在设置中开启并选择你的的学校，使得平时能更方便地进入教务系统、邮件系统、图书馆系统等等。</p></blockquote><p>针对大学生的校园网门户加持确实很方便。</p><p><img src="https://i.loli.net/2018/08/11/5b6f077101a29.jpg" alt=""></p><p>作者维护了一个 GitHub 仓库并接受同学自由的添加自己学校的重点网站，比如教务处、网络教室、图书馆和邮箱系统等等。当然由于万花筒也是刚刚部署并发布正式版本，处于初期阶段，目前仅仅收录了清华大学、北京理工大学、澳门大学和北方工业大学的相关链接。</p><blockquote><p>由于目前收录的校园导航链接较少，可在 <a href="https://github.com/wht-im" target="_blank" rel="noopener">GitHub</a> 中提交你的学校常用链接。 </p></blockquote><h4 id="多种素色主题的选择"><a href="#多种素色主题的选择" class="headerlink" title="多种素色主题的选择"></a>多种素色主题的选择</h4><p>最后，万花筒本身提供了 12 个优雅的素色作为页面的背景，这几种颜色优雅、简洁，也和页面本身十分搭配，富有设计感。</p><p><img src="https://i.loli.net/2018/08/12/5b6f0ad984c0c.png" alt=""></p><p>万花筒的特性大概就是这样了。简洁的设计、优质的网站收录和飞快的加载速度让我能够顺利的将我的浏览器首页交给万花筒。</p><blockquote><p>人生必有痴，而后有成。我们也会不断地跟进技术，将网站能够以更好地形式呈现。—— 万花筒作者 <a href="https://jsthon.com/" target="_blank" rel="noopener">Jsthon</a></p></blockquote><p><a href="https://spencerwoo.com">© Spencer Woo</a></p>]]></content>
    
    <summary type="html">
    
      
      
        
        
          
        
      
    
    </summary>
    
    
      <category term="tutorial" scheme="https://spencerwoo.com/tags/tutorial/"/>
    
      <category term="sexy moves" scheme="https://spencerwoo.com/tags/sexy-moves/"/>
    
      <category term="sspai" scheme="https://spencerwoo.com/tags/sspai/"/>
    
  </entry>
  
  <entry>
    <title>Simple Deskop API | 一喵一图</title>
    <link href="https://spencerwoo.com/2018/07/30/SimpleAPI/"/>
    <id>https://spencerwoo.com/2018/07/30/SimpleAPI/</id>
    <published>2018-07-30T15:32:08.000Z</published>
    <updated>2018-08-11T12:07:03.681Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p><a href="https://github.com/spencerwoo98/spencer-simple-desktop-api" target="_blank" rel="noopener">「一喵一图」</a>：一个异常简单的随机图片 API，图源自极简主义桌面壁纸提供站点 → <a href="http://simpledesktops.com" target="_blank" rel="noopener">Simple Desktops</a> 🎉🎉🎉</p><p><br></p><h2 id="Simple-Desktops-这是什么？"><a href="#Simple-Desktops-这是什么？" class="headerlink" title="Simple Desktops? 这是什么？"></a>Simple Desktops? 这是什么？</h2><p>在上一篇文章：<a href="https://sspai.com/post/45742" target="_blank" rel="noopener">Mac To Win | 不完全迁移体验指北</a> 中我提到了一个优质的图片社区：Simple Desktops。</p><p>Simple Desktops 提供了…</p><blockquote><p>A collection of wallpapers designed to make your computer beautiful without distraction.</p></blockquote><p>一组特别设计的壁纸，让你电脑桌面美观的同时又不妖艳而令人分心。</p><p>但是很遗憾的是，Simple Desktops 的网站开发者们并没有给我们提供一个结实可用的 API，如果想要在网络上使用 Simple Desktops 提供的图片，我们只能将图片下载到本地，再上传到自己的图床上进行使用。</p><p>长期维护一个博客的我，经常因为文章首页题图而烦恼。曾经我使用的「Unsplash 无版权图片社区」提供了一个完美可用的 API，我能够直接将 Unsplash 给开发者提供的代码嵌入我的博客或者其他页面来引用它们的图片，这样的方便程度实在是令人印象深刻。</p><p>我个人十分喜欢 Simple Desktops 提供的壁纸，它们简单、清晰，又符合设计美学。因此我也很想通过类似 Unsplash 提供的方式将 Simple Desktops 上面的壁纸用作我博客题图、文章配图等等地方。我于是设计了这样一个 API，它能够十分方便的将 Simple Desktops 的图片直接嵌入任何地方。</p><p>我将它称作「一喵一图」。</p><p><br></p><h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><p>直接将下面代码嵌入到任何你想要放的地方。不必担心是否支持 <code>https</code>，因为不仅 <code>API</code> 的 <code>GET</code> 请求是通过 <code>https</code> 传输的，图片本身也是通过 <code>https</code> 传输的。( •̀ ω •́ )y</p><p><strong>1. API 地址</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">https://api.spencerwoo.com</div></pre></td></tr></table></figure><p><strong>2. Markdown</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">![img](https://api.spencerwoo.com)</div></pre></td></tr></table></figure><p><strong>3. HTML</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"https://api.spencerwoo.com"</span> <span class="attr">alt</span>=<span class="string">"img.png"</span> <span class="attr">title</span>=<span class="string">"img.png"</span> /&gt;</span></div></pre></td></tr></table></figure><p>图片随机显示并且每次刷新都将更新新的图片。由于版权问题以及 Simple Desktops 本身并没有将图片进行分类，我自然无法将图片分类，同时由于 Simple Desktops 网站本身不支持 <code>https</code>，我无法也无益直接提供 Simple Desktops 的图片外链。</p><p><br></p><h2 id="使用效果"><a href="#使用效果" class="headerlink" title="使用效果"></a>使用效果</h2><p><img src="https://i.loli.net/2018/07/30/5b5ecdb7b783a.png" alt="sshot-1.png"></p><p>目前在使用 <strong>「一喵一图」</strong> 的网站有这些:</p><ul><li><a href="https://spencerwoo.com">https://spencerwoo.com</a></li></ul><p>如果你在使用我的 API 并且想将你的网站加到列表里面来，<a href="https://github.com/spencerwoo98/spencer-simple-desktop-api" target="_blank" rel="noopener">请直接 fork 本项目</a>，修改这里的列表，然后给我发一个 PR 就 ok 了。或者你也可以直接在项目的 Issue 区、本页面的评论区、少数派私信等等各种能够联系到我的方式告知我，干杯。🎉</p><p>欢迎 Star，欢迎 PR。</p><p><br></p><h2 id="致谢与版权声明"><a href="#致谢与版权声明" class="headerlink" title="致谢与版权声明"></a>致谢与版权声明</h2><p><strong>服务稳定全靠天，随时跑路不留名。</strong></p><ul><li>Images at Simple Desktops are for personal use and for personal use only. They shouldn’t be sold or reposted without the expressed written consent of the desktop creator. See <a href="http://simpledesktops.com/about/" target="_blank" rel="noopener">Simple Desktops</a> for more details.</li><li>A huge thank you to SM.MS for providing such a stable and awesome image hosting service. </li><li>Server provided by <a href="https://www.vultr.com/" target="_blank" rel="noopener">VULTR - The Infrastructure Cloud™</a>.</li></ul><p>项目经由 MIT License 发布。</p><p><br></p><p><a href="https://spencerwoo.com">© Spencer Woo</a></p>]]></content>
    
    <summary type="html">
    
      
      
        
        
          
        
      
    
    </summary>
    
    
      <category term="tutorial" scheme="https://spencerwoo.com/tags/tutorial/"/>
    
      <category term="code" scheme="https://spencerwoo.com/tags/code/"/>
    
      <category term="sexy moves" scheme="https://spencerwoo.com/tags/sexy-moves/"/>
    
      <category term="sspai" scheme="https://spencerwoo.com/tags/sspai/"/>
    
      <category term="github" scheme="https://spencerwoo.com/tags/github/"/>
    
  </entry>
  
  <entry>
    <title>Windows One On One</title>
    <link href="https://spencerwoo.com/2018/07/19/Windows101/"/>
    <id>https://spencerwoo.com/2018/07/19/Windows101/</id>
    <published>2018-07-19T07:19:16.000Z</published>
    <updated>2018-08-11T12:07:28.929Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h2 id="Mac-To-Win-不完全迁移体验指北"><a href="#Mac-To-Win-不完全迁移体验指北" class="headerlink" title="Mac To Win | 不完全迁移体验指北"></a>Mac To Win | 不完全迁移体验指北</h2><blockquote><p><a href="https://sspai.com/post/45742" target="_blank" rel="noopener">迁移到 Windows 后，我如何找回熟悉的 macOS 体验</a> 首发，本文为 Hum 老师修改前的样子。</p></blockquote><p>最近，我将自己的全部家当从 macOS 迁移到了 Windows，我相信这样的变迁很多人都会遇到。无论是开学之初被 Mac 的精美设计吸引但是经过一段时间的使用发现专业软件在 macOS 上没有适配、还是工作之后业务需求让自己必须从使用多年的 macOS 切换到 Windows，从一个系统切换到另一个系统都伴随着无比的「折腾」。</p><p>我必须承认，macOS 是优秀的、有设计感的系统。我在它上面用 Final Cut Pro X 剪出了我的第一个视频，用 Android Studio 编译了我的第一个安卓项目，用 iTerm2 + <code>oh-my-zsh</code> 的环境与 <code>Git</code> 项目管理工具在 GitHub 上发布了我的第一个项目，也用 Typora 写出并用 <code>hexo</code> 搭建了我的第一篇博客。 两年来，我真切的体验了 macOS 的生产力。</p><p>但与此同时，macOS 上与之 <strong>利益无关</strong> 的软件所作的适配也总是不尽人意。就像 <a href="https://radiopublic.com/anywayfm-GbPYER" target="_blank" rel="noopener">Anyway.FM 设计杂谈</a> 在「№39: 设计师的调校」一期节目中说到：</p><blockquote><p>没忍住，容我喷一下：<strong>Mac 版的 Office 套件就是辣鸡</strong>。</p></blockquote><p>于是，为了数据分析、性能提升和接口兼容，我无奈将服役两年有余的 12” MacBook 淘汰，迁移到了 Windows 平台，开始拥抱 Windows 与开源的生态圈。🐾</p><p><br></p><h2 id="What-did-I-miss"><a href="#What-did-I-miss" class="headerlink" title="What did I miss?"></a>What did I miss?</h2><p>从 macOS 迁移到 Windows 的过程中，必然有体验上的差别。在使用 iPhone 的同时，下面这些在 Apple 生态系统中使用 Mac 的体验让我尤其想念：</p><ul><li><strong>桌面美学：</strong>macOS 具有设计感的桌面和 Dock</li><li><strong>macOS 系统原生的工具：</strong><ul><li>空格键预览</li><li>Handoff、Airdrop 等与其他苹果设备的无缝联动</li><li>方便的原生截图、窗口检测与背景阴影</li></ul></li><li><p><strong>专为 macOS 开发的效率工具：</strong></p><ul><li>全局启动器 Alfred（或者原生的 Spotlight）</li><li>类似 iPic 的图床工具</li><li>MWeb 等优秀的 Markdown 写作工具</li></ul></li><li><p><strong>开发环境：</strong>得益于 macOS 类 Unix 系统的属性而有的一套可以媲美 Linux 的开发环境（比如 <code>Homebrew</code> 与原生的 <code>git</code> 和 <code>ssh</code>）</p></li></ul><p>那么在使用 Windows 与 iPhone 的时候，我能不能找回一些如此顺滑的体验呢？我在 Windows 上做了这样的折腾。 🐟</p><p><br></p><h2 id="在-Windows-上的折腾"><a href="#在-Windows-上的折腾" class="headerlink" title="在 Windows 上的折腾"></a>在 Windows 上的折腾</h2><h3 id="设计桌面"><a href="#设计桌面" class="headerlink" title="设计桌面"></a>设计桌面</h3><p>Apple 是一家标榜设计的公司，macOS 的桌面美学确实让包括我在内的很多人赞叹。当然我在使用 Windows 的这一周以来，经过 Fluent Design 重新设计的 Windows 10 也相比之前的老一代 Windows 有着巨大的美学改善。下面这些小工具、壁纸和使用设计理念可能会让你的 Windows 美的不可方物。</p><p><img src="https://i.loli.net/2018/07/28/5b5b63509ff85.png" alt="01_我的桌面.png"></p><h4 id="①-TranslucentTB-开源的任务栏透明小工具-⭐⭐⭐⭐⭐"><a href="#①-TranslucentTB-开源的任务栏透明小工具-⭐⭐⭐⭐⭐" class="headerlink" title="① TranslucentTB - 开源的任务栏透明小工具 ⭐⭐⭐⭐⭐"></a>① <a href="https://github.com/TranslucentTB/TranslucentTB/" target="_blank" rel="noopener">TranslucentTB</a> - 开源的任务栏透明小工具 ⭐⭐⭐⭐⭐</h4><p>美化桌面必不可少的需要对 Windows 那不透明影响体验的任务栏进行修改。修改注册表不仅很是危险，还只能将任务栏半透明化，而另外一些如 StarDock 之流的美化软件又很占内存。这个开源的 TranslucentTB 则不然，既小巧、不占内存、还可以将任务栏透明、半透明、模糊、或是直接显示纯色，可以说是功能全面了。显示效果就像上图那样，能够完整的呈现我们的壁纸而不必担心任务栏挡掉一部分。</p><h4 id="②-Rainmeter-大名鼎鼎的-Windows-桌面专业美化插件-⭐⭐⭐⭐"><a href="#②-Rainmeter-大名鼎鼎的-Windows-桌面专业美化插件-⭐⭐⭐⭐" class="headerlink" title="② Rainmeter - 大名鼎鼎的 Windows 桌面专业美化插件 ⭐⭐⭐⭐"></a>② Rainmeter - 大名鼎鼎的 Windows 桌面专业美化插件 ⭐⭐⭐⭐</h4><p>对于深度美化 Windows 桌面的同学来说，Rainmeter 的重要性可想而知。在 Rainmeter 的 <a href="https://www.rainmeter.net/" target="_blank" rel="noopener">官网</a>、<a href="https://forum.rainmeter.net/" target="_blank" rel="noopener">官方用户社区</a>、和 <a href="https://www.deviantart.com/rainmeter" target="_blank" rel="noopener">DeviantArt 设计站点</a>，都有大量设计精美的 Rainmeter 插件，但是我也并不推荐将插件直接堆砌在桌面上，一团糟的样子不仅不美观，还占用了大量的系统资源。我只小小利用了其桌面时钟、日期的显示。</p><p><img src="https://i.loli.net/2018/07/28/5b5b638246400.png" alt="02_Rainmeter.png"></p><p>FYI，我目前使用的 Rainmeter 主题在这里可以下载到 → <a href="https://www.deviantart.com/lilshizzy/art/Rainmeter-Elegance-2-244373054" target="_blank" rel="noopener">Rainmeter Elegance 2.0</a></p><h4 id="③-Simple-Desktops-极简风格壁纸提供站点-⭐⭐⭐⭐⭐"><a href="#③-Simple-Desktops-极简风格壁纸提供站点-⭐⭐⭐⭐⭐" class="headerlink" title="③ Simple Desktops - 极简风格壁纸提供站点 ⭐⭐⭐⭐⭐"></a>③ <a href="http://simpledesktops.com/browse/" target="_blank" rel="noopener">Simple Desktops</a> - 极简风格壁纸提供站点 ⭐⭐⭐⭐⭐</h4><p>美化桌面方面，壁纸可以说是重中之重。一张简单可爱的壁纸可以奠定整个工作的态度。在 Simple Desktops 里我总能找到可爱的壁纸。</p><p><img src="https://i.loli.net/2018/07/28/5b5b639d1e926.png" alt="03_Simple Desktop.png"></p><p>除此之外，大名鼎鼎的无版权图片社区 <a href="https://unsplash.com" target="_blank" rel="noopener">Unsplash</a>、免费图片社区 <a href="https://pixabay.com/zh/" target="_blank" rel="noopener">Pixabay</a>、甚至是必应每日壁纸等等都是优秀的壁纸来源。</p><h4 id="④-极简风格的审美要求和苛刻到极致的完美追求-玄学！"><a href="#④-极简风格的审美要求和苛刻到极致的完美追求-玄学！" class="headerlink" title="④ 极简风格的审美要求和苛刻到极致的完美追求 - 玄学！"></a>④ 极简风格的审美要求和苛刻到极致的完美追求 - 玄学！</h4><p>这一方面就是仁者见仁智者见智了。简洁的文件管理、不复杂凌乱的桌面和常清理的使用习惯自然会让你的 Windows 使用体验蒸蒸日上。💗</p><h3 id="系统工具"><a href="#系统工具" class="headerlink" title="系统工具"></a>系统工具</h3><blockquote><p>Reference: <a href="https://github.com/Awesome-Windows/Awesome" target="_blank" rel="noopener">Awesome Windows on GitHub</a></p></blockquote><h4 id="①-WoX-An-effective-launcher-for-windows-和-Everything-The-fastest-file-folder-search-tool-by-name-⭐⭐⭐⭐⭐"><a href="#①-WoX-An-effective-launcher-for-windows-和-Everything-The-fastest-file-folder-search-tool-by-name-⭐⭐⭐⭐⭐" class="headerlink" title="① WoX -  An effective launcher for windows 和 Everything - The fastest file/folder search tool by name ⭐⭐⭐⭐⭐"></a>① <a href="https://github.com/Wox-launcher/Wox" target="_blank" rel="noopener">WoX -  An effective launcher for windows</a> 和 <a href="https://www.voidtools.com/" target="_blank" rel="noopener">Everything - The fastest file/folder search tool by name</a> ⭐⭐⭐⭐⭐</h4><p><img src="https://i.loli.net/2018/07/28/5b5b63b935a7b.png" alt="04_WoX 全局搜索.png"></p><p>WoX 是 Windows 上大名鼎鼎的开源启动器，我派对它有详尽的介绍 → 在<a href="https://sspai.com/post/33460" target="_blank" rel="noopener">这里</a>。</p><p>WoX 的看家功夫是基于 Everything 的基本文件搜索功能，它能在不到一秒钟的时间内将你想要的文件进行搜索并展现出来，快如闪电，当然这也包括将你要打开的应用快捷方式搜索出来，因而 WoX 可以充当应用程序的快捷启动器。除此之外，WoX 还可以调用计算器、预览颜色、打开控制面板的某项选项、直接调用搜索引擎搜索内容和直接运行 Shell 命令等等，而这些功能都归功于其强大的 Plugin 插件功能。当然 WoX 也提供了外观主题的定制功能。</p><p>WoX 和 Everything 两工具的完美结合，在使用体验上可以媲美 macOS 上的 Spotlight、Alfred 之流。</p><h4 id="②-QuickLook-一个空格键预览工具-⭐⭐⭐⭐⭐"><a href="#②-QuickLook-一个空格键预览工具-⭐⭐⭐⭐⭐" class="headerlink" title="② QuickLook - 一个空格键预览工具 ⭐⭐⭐⭐⭐"></a>② QuickLook - 一个空格键预览工具 ⭐⭐⭐⭐⭐</h4><p><img src="https://i.loli.net/2018/07/28/5b5b63d23e934.png" alt="05_QuickLook.png"></p><p>macOS 上的「一指禅」—— 空格预览文件内容，绝对是一个经典、令人印象深刻的功能。在 Windows 上，QuickLook 可以完美实现空格预览的功能，能够预览图片、文本、docx 文档、甚至是各种源码等等一系列文件。macOS 一指禅在 Windows 上也能完美践行了。🦄</p><p><img src="https://i.loli.net/2018/07/28/5b5b63ee8646d.png" alt="06_空格预览图片、文本和 Markdown.png"></p><p>QuickLook 可以直接在 Windows 应用商店免费下载得到。</p><h4 id="③-快贴-真正的云剪贴板-⭐⭐⭐⭐"><a href="#③-快贴-真正的云剪贴板-⭐⭐⭐⭐" class="headerlink" title="③ 快贴 - 真正的云剪贴板 ⭐⭐⭐⭐"></a>③ <a href="http://clipber.com/clipber/?rnd=7.387842810337832&amp;source=www" target="_blank" rel="noopener">快贴 - 真正的云剪贴板</a> ⭐⭐⭐⭐</h4><blockquote><p>Reference: <a href="https://sspai.com/post/43775" target="_blank" rel="noopener">少数派 - 好用的全平台剪切板工具，我们为你找到了这 3 款</a></p></blockquote><p>快贴是一个免费的跨平台的剪贴板同步工具，能够在多端设备同步剪贴板，并对剪贴板涉密内容进行自动识别、加密传输。</p><p><img src="https://i.loli.net/2018/07/28/5b5b64126cc58.jpg" alt="07_快贴全局快捷键.jpg"></p><p>我在 iOS 和 Windows 端同时下载了快贴，在 iOS 保持后台运行的情况下，我在手机上复制的内容，能够很快的同步到云端，进而在 Windows 端能够粘贴。但是这个过程比 macOS 繁琐的地方在于，我需要通过全局快捷键来手动触发粘贴端的同步，这样的多一步操作虽说影响体验，也肯定不如 macOS 闭源的生态系统好，但是至少我不必用微信、QQ 之流当作我电脑与手机沟通的渠道了。</p><h4 id="④-Send-Anywhere-⭐⭐⭐⭐⭐"><a href="#④-Send-Anywhere-⭐⭐⭐⭐⭐" class="headerlink" title="④ Send Anywhere ⭐⭐⭐⭐⭐"></a>④ <a href="https://send-anywhere.com/file-transfer" target="_blank" rel="noopener">Send Anywhere</a> ⭐⭐⭐⭐⭐</h4><blockquote><p>Reference: <a href="https://sspai.com/post/40047" target="_blank" rel="noopener">少数派 - 免费全平台的文件分享利器：SendAnywhere</a></p></blockquote><p>Send Anywhere 将文件上传到一个 p2p 网络上面，并非其服务器上，接受端通过随机六位接收码进行文件接受。这样的传输方式保证了文件的安全性和完整性，又能有相当的上传、下载和传输速度。Send Anywhere 可以说是全平台 Airdrop 了。</p><p><img src="https://i.loli.net/2018/07/28/5b5b642dd63cd.jpg" alt="08_Send Anywhere.jpg"></p><p>同时 Send Anywhere 有设备记忆功能，在曾经传输过文件的设备上，下一次传输的时候，六位接收码都不必输入。这样的分享文件的特性可以说是跨平台的救命稻草了。我在使用过程中除了在 Windows 平台传输结束之后 Send Anywhere 本身有几次会卡死，其他体验都极佳。</p><h3 id="效率工具"><a href="#效率工具" class="headerlink" title="效率工具"></a>效率工具</h3><h4 id="①-smpic-开源的-sm-ms-图床上传软件"><a href="#①-smpic-开源的-sm-ms-图床上传软件" class="headerlink" title="① smpic - 开源的 sm.ms 图床上传软件"></a>① smpic - 开源的 sm.ms 图床上传软件</h4><p>我的博客图片全部都放到了第三方的图床上面，这让我需要有一个便捷的图片上传途径。</p><p>在 macOS 上面，这篇文章里面：<a href="https://spencerwoo.com/2018/01/28/SM-MS/">SM.MS - 一名优秀的图床的艺术之旅</a> 我介绍了利用 Automator 实现一个全局上传并自动转换为 Markdown 格式的图片路径的解决方案。在 Windows 上也有同样的便捷手段。</p><p>smpic 通过 SM.MS 图床的 API 与大名鼎鼎的 AutoHotKey 脚本实现了这样的图片上传利器，我将快捷键绑定为 <code>Ctrl</code> + <code>Alt</code> + <code>U</code>，这样点击图片按下快捷键直接就可以将图片上传至图床，并同时返回相应的图片引用链接，一气呵成。smpic 同样，是一款开源、免费的软件，可以在这里 → <a href="https://github.com/kookob/smpic" target="_blank" rel="noopener">smpic - 开源的 sm.ms 图床上传软件</a> 进行下载</p><h4 id="②-Typora-可能是-Windows-上最好的-Markdown-编辑器"><a href="#②-Typora-可能是-Windows-上最好的-Markdown-编辑器" class="headerlink" title="② Typora - 可能是 Windows 上最好的 Markdown 编辑器"></a>② Typora - 可能是 Windows 上最好的 Markdown 编辑器</h4><p><img src="https://i.loli.net/2018/07/28/5b5b6447c9297.png" alt="09_Typora.png"></p><p>Typora 不必多说了，基本上是 Windows 上写 Markdown 的必备利器了。我的这篇文章就是在 Windows 的 Typora 上面编写完成的。我派对 Typora 也有详尽的介绍，在这里 –&gt; <a href="https://sspai.com/post/30292" target="_blank" rel="noopener">让 Markdown 写作更简单，免费极简编辑器：Typora</a></p><h4 id="③-Snipaste-可能是-Windows-上最好的截图工具"><a href="#③-Snipaste-可能是-Windows-上最好的截图工具" class="headerlink" title="③ Snipaste - 可能是 Windows 上最好的截图工具"></a>③ Snipaste - 可能是 Windows 上最好的截图工具</h4><p><img src="https://i.loli.net/2018/07/28/5b5b646422f4c.png" alt="10_Snipaste.png"></p><p>Snipaste 着实是 Windows 上最好的截图工具。但 Snipaste 除了我们常见的截图标注、窗口检测、全局快捷键等等简朴必备技能，还有贴图、取色等等高阶可玩性。目前 Snipaste 在 Windows 商店就可以下载得到，并且就在最近几天 Snipaste 也发布了 Pro 版本，增加了更多的玩法。</p><p><img src="https://i.loli.net/2018/07/28/5b5b6480499fa.gif" alt="11_Snipaste In Action.gif"></p><p>Snipaste 的开发者对 Snipaste 很是上心，我派单独采访了这位同学，在这里有更加具体的介绍 –&gt; <a href="https://sspai.com/post/35097" target="_blank" rel="noopener">幕后丨他做了最强免费「截图」工具 Snipaste 后，还有上万字的话想说</a></p><p>上面介绍的工具中，除了 Typora 和图床上传工具 smpic 以外（smpic 因为免安装，所以不支持开机自启动），剩下的都有幸被我加入开机自启动名单。🎉</p><h3 id="开发环境"><a href="#开发环境" class="headerlink" title="开发环境"></a>开发环境</h3><blockquote><p>Reference: <a href="https://github.com/lloydstubber/my-wsl-setup" target="_blank" rel="noopener">My WSL Setup by lloydstubber</a></p></blockquote><p>经过近两年的开发，目前 Windows Subsystem For Linux（以下简称 WSL）已经十分完善。我从微软商店下载安装了 Ubuntu 18.04 作为 WSL 的系统，并使用 Ubuntu 下的 <code>aptitude</code> 包管理工具链配置了我的开发环境。安装 WSL 的详细步骤在 –&gt; <a href="https://docs.microsoft.com/zh-cn/windows/wsl/install-win10" target="_blank" rel="noopener">这里</a>。</p><p><img src="https://i.loli.net/2018/07/28/5b5b6498e87db.png" alt="12_Ubuntu WSL.png"></p><p>在 WSL 中我安装了我的必备开发工具：</p><ul><li><code>git</code> 代码版本控制</li><li><code>ssh</code> 远程服务器连接 🔗</li><li><code>zsh</code> 与 <code>oh-my-zsh</code> Shell 环境</li></ul><p>在 Windows 中我通过 Hyper 终端环境进行实战。</p><p>Hyper 是一个基于 Election 的终端 Terminal Emulator，是一个插件丰富的、跨平台的终端。我写过一个有关它的详细介绍，在这里 –&gt; <a href="https://spencerwoo.com/2018/06/16/Terminal/">HOW TO | 让自己的终端漂亮得不像实力派</a>。在 Windows 下，可以通过 Hyper 调用 WSL 中的 <code>bash.exe</code>，这样就不用面对万恶的小黑框了。😈</p><p><img src="https://i.loli.net/2018/07/28/5b5b64b2096d5.png" alt="13_我的当前开发环境.png"></p><p>这样折腾之后，一套可用的基于命令行的开发环境也处于可用状态了。目前存在的问题是从 Windows 端调用 Linux 内部的指令还是有些问题，比如我在 Visual Studio Code 中试图调用 Linux 环境下的 Python 解释器进行调试就异常麻烦，目前 Visual Studio Code 团队对 C/C++ 和 Node.js 的调试都已经适配完成，至于 Python、Go 等语言，我相信未来的适配也会越来越完善。</p><p><br></p><h2 id="最后的体验"><a href="#最后的体验" class="headerlink" title="最后的体验"></a>最后的体验</h2><p>经过这样的折腾，我也基本上实现了 iPhone 和 Windows 的无缝联动，在 Windows 上面，效率工具和开发环境的体验也和 macOS 上的体验相差无几了。</p><p>当然，为了习惯去让一个系统无谓的模拟另一个系统的体验是毫无意义的，我在 Windows 上可以使用 OneDrive 方便的同步我的文件，可以利用手写笔方便的对 PDF 进行标注，在 OneNote 上进行笔记书写，甚至可以用 Autodesk SketchBook 进行绘画。这些都是 macOS 上无法完成的功能。同时，Windows 上 Office 套件的体验，我不得不承认要比在 macOS 上好 100 倍。</p><p>现在对我而言，Windows 最不方便的地方还是在于，在做软件与计算机方面学习，下载依赖有着诸多不便，毕竟不是原生的 Unix，但综合体验上，无论是美学、还是效率，我给我目前的 Windows 打五星。⭐⭐⭐⭐⭐</p><p><img src="https://i.loli.net/2018/07/28/5b5b64c596554.jpg" alt="14_My ThinkPad.jpg"></p><p>虽然服役两年的 MacBook 因为被动散热和 m5 处理器让我无奈使其退役，但是这款 MacBook 依旧是我使用过最为美丽的电脑之一。</p><blockquote><p>我看过太多人被习惯绑架。比如，用 IE 浏览器习惯了，不习惯用 Chrome；用 Windows 习惯了，觉得 macOS  用起来别扭。哪怕是买了 Mac 笔记本也要去安装一个盗版 Windows；用 iPhone 习惯了，用不了  Android；用一门编程语言用习惯了，不想学第二门编程语言。</p></blockquote><p>人不能被工具禁锢啊。</p><p>就这样，撒花。🎉</p><p><br></p><p><a href="https://spencerwoo.com">© Spencer Woo</a></p>]]></content>
    
    <summary type="html">
    
      
      
        
        
          
        
      
    
    </summary>
    
    
      <category term="tutorial" scheme="https://spencerwoo.com/tags/tutorial/"/>
    
      <category term="sexy moves" scheme="https://spencerwoo.com/tags/sexy-moves/"/>
    
      <category term="sspai" scheme="https://spencerwoo.com/tags/sspai/"/>
    
  </entry>
  
  <entry>
    <title>應用推介 | Humble New Tab Page for Chrome</title>
    <link href="https://spencerwoo.com/2018/07/09/Humble/"/>
    <id>https://spencerwoo.com/2018/07/09/Humble/</id>
    <published>2018-07-09T06:38:09.000Z</published>
    <updated>2018-07-14T16:17:08.130Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>Chrome 浏览器因为其众多扩展和丰富的插件使之成为浏览器的一哥，丰富的插件也让我们能够高度定制化我们的 Chrome 浏览器。</p><blockquote><p>每当你打开一个新的标签页的时候，都会想些什么呢？无论你是需要一个帮你整理心绪的空间，还是一个番茄时钟，亦或是一张放松身心的图片 … 新标签页除了一个空白页面以外还能玩出很多新的花样。</p></blockquote><p>但，不。</p><p><strong>在空白页上，我只想要空白。</strong></p><p>在尝试了包括我派推荐的 Infinity New Tab、Anyway.Tab、Unsplash Instant 等等各个花里胡哨、华丽臃肿的 Chrome 浏览器新标签页插件之后，我最终选择了叫做 Humble New Tab Page 的 Chrome 新标签页插件。</p><p><a href="https://chrome.google.com/webstore/detail/humble-new-tab-page/mfgdmpfihlmdekaclngibpjhdebndhdj" target="_blank" rel="noopener">Humble New Tab Page</a> &lt;– 下载在这里，官方地址，需要科学上网。</p><p><a href="https://www.crx4chrome.com/extensions/mfgdmpfihlmdekaclngibpjhdebndhdj/" target="_blank" rel="noopener">Humble New Tab Page</a> &lt;– 下载地址在这里，第三方 Chrome 拓展地址 <code>Crx4chrome</code>，应该不需要科学上网。</p><p><img src="https://i.loli.net/2018/07/09/5b43092cbba62.png" alt="img"></p><p><br></p><h1 id="⭐️-Humble-New-Tab-Page-低调的新标签页"><a href="#⭐️-Humble-New-Tab-Page-低调的新标签页" class="headerlink" title="⭐️ Humble New Tab Page: 低调的新标签页"></a>⭐️ Humble New Tab Page: 低调的新标签页</h1><p>功能如其名，低调、内敛，在喧嚣的众插件中独树一帜的 Humble New Tab Page 功能一点不差，却能简约如白纸。</p><p>每次打开新标签页，我们面对的只有精美设计的直达链接与可选的天气信息，没有多余的、冗杂的信息，只有纯粹的效率，这是我内心中最能接受的新标签页的选择。</p><p>我的 Chrome 使用习惯是打开浏览器之后直接在搜索栏搜索我想要的内容，亦或是点击常用网址进行浏览。我没有用浏览器进行时间管理的需要，更不需要在浏览器中记录我的任务清单或是打开一个番茄时钟。不，我用浏览器，只用到它的浏览网页功能，惟精惟一嘛。（手动狗头 🐶）</p><p>Humble New Tab Page 设计精简纯粹，主要 UI 界面分为两栏，效率至上。</p><p><img src="https://i.loli.net/2018/07/09/5b4312d2ea503.png" alt="img"></p><p>在使用 Chrome 时，我将最常用的标签页收藏在「书签栏」里，Humble New Tab Page 最关键的功能就是这里了。它能够将我的书签栏收藏的网址链接美丽的展现在新标签页中的第一栏。</p><p>第二栏分别是常用网址 Most Visited，Chrome 应用 Chrome APPs，最近书签 Recent Bookmarks，可选天气信息、最近关闭页面和其他设备同步过来的书签 Other Devices。这些栏目点击即可以文件夹的形式展开，天气信息同样。</p><p><img src="https://i.loli.net/2018/07/09/5b4314fc15b23.gif" alt="12"></p><p><br></p><h1 id="⭐️-低调的设置"><a href="#⭐️-低调的设置" class="headerlink" title="⭐️ 低调的设置"></a>⭐️ 低调的设置</h1><p>最基础的 UI 也需要可定制的地方，Humble New Tab Page 内置了很多设置选项，能够自定义包括字体、色彩主体、边栏页边距、动画效果等等许多地方。</p><p>当然，那些热爱壁纸的同学，也可以利用 Unsplash 无版权图库的 API 来进行壁纸日更。</p><p><img src="https://i.loli.net/2018/07/09/5b431b961b2b6.png" alt="min"></p><p>在 Humble New Tab Page 的设置里（右上角隐秘的小扳手图标那里）我们可以自定义背景，点击设置 -&gt; Appearance -&gt; Background Image，将 URL 设置为 <a href="https://source.unsplash.com/1920x1080" target="_blank" rel="noopener">https://source.unsplash.com/1920x1080</a> 即可得到每次刷机即更新的高清 Unsplash 壁纸。</p><p>我们根据 Unsplash 的 API 还可以进行更多的配置：</p><ul><li>每日更新的图片：<a href="https://source.unsplash.com/daily" target="_blank" rel="noopener">https://source.unsplash.com/daily</a></li><li>分辨率为 2K 的图片：<a href="https://source.unsplash.com/2560x1440" target="_blank" rel="noopener">https://source.unsplash.com/2560x1440</a></li><li>只从 erondu 的图片库中进行更新，分辨率为 1600 × 900 的图片：<a href="https://source.unsplash.com/user/erondu/1600x900" target="_blank" rel="noopener">https://source.unsplash.com/user/erondu/1600x900</a></li><li>等等</li></ul><p>更多的配置信息请参考官方文档：<a href="https://source.unsplash.com/" target="_blank" rel="noopener">https://source.unsplash.com/</a></p><p><br></p><h1 id="⭐️-可高度进行配置的-CSS"><a href="#⭐️-可高度进行配置的-CSS" class="headerlink" title="⭐️ 可高度进行配置的 CSS"></a>⭐️ 可高度进行配置的 CSS</h1><p>Humble New Tab Page 的本体就是利用 CSS 进行界面外观定义的，于是我们自然可以通过直接修改 CSS 来对其进行配置。</p><p><img src="https://i.loli.net/2018/07/09/5b431db8e8b4a.png" alt="11"></p><p>这就是 Humble New Tab Page 的介绍咯。</p><p>⭐️ 低调不简单 纯粹高效率 ⭐️</p><p>感谢阅读。</p><p><br></p><p><a href="https://spencerwoo.com">© Spencer Woo</a></p>]]></content>
    
    <summary type="html">
    
      
      
        
        
          
        
      
    
    </summary>
    
    
      <category term="tutorial" scheme="https://spencerwoo.com/tags/tutorial/"/>
    
      <category term="sexy moves" scheme="https://spencerwoo.com/tags/sexy-moves/"/>
    
  </entry>
  
  <entry>
    <title>Vultr Helper | 随时随地，看你的服务器</title>
    <link href="https://spencerwoo.com/2018/06/28/VultrHelper/"/>
    <id>https://spencerwoo.com/2018/06/28/VultrHelper/</id>
    <published>2018-06-28T08:12:05.000Z</published>
    <updated>2018-08-11T12:06:21.255Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p><img src="https://i.loli.net/2018/06/25/5b30d07d03b86.png" alt="img"></p><p>What is Vultr?</p><p>Vultr 是一家经济实惠、价格低廉、网络稳定的 VPS 提供商。即：你可以在 Vultr 那里买到一台自己用的服务器，地址位于美洲、欧洲、日本或者澳洲等等。你可以利用 Vultr 给你提供的服务器以及配套服务，来运行自己的东西，比如在上面利用 WordPress 搭建自己的网站、在上面运行脚本抓取你要的数据等等。</p><p>如果你还是一头雾水，那么这个脚本可能并不适合你。</p><p>如果你还没尝试过 JSBox 的魅力，那么请参考这一篇文章：<a href="https://sspai.com/post/42361" target="_blank" rel="noopener">JSBox: 一个创造工具的工具</a></p><p>下面是 Vultr Helper，欢迎食用。</p><p><br></p><h1 id="x2601-Vultr-Helper"><a href="#x2601-Vultr-Helper" class="headerlink" title="&#x2601; Vultr Helper"></a><span class="github-emoji" title="cloud" data-src="https://assets-cdn.github.com/images/icons/emoji/unicode/2601.png?v8">&#x2601;</span> Vultr Helper</h1><p>一款运行在 JSBox (iOS) 上的 Vultr 服务器账户查询小工具。</p><p>Vultr Helper 利用 <a href="https://vultr.com" target="_blank" rel="noopener">Vultr</a> 提供的 API 查询您的账户余额、账户信息以及本月花销。</p><p>同时以小组件的形式完美的展现在 Today 栏目里面。</p><p><a href="https://xteko.com/redir?name=Vultr-Helper&amp;url=https://raw.githubusercontent.com/spencerwoo98/jsbox-vultr-helper/master/vultr-helper.js" target="_blank" rel="noopener">Vultr-Helper 下载地址</a></p><p><img src="https://i.loli.net/2018/06/27/5b33475402316.png" alt="img"></p><p><br></p><h2 id="1-申请您自己的-API-Key"><a href="#1-申请您自己的-API-Key" class="headerlink" title="1. 申请您自己的 API Key"></a>1. 申请您自己的 API Key</h2><p>访问链接 <span class="github-emoji" title="link" data-src="https://assets-cdn.github.com/images/icons/emoji/unicode/1f517.png?v8">&#x1f517;</span> <a href="https://my.vultr.com/settings/#settingsapi" target="_blank" rel="noopener">Vultr API Key</a> 来生成您自己的 API Key，此脚本依赖于 API Key 与 Vultr 账户进行沟通。</p><p><img src="https://i.loli.net/2018/06/23/5b2e35fd242b2.jpg" alt="img"></p><p><br></p><h2 id="2-更改-API-的-IP-使用权限"><a href="#2-更改-API-的-IP-使用权限" class="headerlink" title="2. 更改 API 的 IP 使用权限"></a>2. 更改 API 的 IP 使用权限</h2><p>Vultr 的 API 权限管理很合理。</p><p>请在刚刚 API Key 申请页面下面的 Access Control 部分将您自己的 IP 地址添加至白名单（或者允许全部 IPv4 地址访问）。</p><p><br></p><h2 id="3-将代码第一行-apiKey-更换成您自己的-API-Key"><a href="#3-将代码第一行-apiKey-更换成您自己的-API-Key" class="headerlink" title="3. 将代码第一行 apiKey 更换成您自己的 API Key"></a>3. 将代码第一行 <code>apiKey</code> 更换成您自己的 API Key</h2><p>这样运行，就可以显示您 Vultr 云账户中包括账户邮箱、账户姓名、余额、本月使用金额等等信息。</p><p><br></p><h2 id="4-利用-curl-请求你的-Server-的唯一识别码-serverSubId"><a href="#4-利用-curl-请求你的-Server-的唯一识别码-serverSubId" class="headerlink" title="4. 利用 curl 请求你的 Server 的唯一识别码 serverSubId"></a>4. 利用 <code>curl</code> 请求你的 Server 的唯一识别码 <code>serverSubId</code></h2><blockquote><p>v1.1.0 新版本功能：根据服务器唯一识别码更新服务器信息。</p></blockquote><p>在终端中运行代码：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">curl -H 'API-Key: YOUR_OWN_API_KEY' "https://api.vultr.com/v1/server/list"</div></pre></td></tr></table></figure><p>同样也要将上面命令中的 <code>API-Key</code> 后面换成你自己的 <code>API_Key</code>，得到返回数据的每个级别就是服务器唯一识别码，即 Server <code>SUBID</code>.</p><p><img src="https://i.loli.net/2018/06/27/5b334eacc86d5.jpg" alt="img"></p><p>这样找到服务器唯一识别码之后，将此项数据在代码中更新，这样也就得到了服务器的具体信息显示。</p><p>推荐如果将本小组件添加至 Today Widget，那么推荐将视图高度设置为 300.</p><p><br></p><p>欢迎来 Star 与 Fork，项目地址位于 –&gt; <a href="https://github.com/spencerwoo98/jsbox-vultr-helper" target="_blank" rel="noopener">https://github.com/spencerwoo98/jsbox-vultr-helper</a></p><p><br></p><h1 id="License"><a href="#License" class="headerlink" title="License"></a>License</h1><p>This project is published via the <a href="https://github.com/spencerwoo98/jsbox-vultr-helper/blob/master/LICENSE" target="_blank" rel="noopener">MIT License</a></p><p>© Spencer Woo</p>]]></content>
    
    <summary type="html">
    
      
      
        
        
          
        
      
    
    </summary>
    
    
      <category term="tutorial" scheme="https://spencerwoo.com/tags/tutorial/"/>
    
      <category term="code" scheme="https://spencerwoo.com/tags/code/"/>
    
      <category term="sexy moves" scheme="https://spencerwoo.com/tags/sexy-moves/"/>
    
      <category term="sspai" scheme="https://spencerwoo.com/tags/sspai/"/>
    
  </entry>
  
  <entry>
    <title>HOW TO | 让自己的终端漂亮得不像实力派</title>
    <link href="https://spencerwoo.com/2018/06/16/Terminal/"/>
    <id>https://spencerwoo.com/2018/06/16/Terminal/</id>
    <published>2018-06-16T14:40:40.000Z</published>
    <updated>2018-06-17T10:08:47.950Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><blockquote><p>本篇文章在 macOS 下编写， 在 Windows 下的情况可能不尽相同，请根据自己系统情况进行自行改善。</p></blockquote><p>不论是在高中、大学时候学习基础编程课程，用 Dev C++ 或是别的软件学习 C 语言等等知识，还是在一些简陋的 Windows 系统纯命令行形式的软件运行时候，我们都遇到过所谓的小黑框「Command Prompt」，也就是「命令提示符」。</p><blockquote><p>如果不知道这个是什么的同学请：</p><ul><li>Windows 下：通过 <code>Win + R</code> 快捷键调出「运行」然后输入 <code>CMD</code> 并回车就可以看到下图所示的样子。</li><li>macOS 下：通过 <code>⌘ + Space</code> 快捷键调出「聚焦搜索」然后输入 <code>Terminal</code> 并回车就可以打开 macOS 下系统默认终端。</li><li>Linux 下：我不相信你不知道终端是什么 <span class="github-emoji" title="beers" data-src="https://assets-cdn.github.com/images/icons/emoji/unicode/1f37b.png?v8">&#x1f37b;</span></li></ul></blockquote><p><img src="https://i.loli.net/2018/06/16/5b2523671606e.png" alt="img"></p><p>对如上图样子的小黑框的无奈与抵触，可能成为了很多同学入门编程的障碍。可是大多数人们并不知道这就是所谓的终端，以及它在包括 Windows，macOS 和 Linux 下面的重要性。</p><p>今天这篇文章我们就来对 macOS 和其他类 Unix 操作系统下的「终端」进行美化，就像项目 <code>Oh My Zsh</code> 说的一样：</p><blockquote><p><strong>Oh My Zsh will not make you a 10x developer…but you might feel like one.</strong></p></blockquote><p><strong>我们把终端变漂亮可能不会让你效率提升、码题牛逼，但是我们可以让你感觉自己特别厉害。<span class="github-emoji" title="wink" data-src="https://assets-cdn.github.com/images/icons/emoji/unicode/1f609.png?v8">&#x1f609;</span></strong></p><p><br></p><h1 id="0x01-抛弃系统自带终端"><a href="#0x01-抛弃系统自带终端" class="headerlink" title="0x01 抛弃系统自带终端"></a>0x01 抛弃系统自带终端</h1><p>不论是 macOS 还是 Windows 下，我都不推荐使用系统自带终端。无论是可拓展性还是可编程性都被「系统自带」这样的特点限制。特别是 Windows 下的万恶之源「小黑框」，在 8012 年真的是一无是处。它所用的等宽字体 (Monospace) 甚至是宋体 <span class="github-emoji" title="poop" data-src="https://assets-cdn.github.com/images/icons/emoji/unicode/1f4a9.png?v8">&#x1f4a9;</span>. </p><p>今天的主角是一款基于 <code>Electron</code> 的跨平台终端 Terminal Emulator: <strong>Hyper</strong>.</p><p>下载地址在官网：<a href="https://hyper.is" target="_blank" rel="noopener">https://hyper.is</a></p><blockquote><p><a href="https://github.com/electron/electron" target="_blank" rel="noopener"><code>Electron</code></a> 是一个利用最新 Web 技术栈搭建跨平台应用的项目，比如 GitHub 出品的代码编辑器 Atom 和微软出品的 VSCode.</p></blockquote><p>Hyper 是一个开源的、全平台适用的、有着丰富主题和插件的现代化终端。又由于 Hyper 是基于 <code>Electron</code> 的，所以它的插件、主题等等可拓展性都非常强大。几行简单的 Javascript, HTML, CSS 代码，你就甚至可以定制自己的插件。</p><p><br></p><h1 id="0x02-善用-Hyper-插件"><a href="#0x02-善用-Hyper-插件" class="headerlink" title="0x02 善用 Hyper 插件"></a>0x02 善用 Hyper 插件</h1><p>安装 Hyper 终端插件十分简单，打开 Hyper 之后一行代码搞定：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hyper i verminal</div></pre></td></tr></table></figure><p> 这样就安装了 <code>verminal</code> 这个插件。</p><p>Hyper 的官方推荐全部插件在这里可以找到 –&gt; <a href="https://hyper.is/plugins" target="_blank" rel="noopener">https://hyper.is/plugins</a></p><p>Hyper 的官方推荐全部主题在这里可以找到 –&gt; <a href="https://hyper.is/themes" target="_blank" rel="noopener">https://hyper.is/themes</a></p><p>当然也有一个社区驱动的 awesome-hyper 项目，里面有着更多开源的 hyper 终端插件、主题等等，在这里 –&gt; <a href="https://github.com/bnb/awesome-hyper" target="_blank" rel="noopener">https://github.com/bnb/awesome-hyper</a></p><p>这里我推荐一个十分有趣的插件：<code>hyperpower</code></p><p>这个类似于 Atom 里面的一个叫做 <code>activate-power-mode</code> 的插件，能够实现下面十分皮的效果：</p><p><img src="https://i.loli.net/2018/06/16/5b2529acc4788.gif" alt="img"></p><p>Hyper 的设置选项是一个 <code>.hyper.js</code> 文件，可以进行具体的样式修改。比如我们可以通过修改 <code>fontFamily</code> 这一项来改变终端字体，<code>cursorColor</code> 来改变光标颜色等等。</p><p><img src="https://i.loli.net/2018/06/16/5b252bc8bc9b3.png" alt="img"></p><p>当然，在你完成了以上全部内容之后，我们也仅仅是将我们终端的外观进行了改善，这一套壳子仅仅是负责呈现外观，内部的 <code>shell</code> 仍然和系统相关，所以我们这里只能抛弃只能用 <code>Command Prompt</code> 和 <code>Windows Powershell</code>  的 Windows 同学了。<span class="github-emoji" title="wave" data-src="https://assets-cdn.github.com/images/icons/emoji/unicode/1f44b.png?v8">&#x1f44b;</span></p><p><br></p><h1 id="0x03-macOS-下，抛弃-bash"><a href="#0x03-macOS-下，抛弃-bash" class="headerlink" title="0x03 macOS 下，抛弃 bash"></a>0x03 macOS 下，抛弃 <code>bash</code></h1><p>所谓的 <code>bash</code> 就是终端内在，即 <code>shell</code>。现在人们常在用的 <code>shell</code> 除了 <code>bash</code> 还有 <code>zsh</code>（当然还有 <code>csh</code>、<code>fish</code> 等等）。这里我介绍的 <code>zsh</code> 是我认为在类 Unix 系统下最优雅的 <code>shell</code> 。但是由于 <code>zsh</code> 设置复杂，从前总没有太多人在用，但是得益于开源社区，我们有了 <a href="https://github.com/robbyrussell/oh-my-zsh" target="_blank" rel="noopener">Oh My Zsh</a> 这个项目。</p><blockquote><p>Oh My Zsh is an open source, community-driven framework for managing your <a href="https://www.zsh.org/" target="_blank" rel="noopener">zsh</a> configuration.</p></blockquote><p>借助 Oh My Zsh 我们可以直接得到开箱即用的 <code>zsh</code> 体验。</p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>首先你的系统上需要有 <code>curl</code> 或 <code>wget</code> 与 <code>git</code>. </p><p>之后，通过运行：</p><ul><li><p><code>curl</code> 下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sh -c "$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)"</div></pre></td></tr></table></figure></li><li><p><code>wget</code> 下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sh -c "$(wget https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh -O -)"</div></pre></td></tr></table></figure></li></ul><p>稍等片刻，你就会发现你的终端变成了 <code>zsh</code> . 庆祝 <span class="github-emoji" title="fist" data-src="https://assets-cdn.github.com/images/icons/emoji/unicode/270a.png?v8">&#x270a;</span></p><h2 id="配置（插件）"><a href="#配置（插件）" class="headerlink" title="配置（插件）"></a>配置（插件）</h2><p>Oh My Zsh 同样也支持诸多插件，比如默认开启的 Git 插件就可以十分清晰的显示出当前代码仓库里与远程仓库是否同步，以及最新同步日期等等信息。</p><p>这里我推荐一个叫做 <a href="https://github.com/zsh-users/zsh-autosuggestions" target="_blank" rel="noopener"><code>zsh-autosuggestions</code></a> 的插件，利用之我们可以实现命令自动补全：</p><p><img src="https://i.loli.net/2018/06/17/5b25d7c865004.gif" alt="img"></p><p>安装方法也很简单，在 macOS 下利用 Homebrew：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">brew install zsh-autosuggestions</div></pre></td></tr></table></figure><p>然后将下面加入 <code>.zshrc</code>:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">source /usr/local/share/zsh-autosuggestions/zsh-autosuggestions.zsh</div></pre></td></tr></table></figure><p>（就是用你的文本编辑器，比如 Sublime Text、VSCode、Vim 等等，打开位于根目录的 <code>.zshrc</code> 文件然后将上面那行放到文件最后面就好。）</p><p>重启终端，就能看到如图效果啦！<span class="github-emoji" title="call_me_hand" data-src="https://assets-cdn.github.com/images/icons/emoji/unicode/1f919.png?v8">&#x1f919;</span></p><h2 id="配置（美化）"><a href="#配置（美化）" class="headerlink" title="配置（美化）"></a>配置（美化）</h2><p>下面就是 Oh My Zsh 的主题配置，这里也需要对 <code>.zshrc</code> 进行修改。</p><p>Oh My Zsh 有着大量的主题，你可以在这里 –&gt;<a href="https://github.com/robbyrussell/oh-my-zsh/wiki/themes" target="_blank" rel="noopener">https://github.com/robbyrussell/oh-my-zsh/wiki/themes</a> 找到所有支持的主题和他们的截屏。</p><p>这里我以 avit 主题为例，介绍如何修改 <code>.zshrc</code> 文件来配置我们的主题：</p><ul><li><p>选择你最喜欢的文本编辑器打开位于根目录的 <code>.zshrc</code> 文件，如果你没想法也可以无脑执行下面的命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">nano ~/.zshrc</div></pre></td></tr></table></figure></li><li><p>在里面找到叫做 <code>ZSH_THEME</code> 的一行，将后面「“ … ”」里面的内容换成 avit，之后重启终端即可。</p><p><img src="https://i.loli.net/2018/06/17/5b25db65974c1.png" alt="img"></p></li></ul><h2 id="进阶：安装-Spaceship-Prompt"><a href="#进阶：安装-Spaceship-Prompt" class="headerlink" title="进阶：安装 Spaceship Prompt"></a>进阶：安装 Spaceship Prompt</h2><p>提供了更加丰富的 ZSH 展现形式的 Spaceship Prompt 是 ZSH 的另一个拓展，并且它可以与 Oh My Zsh 兼容。项目地址位于 –&gt; <a href="https://github.com/denysdovhan/spaceship-prompt" target="_blank" rel="noopener">https://github.com/denysdovhan/spaceship-prompt</a></p><blockquote><p>Spaceship is a minimalistic, powerful and extremely customizable <a href="http://zsh.org/" target="_blank" rel="noopener">Zsh</a> prompt. It combines everything you may need for convenient work, without unnecessary complications, like a real spaceship.</p></blockquote><p>比如我的 hexo 文件仓库里，利用强大的 Spaceship Prompt 可以直接显示出我的环境（node）版本，Git 版本等等，十分健壮 <span class="github-emoji" title="artificial_satellite" data-src="https://assets-cdn.github.com/images/icons/emoji/unicode/1f6f0.png?v8">&#x1f6f0;</span></p><p><img src="https://i.loli.net/2018/06/17/5b25dd24e19d3.png" alt="img"></p><p>安装了 Oh My Zsh 的你，安装这个拓展也是十分容易：</p><p>在安装之前，由于 Spaceship Prompt 需要特殊的符号来显示开发环境版本信息（比如 <code>node</code>, <code>go</code> 等）所以需要安装特殊字体：<a href="https://github.com/powerline/fonts" target="_blank" rel="noopener">Powerline Fonts</a>，详细的安装文档在<a href="https://powerline.readthedocs.io/en/latest/installation/linux.html#fonts-installation" target="_blank" rel="noopener">这里</a>。简单来说，如果你是 macOS 用户，可以直接通过这样的方式来安装：</p><ul><li><p>首先安装最新版本的 Python：<code>brew install python</code></p></li><li><p>然后安装 Powerline Fonts：<code>pip install --user powerline-status</code></p></li><li>最后在 Hyper 终端的配置文件 <code>.hyper.js</code> 中修改字体，将 <code>fontFamily = &#39;...&#39;</code> 一项引号内添加「Meslo LG M for Powerline」或者其他 Powerline 字体，重启终端便可生效。</li></ul><p><img src="https://i.loli.net/2018/06/17/5b262d854e8a8.png" alt="img"></p><p><strong>下面安装 Spaceship Prompt：</strong></p><p>首先执行命令将源码克隆至本地：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git clone https://github.com/denysdovhan/spaceship-prompt.git "$ZSH_CUSTOM/themes/spaceship-prompt"</div></pre></td></tr></table></figure><p>然后将 <code>spaceship.zsh-theme</code> 链接到 Oh My Zsh 的主题文件夹下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ln -s &quot;$ZSH_CUSTOM/themes/spaceship-prompt/spaceship.zsh-theme&quot; &quot;$ZSH_CUSTOM/themes/spaceship.zsh-theme&quot;</div></pre></td></tr></table></figure><p>最后像换主题一样，在 <code>.zshrc</code> 中修改 <code>ZSH_THEME=&quot;spaceship&quot;</code> 就大功告成！</p><p><br></p><h1 id="0x04-最后"><a href="#0x04-最后" class="headerlink" title="0x04 最后"></a>0x04 最后</h1><p><img src="https://i.loli.net/2018/03/11/5aa5377418b17.jpg" alt="img"></p><p>好看是第一生产力。</p><p>折腾不息，奋斗不止。</p><p>全文完。</p><p><br></p><p><a href="https://spencerwoo.com">© Spencer Woo</a></p>]]></content>
    
    <summary type="html">
    
      
      
        
        
          
        
      
    
    </summary>
    
    
      <category term="tutorial" scheme="https://spencerwoo.com/tags/tutorial/"/>
    
      <category term="sexy moves" scheme="https://spencerwoo.com/tags/sexy-moves/"/>
    
  </entry>
  
  <entry>
    <title>Fragments | 你好貳拾 再見知乎</title>
    <link href="https://spencerwoo.com/2018/06/10/ByeZhihu/"/>
    <id>https://spencerwoo.com/2018/06/10/ByeZhihu/</id>
    <published>2018-06-10T07:19:44.000Z</published>
    <updated>2018-06-10T08:09:04.440Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><blockquote><p>啊，记录碎片。</p></blockquote><p>今天迎来了人生的第二十个年头。</p><p>今天我彻底从我的所有设备上卸载了知乎客户端。</p><p>所以，今天：</p><p><strong>你好二十、再见知乎。</strong></p><p><br></p><hr><h2 id="0x01"><a href="#0x01" class="headerlink" title="0x01"></a>0x01</h2><blockquote><p>他们说知乎上面都是装逼的人。</p><p>他们说知乎上面都是编造的故事。</p><p>他们说那叫「逼乎」。</p><p>他们甚至直接创建了网站：「逼乎」和「逼乎日报」。</p><p>当然，他们还是他们，只在乎网络上吃瓜，不在乎事实的真相。</p></blockquote><p>知乎在 2011 年创建，2014 年开放注册，2017 年人数和规模达到井喷式的增长。</p><p>2017 年是知乎走向大众的一年。</p><p>4 年的老用户。</p><p>我。</p><p><br></p><h2 id="0x02"><a href="#0x02" class="headerlink" title="0x02"></a>0x02</h2><p>「与世界分享你的知识、经验和见解。」</p><p>这是最开始的时候知乎的 slogan。</p><p>当时我是多么的激动啊，能够发现知乎这个地方。我以为知乎是互联网的清流，能够理智的讨论与发表见解。能够看到各个领域货真价实的知识，还有刘看山。</p><p>在那里面：</p><p>「有哪些直戳心灵的情诗？」构成了当年没有任何遣词造句功底的我的第一封情书。</p><p>「高考语文作文有哪些名言泛用、文艺又高大上？」成就了我高中语文作文的巅峰—— 55 分。</p><p>「<a href="https://www.zhihu.com/question/30861092/answer/51157654" target="_blank" rel="noopener">为什么这么多人在注册知乎账号的时候使用真名？</a>」我第一次认真的在网络上发表了自己的观点。</p><p>等等等…</p><p>Heart felt love. </p><p>我千里迢迢赶到三里屯去参加「不知道诊所」。</p><p>我第一批购买刘看山手办。</p><p>我还在书包上别了一个「刘看山饲养员」。</p><p>2017 年初我回答了我的第一个千赞答案：<a href="https://www.zhihu.com/question/30302242/answer/149936799" target="_blank" rel="noopener">参观秦皇岛「中国最孤独的图书馆」是怎样的体验?</a> </p><p>激动得不能自已。</p><p>可是资本是逐利的啊。人性也是险恶的。</p><p><br></p><h2 id="0x03"><a href="#0x03" class="headerlink" title="0x03"></a>0x03</h2><p>那时候，没人知道什么是知乎的时候。上面答案有一说一，有二说二。</p><p>知乎没有广告，没有混乱的时间线，没有恼人的答案。</p><p>2017 年初的时候，记得当时一家人工智能音箱—若琪，在知乎投放了 APP 开屏广告。</p><p>啊，太傻了。公司也傻，广告也傻。</p><p>果不其然，被大家喷成了弱智。</p><p><a href="https://www.zhihu.com/question/38224743" target="_blank" rel="noopener">如何评价杭州芋头科技发布的产品 Rokid（若琪）？</a>在 2018 年 6 月已经获得了 401,908 的关注量。于是这家公司在知乎的名声也坠下了低谷。</p><p>可是 2018 年的知乎，在 APP 开屏有了广告，在时间线上将广告伪装成答案，在评论区也掺杂着广告。</p><p>那么那些精准的干货答案呢？</p><p>随着机构号的扩张，营销号的侵入，我的时间线上直接布满了 IT 培训机构的广告、大 V 接的软文和一两句没有营养的话。</p><p>这知乎，还有什么留的必要。</p><p>啊，资本果真是逐利的啊。</p><p><br></p><h2 id="0x05"><a href="#0x05" class="headerlink" title="0x05"></a>0x05</h2><p><img src="https://i.loli.net/2018/06/10/5b1cda2d9cb3a.png" alt="img"></p><p>所以，再见知乎。</p><p>再见。</p><p>再见。</p><p>以 2140 次赞同，477 次感谢，1622 次收藏和 313 个关注者结束我的知乎。</p><p>要有仪式感。</p><p>撒花 <span class="github-emoji" title="bouquet" data-src="https://assets-cdn.github.com/images/icons/emoji/unicode/1f490.png?v8">&#x1f490;</span></p><p><br></p><p>© Spencer Woo</p>]]></content>
    
    <summary type="html">
    
      
      
        
        
          
        
      
    
    </summary>
    
      <category term="碎碎念" scheme="https://spencerwoo.com/categories/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"/>
    
    
      <category term="sexy moves" scheme="https://spencerwoo.com/tags/sexy-moves/"/>
    
      <category term="fragments" scheme="https://spencerwoo.com/tags/fragments/"/>
    
  </entry>
  
  <entry>
    <title>HOW TO | 魔改 macOS 状态栏</title>
    <link href="https://spencerwoo.com/2018/05/29/MacStatusBar/"/>
    <id>https://spencerwoo.com/2018/05/29/MacStatusBar/</id>
    <published>2018-05-29T07:42:50.000Z</published>
    <updated>2018-08-11T12:06:50.376Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>开源的 FreeBSD 成就了今天的 macOS，但是今天的 macOS 却因为闭源而失去了很多可定制化的地方。在 Linux 下动动编辑器改改代码就可以实现所谓的 UI 魔改，在如今的 macOS 下确实难上加难。当然为了统一设计风格而这一做的苹果公司我们还是可以理解。不过通过一些曲线救国的方式，我们的确能在某种程度上对 macOS 进行个性化的自定义。今天的菜单栏定制就是我们个性化 macOS 的第一步。</p><p>Reddit 是一个神奇的地方，是一个比百度贴吧里面讨论得更激烈，还比百度贴吧的广告少的地方。在 Reddit 里面有一个主题最近引起了我的注意：<code>r/unixporn</code></p><p><img src="https://i.loli.net/2018/05/29/5b0d08c21ffbb.jpg" alt="img"></p><p>里面的同学将自己魔改的类 Unix 系统的桌面主题、通知主题、终端配色和壁纸发出来进行分享。甚至有这个社区主题板块的人举办 Unix 系统魔改大赛。</p><p>不过这里面同学们魔改的类 Unix 系统 UI，其实大多数都是 Ubuntu 和 Arch Linux 的 Gnome 桌面、图标和状态栏。但是对美丽的向往阻止不了我们们将魔爪伸向 macOS ~</p><blockquote><p>这篇文章灵感来自于 <code>r/unixporn</code> 里面的这一篇帖子：<a href="https://www.reddit.com/r/unixporn/comments/8mbn7g/osx_minimal_oceanic/" target="_blank" rel="noopener">[OSX] Minimal Oceanic</a></p></blockquote><p><br></p><h1 id="What-is-this"><a href="#What-is-this" class="headerlink" title="What is this?"></a>What is this?</h1><p>今天我们将通过：</p><p>① 这个基于 HTML5 和 CSS 在 macOS 桌面加载小部件的工具 <span class="github-emoji" title="arrow_right" data-src="https://assets-cdn.github.com/images/icons/emoji/unicode/27a1.png?v8">&#x27a1;</span> <a href="http://tracesof.net/uebersicht/" target="_blank" rel="noopener">Übersicht</a></p><p>② 这个用 Coffeescript 写的假装自己是 macOS 状态栏的桌面小部件，or <code>Widget</code> <span class="github-emoji" title="arrow_right" data-src="https://assets-cdn.github.com/images/icons/emoji/unicode/27a1.png?v8">&#x27a1;</span> <a href="https://github.com/zzzeyez/Pecan" target="_blank" rel="noopener">Pecan</a></p><p>来实现这样的效果：</p><p><img src="https://i.loli.net/2018/06/04/5b15089cdae60.jpg" alt="img"></p><p><br></p><h1 id="Tell-me-how"><a href="#Tell-me-how" class="headerlink" title="Tell me how!"></a>Tell me how!</h1><h2 id="1-首先要安装他：Ubersicht"><a href="#1-首先要安装他：Ubersicht" class="headerlink" title="1. 首先要安装他：Übersicht"></a>1. 首先要安装他：Übersicht</h2><p> 它是一个专门用于 macOS 来做桌面小工具的插件，很轻量，几乎不耗内存。同时又因为它的小部件可以通过 Coffeescript 来自己实现，并且可以直接用 CSS 来编辑样式，让这个插件做出来的 Widget 几乎有无限可能。</p><p>安装方法有两种：</p><p><strong>【一个平常的安装方法】</strong></p><p>访问官网：<a href="http://tracesof.net/uebersicht/" target="_blank" rel="noopener">Übersicht</a> 点击下载安装。</p><p><strong>【一个牛逼的安装方法】</strong></p><p>① 下载安装使用依赖：<a href="https://brew.sh/" target="_blank" rel="noopener"><strong>Homebrew</strong></a> <span class="github-emoji" title="beer" data-src="https://assets-cdn.github.com/images/icons/emoji/unicode/1f37a.png?v8">&#x1f37a;</span></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">/usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"</div></pre></td></tr></table></figure><p>将上面的命令复制粘贴到终端中执行；</p><p>② 加入 Caskroom 拓展，这样直接可以安装 GUI 软件：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">brew tap homebrew/cask</div></pre></td></tr></table></figure><p>③ 执行命令安装 Übersicht：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">brew cask install ubersicht</div></pre></td></tr></table></figure><p>欧耶 (^o^)/ 搞定！</p><p><br></p><h2 id="2-安装-macOS-状态栏拓展包（Pecan）"><a href="#2-安装-macOS-状态栏拓展包（Pecan）" class="headerlink" title="2. 安装 macOS 状态栏拓展包（Pecan）"></a>2. 安装 macOS 状态栏拓展包（Pecan）</h2><p>Pecan 是一位同学开发的 Übersicht 的 Widget，并且开源在了 GitHub 上，项目地址<a href="https://github.com/zzzeyez/Pecan" target="_blank" rel="noopener">在这里</a>，这个项目的原理其实就是在桌面上显示一条状态栏，这样一来就能够直接覆盖掉系统原生状态栏，并且实现原生状态栏包括看时间、看连接 WiFi 名称、网络速率等等在内的一系列功能。</p><p>安装方法，执行命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git clone https://github.com/zzzeyez/Pecan.git $HOME/Library/Application\ Support/Übersicht/widgets/Pecan</div></pre></td></tr></table></figure><p>上面命令就是将这个 Pecan 拓展包的源码放到 Übersicht 的 Widget 文件夹下，这样 Übersicht 就可以读取到这个文件夹下的东西来展示 Widget.</p><p>Pecan 内置了五个主题，分别叫这些：bliss, fillmore, hasel, nurse, santafe.</p><div style="width:360px; display:block; margin:0 auto;"><img src="https://i.loli.net/2018/05/29/5b0d1c325a302.png" alt="img"></div><p>我们先开启启用主题脚本：</p><p>① 首先终端执行：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sed -i -e "s~/Users/zzzeyez/scripts/uber~HOME/Library/Application\ Support/Übersicht/widgets~g" "$HOME/Library/Application\ Support/Übersicht/widgets/Pecan/pecan-style"</div></pre></td></tr></table></figure><p>这样就通过调用 <code>sed</code> 流编辑器将脚本中的 <code>Widget</code> 路径修改为本机的路径。</p><p>② 然后将脚本放入 <code>/usr/local/bin</code> 可执行文件中，来全局调用：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mv "$HOME/Library/Application\ Support/Übersicht/widgets/Pecan/pecan-style" "/usr/local/bin"</div></pre></td></tr></table></figure><p>③ 最后，我们可以通过直接输入命令 <code>pecan-style</code> 来查看、更换主题：</p><ul><li>通过 <code>pecan-style --list</code> 来查看可用主题；</li><li>通过 <code>pecan-style --load fillmore</code> 来加载 <code>fillmore</code> 主题。</li></ul><div align="center"><img src="https://i.loli.net/2018/05/29/5b0d17cec9cb0.jpg" alt="img"></div><p><br></p><h2 id="3-将系统原生状态栏设置自动隐藏"><a href="#3-将系统原生状态栏设置自动隐藏" class="headerlink" title="3. 将系统原生状态栏设置自动隐藏"></a>3. 将系统原生状态栏设置自动隐藏</h2><div align="center"><img src="https://i.loli.net/2018/05/29/5b0d18b87fb81.jpg" alt="img"></div><p>就这样，我们的高度可定制状态栏就实现了。</p><p>有一些兼容性的问题在于：</p><ul><li>由于这个所谓的状态栏实际上只是桌面 Widget，因此它只能在桌面上进行显示，其他的应用的窗口能够将这个状态栏覆盖；</li><li>如果原生状态栏不开启自动隐藏的话，两层状态栏也会同时存在，比较尴尬。</li></ul><p>感谢 Reddit 的同学给我提供灵感，同时推荐这个 Reddit 主题：<code>r/unixporn</code>，里面一些同学做的 Linux 桌面也实在是迷人。</p><p><br></p><p><br></p><p><a href="https://spencerwoo.com">© Spencer Woo</a></p>]]></content>
    
    <summary type="html">
    
      
      
        
        
          
        
      
    
    </summary>
    
    
      <category term="sexy moves" scheme="https://spencerwoo.com/tags/sexy-moves/"/>
    
      <category term="sspai" scheme="https://spencerwoo.com/tags/sspai/"/>
    
      <category term="github" scheme="https://spencerwoo.com/tags/github/"/>
    
  </entry>
  
  <entry>
    <title>一个有意思的 Python 训练项目集 | 三周目</title>
    <link href="https://spencerwoo.com/2018/05/07/PyThree/"/>
    <id>https://spencerwoo.com/2018/05/07/PyThree/</id>
    <published>2018-05-07T05:29:20.000Z</published>
    <updated>2018-05-07T06:21:25.700Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p><a href="https://spencerwoo.com/2018/04/28/PythonTwo/">【上一篇：一个有意思的 Python 训练项目集 | 二周目】</a></p><p>今天是五月的第七天。</p><p>就在上个周末，我考完了面向对象和网络通信。可以来总结再往前一周的 Python 练习题了。</p><p><br></p><h1 id="三周目-生成验证码"><a href="#三周目-生成验证码" class="headerlink" title="三周目 | 生成验证码"></a>三周目 | 生成验证码</h1><p>这次的题目要生成一个数字验证码：</p><blockquote><p><strong>【第 0010 题】</strong></p><p>使用 Python 生成类似于下图中的<strong>字母验证码图片</strong></p></blockquote><p><img src="https://i.loli.net/2018/05/07/5aefe95386bec.jpg" alt="img"></p><p>如题。</p><h2 id="需求分析"><a href="#需求分析" class="headerlink" title="需求分析"></a>需求分析</h2><ol><li>生成随机字母</li><li>生成一个 canvas 来制作图片</li><li>生成随机色块，来填充 canvas 背景</li><li>在特定区间内，随机增加字母位置的坐标，实现字母的随机间距和随机行距</li><li>高斯模糊化全图</li></ol><p>经过这样的处理，并经过测试，腾讯提供的 OCR 是无法识别生成图片文本内容的。</p><p><img src="https://i.loli.net/2018/05/07/5aefee4fa007a.gif" alt="img"></p><h1 id="Talk-is-cheap-show-me-the-code"><a href="#Talk-is-cheap-show-me-the-code" class="headerlink" title="Talk is cheap, show me the code."></a>Talk is cheap, show me the code.</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#!/usr/bin/env python3</span></div><div class="line"><span class="comment"># -*- coding: utf-8 -*-</span></div><div class="line"></div><div class="line"><span class="string">"""</span></div><div class="line"><span class="string">使用 Python 生成类似于下图中的字母验证码图片</span></div><div class="line"><span class="string">"""</span></div><div class="line"></div><div class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image, ImageDraw, ImageFont, ImageFilter</div><div class="line"><span class="keyword">import</span> random</div><div class="line"><span class="keyword">import</span> string</div><div class="line"><span class="keyword">import</span> os</div><div class="line"><span class="keyword">import</span> errno</div><div class="line"></div><div class="line">target_dir = <span class="string">'captcha'</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">random_letter</span><span class="params">()</span>:</span></div><div class="line">    letter = random.choice(string.ascii_uppercase)</div><div class="line">    <span class="comment"># print(letter)</span></div><div class="line">    <span class="keyword">return</span> letter</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">random_color</span><span class="params">()</span>:</span></div><div class="line">    color = (random.randint(<span class="number">0</span>, <span class="number">255</span>),</div><div class="line">             random.randint(<span class="number">0</span>, <span class="number">255</span>), random.randint(<span class="number">0</span>, <span class="number">255</span>))</div><div class="line">    <span class="keyword">return</span> color</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">generate_captcha</span><span class="params">(num)</span>:</span></div><div class="line">    <span class="comment"># If to generate more than one captcha, then put in sub-dir: captcha/*.jpg</span></div><div class="line">    <span class="comment"># Else put in same dir, named captcha.jpg</span></div><div class="line">    <span class="keyword">if</span> num &gt; <span class="number">1</span>:</div><div class="line">        <span class="comment"># Check for target directory</span></div><div class="line">        <span class="keyword">try</span>:</div><div class="line">            os.makedirs(target_dir)</div><div class="line">        <span class="keyword">except</span> OSError <span class="keyword">as</span> e:</div><div class="line">            <span class="keyword">if</span> e.errno != errno.EEXIST:</div><div class="line">                <span class="keyword">raise</span></div><div class="line"></div><div class="line">    <span class="keyword">for</span> img_num <span class="keyword">in</span> range(num):</div><div class="line">        <span class="comment"># Generate canvas for captcha</span></div><div class="line">        canvas_width = <span class="number">240</span></div><div class="line">        canvas_height = <span class="number">60</span></div><div class="line">        canvas = Image.new(<span class="string">'RGB'</span>, (canvas_width, canvas_height), <span class="string">'#fff'</span>)</div><div class="line"></div><div class="line">        font = ImageFont.truetype(<span class="string">'Arial.ttf'</span>, <span class="number">45</span>)</div><div class="line">        draw = ImageDraw.Draw(canvas)</div><div class="line"></div><div class="line">        <span class="comment"># Generate random 4 digit captcha with random color</span></div><div class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">4</span>):</div><div class="line">            text_pox = <span class="number">60</span> * i + random.randint(<span class="number">5</span>, <span class="number">15</span>)</div><div class="line">            text_poy = random.randint(<span class="number">2</span>, <span class="number">10</span>)</div><div class="line">            draw.text((text_pox, text_poy), random_letter(),</div><div class="line">                      fill=random_color(), font=font)</div><div class="line"></div><div class="line">        <span class="comment"># Generate noise in canvas background</span></div><div class="line">        <span class="keyword">for</span> _ <span class="keyword">in</span> range(random.randint(<span class="number">1500</span>, <span class="number">3000</span>)):</div><div class="line">            draw.point((random.randint(<span class="number">0</span>, canvas_width),</div><div class="line">                        random.randint(<span class="number">0</span>, canvas_height)), fill=random_color())</div><div class="line"></div><div class="line">        <span class="comment"># Blur the text</span></div><div class="line">        canvas = canvas.filter(ImageFilter.BLUR)</div><div class="line">        <span class="keyword">if</span> num &gt; <span class="number">1</span>:</div><div class="line">            canvas.save(target_dir + <span class="string">'/'</span> + str(img_num) + <span class="string">'.jpg'</span>, <span class="string">'jpeg'</span>)</div><div class="line">        <span class="keyword">else</span>:</div><div class="line">            canvas.save(target_dir + <span class="string">'.jpg'</span>, <span class="string">'jpeg'</span>)</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></div><div class="line">    generate_captcha(<span class="number">1</span>)</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    main()</div></pre></td></tr></table></figure><p><br></p><h2 id="坑点分析"><a href="#坑点分析" class="headerlink" title="坑点分析"></a>坑点分析</h2><ul><li>有一个地方需要处理 Exception，就是如果要求创建的验证码多于 1 个，那么就需要新建文件夹 <code>target_dir</code>。在创建文件夹的时候需要利用 OSError 抛出异常。如下：</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># Check for target directory</span></div><div class="line"><span class="keyword">try</span>:</div><div class="line">    os.makedirs(target_dir)</div><div class="line"><span class="keyword">except</span> OSError <span class="keyword">as</span> e:</div><div class="line">    <span class="keyword">if</span> e.errno != errno.EEXIST:</div><div class="line">        <span class="keyword">raise</span></div></pre></td></tr></table></figure><ul><li>在填充背景的时候，可以只调 1500~3000 个点进行涂色，考虑到如果全部点全着色会让文字和背景对比度降低，人眼不好识别验证码，即：</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># Generate noise in canvas background</span></div><div class="line"><span class="keyword">for</span> _ <span class="keyword">in</span> range(random.randint(<span class="number">1500</span>, <span class="number">3000</span>)):</div><div class="line">    draw.point((random.randint(<span class="number">0</span>, canvas_width),</div><div class="line">                random.randint(<span class="number">0</span>, canvas_height)), fill=random_color())</div></pre></td></tr></table></figure><p>就这样。</p><p><br></p><p><br></p><p>© Spencer Woo</p>]]></content>
    
    <summary type="html">
    
      
      
        
        
          
        
      
    
    </summary>
    
    
      <category term="code" scheme="https://spencerwoo.com/tags/code/"/>
    
      <category term="sexy moves" scheme="https://spencerwoo.com/tags/sexy-moves/"/>
    
      <category term="github" scheme="https://spencerwoo.com/tags/github/"/>
    
  </entry>
  
  <entry>
    <title>Material Designed Wallpaper for Linux | 一点微小的工作</title>
    <link href="https://spencerwoo.com/2018/04/29/LinuxWall/"/>
    <id>https://spencerwoo.com/2018/04/29/LinuxWall/</id>
    <published>2018-04-29T13:34:37.000Z</published>
    <updated>2018-04-29T15:44:11.380Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="设计初衷"><a href="#设计初衷" class="headerlink" title="设计初衷"></a>设计初衷</h1><p><img src="https://i.loli.net/2018/04/29/5ae5ca937f0c7.jpg" alt="img"></p><p>折腾 Ubuntu 和 CentOS 的桌面有一段时间了。</p><p>除了 Gnome 的主题、图标和鼠标 Cursor 的风格可以定制之外，壁纸的选择也成为了很大的难题。</p><p>由于我这几天安装的主题：</p><ul><li>Arc Theme</li><li>Paper Icon</li></ul><p>都是扁平化的设计风格。于是我想自己制作一些符合 Material Design 设计规范的壁纸，并且能突显 Linux 的自己独有的桌面风格特色。</p><p>就有了下面这个 GitHub 仓库：<a href="https://github.com/spencerwoo98/linux-wallpapers" target="_blank" rel="noopener">Linux Wallpapers</a></p><p>一些微小的工作。</p><p><br></p><h1 id="HOW-TO"><a href="#HOW-TO" class="headerlink" title="HOW TO"></a>HOW TO</h1><h3 id="Linux-other-Unix-based-OS-or-Windows-with-git"><a href="#Linux-other-Unix-based-OS-or-Windows-with-git" class="headerlink" title="Linux, other Unix based OS, or Windows with git"></a>Linux, other Unix based OS, or Windows with <code>git</code></h3><ol><li>找一个合适的文件夹，或许是你放图片的那个文件夹，比如 <code>Pictures</code></li><li>在终端中定位到这个文件夹下</li><li>运行命令：<code>git clone https://github.com/spencerwoo98/linux-wallpapers</code></li><li>稍安勿躁，然后就可以看到高清无损无水印大图壁纸了 <span class="github-emoji" title="heart" data-src="https://assets-cdn.github.com/images/icons/emoji/unicode/2764.png?v8">&#x2764;</span></li></ol><h3 id="Windows-with-no-git-或者你觉得上面莫名其妙的命令让你不知所措"><a href="#Windows-with-no-git-或者你觉得上面莫名其妙的命令让你不知所措" class="headerlink" title="Windows with no git 或者你觉得上面莫名其妙的命令让你不知所措"></a>Windows with no <code>git</code> 或者你觉得上面莫名其妙的命令让你不知所措</h3><p>点击链接 –&gt; <a href="https://github.com/spencerwoo98/linux-wallpapers/archive/master.zip" target="_blank" rel="noopener">Linux Wallpapers Material Design</a> 下载压缩包，解压即可看见。</p><p><br></p><h1 id="什么样子？"><a href="#什么样子？" class="headerlink" title="什么样子？"></a>什么样子？</h1><p><img src="https://i.loli.net/2018/04/29/5ae5d18625520.jpg" alt="img"></p><p>先有这样的五张，后面可能会有更多。敬请期待。</p><p>为什么是 Ubuntu 和 Deepin？周围用这两个系统的人儿相对来说最多了。</p><p><br></p><div align="center"><br><strong>【版权信息】</strong><br></div><p>底图来自 Google Image Search: Material Design Wallpapers.</p><p>Logo 和其他品牌类配色版权归属：</p><ul><li>Ubuntu 母公司 The Canonical Group</li><li>Deepin 武汉深度科技有限公司 Deepin Technology Co., Ltd.<br><br></li></ul><h1 id="为什么-GitHub-？"><a href="#为什么-GitHub-？" class="headerlink" title="为什么 GitHub ？"></a>为什么 GitHub ？</h1><p>难不成我放到百度网盘上？</p><p>醒醒吧，兄弟。</p><p><br></p><h1 id="Further-Development-amp-Contributing"><a href="#Further-Development-amp-Contributing" class="headerlink" title="Further Development &amp; Contributing"></a>Further Development &amp; Contributing</h1><p>可能会有更新。</p><p>欢迎投稿 base 壁纸，但必须符合 Material Design Guidelines。</p><p><br></p><h1 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h1><ul><li>Google Image Search ‘Material Design Wallpapers’</li><li>Google Image Search ‘Ubuntu Logos’</li><li>Google Image Search ‘Deepin Logos’</li><li>Deepin Official Website ‘deepin.png’</li></ul><p><br></p><p><a href="https://spencerwoo.com">© Spencer Woo</a></p>]]></content>
    
    <summary type="html">
    
      
      
        
        
          
        
      
    
    </summary>
    
    
      <category term="sexy moves" scheme="https://spencerwoo.com/tags/sexy-moves/"/>
    
      <category term="github" scheme="https://spencerwoo.com/tags/github/"/>
    
  </entry>
  
  <entry>
    <title>一个有意思的 Python 训练项目集 | 二周目</title>
    <link href="https://spencerwoo.com/2018/04/28/PythonTwo/"/>
    <id>https://spencerwoo.com/2018/04/28/PythonTwo/</id>
    <published>2018-04-28T15:42:11.000Z</published>
    <updated>2018-05-07T05:29:56.080Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p><a href="https://spencerwoo.com/2018/04/26/PythonOne/">【上一篇：一个有意思的 Python 训练项目集 | 一周目】</a></p><p>今天没有进展。</p><p>4 月的尾巴我把它消耗在折腾 Linux 上面了。</p><p>Linux 是个无底洞。我在虚拟机上玩耍甚至能让我着迷 3 天。我先后安装了 CentOS 四次，Arch Linux 一次，Ubuntu 一次。折腾 Gnome 桌面，折腾 <code>yum</code>, <code>pacman</code> 和 <code>apt</code> 源，折腾 <code>wine</code>，折腾各种东西。</p><p><img src="https://i.loli.net/2018/04/28/5ae49915eca0d.jpg" alt="img"></p><p>我最终得到结论是：macOS 是最好的 Linux(-like) Distribution.</p><blockquote><p>因为，我有原生的 QQ 和微信，我有依赖干活的原生的 Photoshop 和 Illustrator，我还有独占的 Final Cut Pro X 和 Motion。而且我看到的好看的 Gnome 主题，（他敏感词的）居然都是类 macOS 的，我这按着我的审美配置之后，结果不是 macOS-like 就是 Ubuntu-like，甚至是 Combined flavor，就如上图。</p></blockquote><p><strong>— EOF —</strong></p><p><br></p><h1 id="二周目的题目-批量压缩图片"><a href="#二周目的题目-批量压缩图片" class="headerlink" title="二周目的题目 | 批量压缩图片"></a>二周目的题目 | 批量压缩图片</h1><blockquote><p><strong>【第 0005 题】</strong></p><p>你有一个目录，装了很多照片，把它们的尺寸变成都不大于 iPhone5 分辨率的大小。</p></blockquote><h3 id="需求分析"><a href="#需求分析" class="headerlink" title="需求分析"></a>需求分析</h3><p>这个题要求实现的内容，讲道理，真的超级实用。特别是对于拥有大篇幅图片的博客作者，like 我。之前我的图片压缩操作是：</p><ol><li>从 Unsplash 上面下载 4 MB 甚至更大的图片；</li><li>拖到 Photoshop 里面；</li><li>另存为：选择最小尺寸，保存。</li></ol><p>然后图片就能变成大概 500 KB 左右那样子。然后压缩之后的照片还是超级难看，有摩尔斑纹那种的难看。</p><p>但是为了网页的访问速度，我不得不一张一张压缩图片。</p><h3 id="目标具象"><a href="#目标具象" class="headerlink" title="目标具象"></a>目标具象</h3><p><img src="https://i.loli.net/2018/04/29/5ae49bd8eb8b4.jpg" alt="img"></p><p>如图里面两个文件夹的五张图片，要用 <code>os</code> 库将 <code>original</code> 文件夹里面的全部图片读取，进行压缩，然后输出到 <code>result</code> 文件夹里面。这是我们的目标。</p><p>用到了 <code>os</code>, <code>glob</code> 库和 <code>PIL</code> 里面的 <code>Image</code> 库。</p><p><br></p><h1 id="Talk-is-cheap-show-me-the-code"><a href="#Talk-is-cheap-show-me-the-code" class="headerlink" title="Talk is cheap, show me the code."></a>Talk is cheap, show me the code.</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#!/usr/bin/env python3</span></div><div class="line"><span class="comment"># -*- coding: utf-8 -*-</span></div><div class="line"></div><div class="line"><span class="string">"""</span></div><div class="line"><span class="string">你有一个目录，装了很多照片，把它们的尺寸变成都不大于 iPhone5 分辨率的大小。</span></div><div class="line"><span class="string">"""</span></div><div class="line"></div><div class="line"><span class="keyword">import</span> os</div><div class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</div><div class="line"><span class="keyword">import</span> glob</div><div class="line"></div><div class="line"></div><div class="line">origin_dir = <span class="string">'original'</span></div><div class="line">target_dir = <span class="string">'result'</span></div><div class="line"><span class="comment"># threshold: iPhone 5 maximum resolution</span></div><div class="line">width_limit = <span class="number">1136</span></div><div class="line">height_limit = <span class="number">640</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">compress_image</span><span class="params">(image_dir, result_dir, target_width, target_height)</span>:</span></div><div class="line">    working_dir = os.path.dirname(os.path.realpath(__file__))</div><div class="line"></div><div class="line">    <span class="keyword">try</span>:</div><div class="line">        print(<span class="string">'---&gt; Loading images...'</span>)</div><div class="line">        my_images = glob.glob(<span class="string">'&#123;&#125;/*'</span>.format(image_dir))</div><div class="line">        <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(result_dir):</div><div class="line">            os.makedirs(result_dir)</div><div class="line"></div><div class="line">        <span class="keyword">for</span> each_img, i <span class="keyword">in</span> zip(my_images, range(<span class="number">1</span>, len(my_images)+<span class="number">1</span>)):</div><div class="line">            print(str(i) + <span class="string">':'</span>, each_img)</div><div class="line">            <span class="keyword">with</span> Image.open(each_img) <span class="keyword">as</span> img:</div><div class="line">                width, height = img.size</div><div class="line">                <span class="comment"># print(each_img, width, height, os.path.getsize(each_img))</span></div><div class="line">                <span class="keyword">if</span> os.path.getsize(each_img) &gt; target_width * target_height:</div><div class="line">                    <span class="comment"># print(each_img)</span></div><div class="line">                    <span class="keyword">if</span> width &gt; height:</div><div class="line">                        new_width = target_width</div><div class="line">                        new_height = int(new_width * height / width)</div><div class="line">                    <span class="keyword">else</span>:</div><div class="line">                        new_height = target_width</div><div class="line">                        new_width = int(new_height * width / height)</div><div class="line">                    <span class="comment"># print(new_width, new_height)</span></div><div class="line">                    result_img = img.resize((new_width, new_height))</div><div class="line">                    result_img_name = each_img.replace(image_dir, result_dir)</div><div class="line">                    result_img.save(result_img_name)</div><div class="line"></div><div class="line">        print(<span class="string">'---&gt;'</span>, i, <span class="string">'images loaded and compressed.'</span>)</div><div class="line">        print(<span class="string">'---&gt; Saved in'</span>, working_dir + <span class="string">'/'</span> + result_dir)</div><div class="line"></div><div class="line">    <span class="keyword">except</span> OSError <span class="keyword">as</span> e:</div><div class="line">        print(e)</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></div><div class="line">    compress_image(origin_dir, target_dir, width_limit, height_limit)</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    main()</div></pre></td></tr></table></figure><h3 id="坑点分析"><a href="#坑点分析" class="headerlink" title="坑点分析"></a>坑点分析</h3><ul><li>利用 <code>glob</code> 来进行文件匹配：<ul><li><code>my_images = glob.glob(&#39;{}/*&#39;.format(image_dir))</code> 即表示找到 <code>image_dir</code> 下面的全部文件</li></ul></li><li>因为压缩目标是根据图片分辨率来判断的，即在 <code>compress_image()</code> 函数中两个参数：<code>width_limit</code> 和 <code>height_limit</code>，so 得判断一下图片是横着还是竖着。</li><li>我就想到这两个坑点。</li><li>我悄咪咪写了如果只有一张图片就直接输出到 <code>workspace</code> 目录，省事er。</li></ul><p>就这些。</p><p><br></p><h1 id="REPO"><a href="#REPO" class="headerlink" title="REPO"></a>REPO</h1><p>【项目地址】<a href="https://github.com/spencerwoo98/Dumb-Ways-To-Code" target="_blank" rel="noopener">spencerwoo98 | Dumb ways to code</a></p><p><br></p><p><br></p><p>© Spencer Woo</p>]]></content>
    
    <summary type="html">
    
      
      
        
        
          
        
      
    
    </summary>
    
    
      <category term="code" scheme="https://spencerwoo.com/tags/code/"/>
    
      <category term="sexy moves" scheme="https://spencerwoo.com/tags/sexy-moves/"/>
    
      <category term="github" scheme="https://spencerwoo.com/tags/github/"/>
    
  </entry>
  
  <entry>
    <title>一个有意思的 Python 训练项目集 | 一周目</title>
    <link href="https://spencerwoo.com/2018/04/26/PythonOne/"/>
    <id>https://spencerwoo.com/2018/04/26/PythonOne/</id>
    <published>2018-04-26T11:09:27.000Z</published>
    <updated>2018-04-28T15:55:47.300Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><blockquote><p>A python a day keeps the PM away.</p><p>因为太菜，所以这是第一篇技术博， 很紧张。</p></blockquote><p>逛 GitHub 的时候，发现了一个很酷的 Python 训练项目集。一共有 25 个题目，基本涵盖了用 Python 实现的各种功能。</p><p>上一周没有复习 C++ 和网络通信全部用来玩这几个题了。题目地址在 –&gt; <a href="https://github.com/spencerwoo98/Dumb-Ways-To-Code" target="_blank" rel="noopener">GitHub | Dumb Ways To Code</a></p><p>现在已经通过各种办法，解决了 0000 ~ 0007 还有一个 0010 这些题目。</p><p>今天先来总结一下第 0000 题目的思路。</p><p><strong>面向 Google, CSDN, StackOverflow 编程。</strong><span class="github-emoji" title="smile" data-src="https://assets-cdn.github.com/images/icons/emoji/unicode/1f604.png?v8">&#x1f604;</span></p><p><br></p><h1 id="一周目的问题-Solutions-PIL-or-Pillow"><a href="#一周目的问题-Solutions-PIL-or-Pillow" class="headerlink" title="一周目的问题 Solutions | PIL or Pillow"></a>一周目的问题 Solutions | PIL or Pillow</h1><p>第一天遇到的问题是这样的：</p><blockquote><p><strong>【第 0000 题】</strong> </p><p>将你的 QQ 头像（或者微博头像）右上角加上红色的数字，类似于微信未读信息数量那种提示效果。（类似于图中效果）</p></blockquote><div style="display:block; margin-left: auto; margin-right: auto; width:20%; "><br><br><img src="https://i.loli.net/2018/04/26/5ae1bd7469715.jpg" alt="img"><br><br></div><p>问题分解为：</p><ul><li>加载图片</li><li>识别图片大小</li><li>识别字体文件 TrueType</li><li>将文本加到图片右上角并保存</li></ul><p>在 PIL 中有 <code>Image</code>, <code>ImageFont</code>, <code>ImageDraw</code> 这三个对象，分别用来实现：</p><ul><li><code>Image</code>: 加载原始图片并将其转换为对象 Object</li><li><code>ImageFont</code>: 加载字体文件</li><li><code>ImageDraw</code>: 将字符添加到图片对象上</li></ul><p><br></p><h1 id="Talk-is-cheap-show-me-the-code"><a href="#Talk-is-cheap-show-me-the-code" class="headerlink" title="Talk is cheap, show me the code."></a>Talk is cheap, show me the code.</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#!/usr/bin/env python3</span></div><div class="line"><span class="comment"># -*- coding: utf-8 -*-</span></div><div class="line"></div><div class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image, ImageDraw, ImageFont</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">add_unread_count</span><span class="params">(img)</span>:</span></div><div class="line">    draw = ImageDraw.Draw(img)</div><div class="line">    width, height = img.size</div><div class="line">    textSize = int(width*<span class="number">0.15</span>)</div><div class="line">    textColor = <span class="string">'#CB1B45'</span></div><div class="line">    textFont = ImageFont.truetype(<span class="string">'Arial.ttf'</span>, textSize)</div><div class="line">    draw.text((width*<span class="number">0.8</span>, height*<span class="number">0.02</span>), <span class="string">'99'</span>, font=textFont, fill=textColor)</div><div class="line">    img.save(<span class="string">'icon_added.jpg'</span>, <span class="string">'jpeg'</span>)</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></div><div class="line">    img = Image.open(<span class="string">'icon.jpg'</span>)</div><div class="line">    add_unread_count(img)</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    main()</div></pre></td></tr></table></figure><p><br></p><h2 id="代码中："><a href="#代码中：" class="headerlink" title="代码中："></a>代码中：</h2><p><code>add_unread_count()</code> 是添加 ‘99’ 字样的主函数，参数为图片对象 <code>img</code>.</p><p><code>draw = ImageDraw.Draw(img)</code> 将图片对象 <code>img</code> 导入并成为图层背景，我叫它 <code>canvas</code>.</p><p>然后 <code>width, height = img.size</code> 确定背景底照的长宽。</p><p><code>ImageFont.truetype(&#39;Arial.ttf&#39;, textSize)</code> 将字体文件 <code>Arial.ttf</code> 导入并在下一步绘制文本图层时使用。</p><p><code>draw.text((width*0.8, height*0.02), &#39;99&#39;, font=textFont, fill=textColor)</code> 将文本 ‘99’ 绘制到图片右上角。</p><p>最后保存图片文件：<code>img.save(&#39;icon_added.jpg&#39;, &#39;jpeg&#39;)</code></p><p><br></p><h1 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h1><p>参考了 Python 官方文档 PIL 相关使用。</p><p>参考了 <a href="https://github.com/Show-Me-the-Code/python" target="_blank" rel="noopener">这个 Repo 里面</a> 大佬们的思路。</p><p>面向 Google 和 StackOverflow 编程成功。</p><p><br></p><p><br></p><p>©Spencer Woo</p>]]></content>
    
    <summary type="html">
    
      
      
        
        
          
        
      
    
    </summary>
    
    
      <category term="code" scheme="https://spencerwoo.com/tags/code/"/>
    
      <category term="sexy moves" scheme="https://spencerwoo.com/tags/sexy-moves/"/>
    
      <category term="github" scheme="https://spencerwoo.com/tags/github/"/>
    
  </entry>
  
  <entry>
    <title>啊 记录碎片</title>
    <link href="https://spencerwoo.com/2018/04/19/Fragments-2/"/>
    <id>https://spencerwoo.com/2018/04/19/Fragments-2/</id>
    <published>2018-04-19T10:57:16.000Z</published>
    <updated>2018-04-19T12:36:50.380Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><div align="center"><br>    <iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=437116736&auto=1&height=66"></iframe><br></div><h2 id="拒绝成为油腻的人"><a href="#拒绝成为油腻的人" class="headerlink" title="拒绝成为油腻的人"></a>拒绝成为油腻的人</h2><p>30 多度的北京今年第一次让自己有了油腻的感觉。</p><p>不能成为油腻的人。</p><blockquote><p>学习。学习的人，气质里都有些许的少年感。</p><p>运动。身体轻松，则精神轻松。动一动就喘，不是因为中年，而是懒。</p><p>顾家。多和老婆孩子玩，少应酬，少喝酒，早回家。</p><p>少刷存在感。少充前辈，少否定年轻人，少传授人生经验，少吹认识的人。</p><p>人到中年，见过了生死，知道了时光有限，又无可奈何，就寄情于玉石，手串等老而弥坚的东西。</p><p>从外物中寻找慰籍，不如靠自己，不负时光，做对未来有意义的事，人自然也清爽起来。<br><br></p><div align="right">— via <a href="https://www.zhihu.com/question/63778544" target="_blank" rel="noopener">知乎：男人活到中年，怎么样才能不变得既油腻又猥琐？</a></div></blockquote><p>还尚且没到从容和自在的时候，现在活的太过舒坦了。</p><p><br></p><h2 id="I’m-scared-of-judgement"><a href="#I’m-scared-of-judgement" class="headerlink" title="I’m scared of judgement"></a>I’m scared of judgement</h2><blockquote><p>You’re such a freak.</p><p>…</p><p>I’m scared of judgement.</p><p>Your insults and your slenders stick on to me.</p><p>YES with your million eyes you’re watching me.</p><p>You talk behind my back.</p><p>You spy on me.</p><p>So I scream and shout to make you leave.</p><p>But you’re still here you keep judging me.</p><div align="right">— via Million Eyes by Loïc Nottet</div></blockquote><p>旁边有人盯着我看的时候真的没法集中注意力。</p><p>旁边有人的时候其实都几乎没法集中注意力。</p><p>想象一下你心心念的小姐姐在认认真真看你不用 STL 实现单调栈，你一脸生怕有变量名称起错的那种娇羞。</p><p>适合独居。</p><p><br></p><h2 id="如何优雅的长大"><a href="#如何优雅的长大" class="headerlink" title="如何优雅的长大"></a>如何优雅的长大</h2><blockquote><p>Q: 看到龙珠在微博上说：九月刊的核心是围绕「什么是先生」，所以，龙珠觉得怎样的人可以称得上是先生？</p><p><br></p><p>A: 我很难回答。简单说，在一般的标准之外，我加一条：</p><p>上电梯的一瞬间，看到熊孩子兴冲冲地跑出来会觉得可爱，然后进了电梯，看到电梯按键一片亮，心里会说，操，再然后，顿一顿，会微笑一下。</p><p><strong>能微笑这一下的，就是先生。</strong></p><div align="right">— via <a href="https://zhuanlan.zhihu.com/p/20261072" target="_blank" rel="noopener">知乎专栏 | 中国男人为什么有一种油腻感</a></div></blockquote><p>在「即刻：抖音热播视频」主题下，刷到有一个十岁有余的小同学，叫一名 25 岁的小姐姐「阿姨」。</p><p>在「知乎」里相关问题的评论下，看到有人说：”其实岁数不岁数都不重要，但是我（男孩子）在上海给一位阿姨让位置的时候，阿姨很有礼貌的说：「谢谢你，小先生」。”</p><p><strong>小先生。</strong>这个称呼真是通透。</p><p><br></p><h2 id="Fragments"><a href="#Fragments" class="headerlink" title="Fragments"></a>Fragments</h2><p>啊，记录碎片。 —&gt; <a href="https://spencerwoo.com/tags/#fragments">Fragments</a></p><p>推荐一下新晋网红万先生刚过审的博客 —&gt; <a href="https://www.trafalga.cn/" target="_blank" rel="noopener">Brandonnnnn</a></p><p><br></p><p>© Spencer Woo</p>]]></content>
    
    <summary type="html">
    
      
      
        
        
          
        
      
    
    </summary>
    
      <category term="碎碎念" scheme="https://spencerwoo.com/categories/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"/>
    
    
      <category term="sexy moves" scheme="https://spencerwoo.com/tags/sexy-moves/"/>
    
      <category term="fragments" scheme="https://spencerwoo.com/tags/fragments/"/>
    
  </entry>
  
  <entry>
    <title>泰山 | LOG</title>
    <link href="https://spencerwoo.com/2018/04/13/%E6%B3%B0%E5%B1%B1-LOG/"/>
    <id>https://spencerwoo.com/2018/04/13/泰山-LOG/</id>
    <published>2018-04-13T13:41:46.000Z</published>
    <updated>2018-04-13T15:48:39.020Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><blockquote><p>仙人游碧峰，处处笙歌发。</p></blockquote><p><strong>以及。多图杀猫。图片加载请耐心等待。</strong></p><p><del>打了 <strong>足足五行</strong> 的废话，删掉。</del>少啰嗦，讲经历。</p><p>赶在四月的开头去了泰山。行程是 <strong>泰山 → 大明湖 → 趵突泉</strong>，一同的有 Tenkey，阳阳和屯屯。</p><p><br></p><h1 id="一整晚的徒步"><a href="#一整晚的徒步" class="headerlink" title="一整晚的徒步"></a>一整晚的徒步</h1><p>第一天，我们晚上 9 点才出泰安的高铁站，一个小到窒息的城市里面空无一车。滴滴都叫不到。我们的 Airbnb 离车站有五公里，没有理想的四个人花了一个小时走到了住地。</p><p>如果美团打车这时候入驻泰安市，一定赚的他盆满钵盈吧。</p><p>路上给 Tenkey 用他的 50mm 定焦照了极为美丽的一张照片。</p><p>漂亮的不像实力派。</p><p><img src="https://i.loli.net/2018/04/13/5ad0c73dcd00b.jpg" alt="img"></p><div style="text-align: center; font-size: 14px; color: #787D7B" ;=""><em>Image credit: Spencer Woo</em></div><p><br></p><h1 id="一整天的爬山"><a href="#一整天的爬山" class="headerlink" title="一整天的爬山"></a>一整天的爬山</h1><p>泰山是我人生中所爬的第一座「五岳」。</p><p>五岳是真的不给面子啊。因为风太过喧嚣，缆车 🚠 从早上 11 点开始停运了。</p><p>而我们从早上 8 点半开始爬到 10 点到了中天门，然后排了一个小时的缆车队伍。</p><p>心酸啊。</p><p>估计是因为泰山上面缆车丰富，又有盘山公路，上面的商店才没有那么黑心吧。</p><blockquote><p>久负盛名的山东煎饼果子，用料考究，以一黄金玉米饼为衣裳，内涂有私家酱料，将鸡蛋放入摊好，打磨均匀，放入大葱，卷成薄饼，大功告成。</p></blockquote><p>这一大葱，算是毁了这煎饼果子的名声。<em>不过可能也是因为我自己口味独特，平日里单纯的对大葱深恶痛绝罢了。</em></p><p>一只果子，十元大洋。良心商家。但是那十元一只的煮玉米和十五元一盒的方便面，就略显贵重。当然，对于在寒风中瑟瑟发抖了一个小时的四个人，能取暖的方便面的价格似乎并没有什么不当了。</p><p>一千米有余的泰山的顶上实在是寒冷。</p><p>但是山顶晴空中的突然飘雪又是在美丽。</p><p>当然，寒冷让我们理智，求生欲让我们不到两个小时下山。</p><p><strong>我们</strong>，不包括在没有栏杆的石头上皮的屯屯。</p><p><img src="https://i.loli.net/2018/04/13/5ad0c8642c76f.jpg" alt="img"></p><p><img src="https://i.loli.net/2018/04/13/5ad0c8c473daf.jpg" alt="img"></p><div style="text-align: center; font-size: 14px; color: #787D7B" ;=""><em>Image credit: Spencer Woo</em></div><p><br></p><h1 id="接下来的佛系济南"><a href="#接下来的佛系济南" class="headerlink" title="接下来的佛系济南"></a>接下来的佛系济南</h1><p><img src="https://i.loli.net/2018/04/13/5ad0b8235e551.jpg" alt="img"></p><div style="text-align: center; font-size: 14px; color: #787D7B" ;=""><em>Image credit: Tenkeyseven from <a href="http://tenkeyseven.com/?p=375" target="_blank" rel="noopener">Tenkey’s Blog</a></em></div><p>大明湖是一只湖。</p><p>趵突泉是一只泉水。</p><p>好了。</p><p>没有什么了。</p><p>下面是两个在趵突泉想要成为 gif 的男人。</p><p><img src="https://i.loli.net/2018/04/13/5ad0cc83ace98.gif" alt="tenkey_gif" width="400px"></p><p><img src="https://i.loli.net/2018/04/13/5ad0cc9985c16.gif" alt="cherry_gif" width="400px"> </p><div style="text-align: center; font-size: 14px; color: #787D7B" ;=""><em>Image credit: Spencer Woo</em></div><p>要注意的是：</p><ul><li>不要让泰山上皮的要死的屯屯开船。</li><li>不要觉得石头和三脚架一样稳。</li></ul><p><img src="https://i.loli.net/2018/04/13/5ad0d0f617f18.jpg" alt="img"></p><p>是的，在趵突泉，我把日间长曝光的单反摔在大理石板上了。</p><p>接下来我们吃了济南的好吃的。</p><ul><li>十元一只的奶盖茶 🍵</li><li>肉超级多的大碳烤肉串 <span class="github-emoji" title="oden" data-src="https://assets-cdn.github.com/images/icons/emoji/unicode/1f362.png?v8">&#x1f362;</span></li><li>香到 Airbnb 的猪肉卷饼 🐽</li><li>十五元一只的铁板大鱿鱼 🦑</li><li>十元七只的章鱼小丸子 🐙</li><li>辣到极致的臭豆腐 🌶</li><li>以及屯屯非要吃的，难吃到极致的小土豆 🥔</li></ul><p>很是满足。</p><p>结束了。这就是泰山。</p>]]></content>
    
    <summary type="html">
    
      
      
        
        
          
        
      
    
    </summary>
    
      <category term="碎碎念" scheme="https://spencerwoo.com/categories/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"/>
    
    
      <category term="sexy moves" scheme="https://spencerwoo.com/tags/sexy-moves/"/>
    
  </entry>
  
  <entry>
    <title>HOW TO | iPhone 带壳截屏终极体验指北</title>
    <link href="https://spencerwoo.com/2018/04/01/HOW-TO-%E5%B8%A6%E5%A3%B3%E6%88%AA%E5%B1%8F/"/>
    <id>https://spencerwoo.com/2018/04/01/HOW-TO-带壳截屏/</id>
    <published>2018-04-01T11:16:05.000Z</published>
    <updated>2018-04-02T14:56:37.420Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><blockquote><p>本文首发于我的博客：<a href="https://spencerwoo.com/2018/04/01/HOW-TO-%E5%B8%A6%E5%A3%B3%E6%88%AA%E5%B1%8F/">HOW TO | iPhone 带壳截屏 终极体验指北</a></p><p>本文图多，请耐心等待。Karma’s a bitch.</p></blockquote><p>本文题图模板来自 <a href="https://www.mockupworld.co/" target="_blank" rel="noopener">Mock Up World</a>，一个专注于提供本文所讲「带壳截图」模板的网站。</p><p>设计感是一种趋势。越来越多的文章、教程甚至微博、推特，都注重文字的排版与图片的摆放，为了更具美感的阅读体验。在包括<a href="sspai.com">我派</a>在内的很多内容至上的站点，在官方发布的文字和用户自己的文章中，都有意识的遵循了 <a href="https://github.com/sparanoid/chinese-copywriting-guidelines" target="_blank" rel="noopener">Chinese Copywriting Guidelines | 中文文案排版指北</a>，以增强文案气质。</p><p>在教程中，截图是不可避免的，同样，在日常生活、经验分享中，截图都是必不可缺的辅助型指北内容。让文字中方便地加入优雅的截屏便是本文的目的所在。本文将介绍一个 Workflow 方案、三个 iOS App 和一个电脑方案，来实现我们的「带壳截图」。</p><p><em>本文的最初版本分享在「<a href="https://www.zhihu.com/question/62501150/answer/199561589" target="_blank" rel="noopener">知乎：如何在 iPhone 上实现带壳截屏？</a>」</em></p><p><br></p><h1 id="Workflow-的简洁玩法"><a href="#Workflow-的简洁玩法" class="headerlink" title="Workflow 的简洁玩法"></a>Workflow 的简洁玩法</h1><p>What is <strong>Workflow</strong>?</p><blockquote><p>去年 Workflow 被苹果收购，从此几乎处于停更状态，仅仅迎来过一些修复性更新和对 iOS 11 的适配。但 Workflow 仍然是 iOS 上最简单易用的自动化工具之一，用户们也继续在它身上挖掘潜力，做出了许多方便生活、提高生产力的 Workflow 动作。</p></blockquote><p>强大的、可编程的 Workflow 潜力无穷，如果想要挖掘 Workflow 的高阶玩法，来看看我派的专题 <a href="https://sspai.com/topic/100" target="_blank" rel="noopener">👉 从零开始用 Workflow</a></p><p>这里我只介绍一个服务于「将截图周围加上框框」的 Workflow。</p><p><strong><a href="https://workflow.is/workflows/abc27a53d2074c3684a920338605cdd7" target="_blank" rel="noopener">👉 曲线救国版 iPhone 屏幕截屏</a></strong>（点击链接直接保存 Workflow）</p><p><img src="https://i.loli.net/2018/04/01/5ac0ce5e38a26.jpg" alt="img"></p><p>这种方式胜在轻便简洁，无需安装或者购买第三方程序就可以实现我们的功能。</p><p><br></p><h1 id="三个-iOS-App"><a href="#三个-iOS-App" class="headerlink" title="三个 iOS App"></a>三个 iOS App</h1><h2 id="Picsew"><a href="#Picsew" class="headerlink" title="Picsew"></a>Picsew</h2><p>价格：1 元</p><p>功能：长截图、带壳截图、马赛克、水印</p><p>一个是由李大锤同学、威锋网和我派一起推荐过的，主要功能是长截图的应用：<strong>Picsew</strong>，售价 1 元，前段时间有过限免。</p><p><img src="https://i.loli.net/2018/04/01/5ac0d06e7f48c.jpg" alt="img"></p><p>Picsew 是一个比较功能强大的截图应用，除了长截图与带壳截屏，Picsew 也可以：</p><ul><li>给截图添加马赛克。</li><li>清理截屏状态栏，即把电量变成 100%，把时间变成 09:41，并把运营商信息去除。</li><li>给截图打上水印。</li></ul><p><img src="https://i.loli.net/2018/04/01/5ac0d18b9bbfa.jpg" alt="img"></p><h2 id="OneScreen"><a href="#OneScreen" class="headerlink" title="OneScreen"></a>OneScreen</h2><p>价格：1 元</p><p>功能：带壳截图</p><p>特点：壳比较骚气</p><p>这也是一个我派推荐过的单品，他胜在花样众多，有着骚气的模板，能让你的截图跃然纸面。</p><p><img src="https://i.loli.net/2018/04/01/5ac0d2ba38c09.jpg" alt="img"></p><p><a href="https://sspai.com/post/43848" target="_blank" rel="noopener">👉  延伸阅读：用这个 App 给你的套壳截图加上花式背景：OneScreen | App+1</a></p><p>目前这个 App 的壳子对 iPhone X 比较友好，对其他版本 iPhone 并不特别友好。不过听说开发者即将添加更多的模板。</p><p><img src="https://i.loli.net/2018/04/01/5ac0d42ba49b0.jpg" alt="img"></p><h2 id="iFrame"><a href="#iFrame" class="headerlink" title="iFrame"></a>iFrame</h2><p>价格：免费</p><p>功能：带壳截图</p><p>特点：有 Apple Watch 的 Mock Up</p><p>这是我探索了这么久唯一一个可以给 Apple Watch 上壳的应用。</p><p><img src="https://i.loli.net/2018/04/01/5ac0d59094cdc.jpg" alt="img"></p><p>可以说是很精致了。对于一个刚刚升级 iOS 11.3 和 watchOS 4.3 的，沉浸在可以用手表刷公交卡的愉悦与幸福中的人来说，真的是「除却巫山不是云」了。</p><p>并且，iFrame 可以给带壳截图生成自定义背景，虽然对我来说纯色就是最好的设计，但是这也是一个这个应用值得下载的一点。<strong>App + 1</strong></p><p><br></p><h1 id="Photoshop-电脑上的高阶玩法"><a href="#Photoshop-电脑上的高阶玩法" class="headerlink" title="Photoshop | 电脑上的高阶玩法"></a>Photoshop | 电脑上的高阶玩法</h1><p>最后我要推荐我本文最初讲的这个网站 <a href="https://www.mockupworld.co/" target="_blank" rel="noopener">👉 Mock Up World</a>，其上面的 PSD 版本的 Mock Up 文件丰富、质量也很高，大部分还是免费的，因此我极力推荐。</p><p><img src="https://i.loli.net/2018/04/01/5ac0d81d5fd12.jpg" alt="img"></p><p>用 Photoshop 做这种就很简单了，一般在 Mock Up World 中下载的 PSD 中都有一个带有「Change Me」字样的图层。截好屏幕之后将 PSD 文件中的这个图层进行替换就完成制作啦！</p><p><img src="https://i.loli.net/2018/04/01/5ac0d9220b4db.jpg" alt="img"></p><p><br></p><p>其实上面提到的几个方法，大都有些功能性冗余，很多重复性功能也都没法避免。同时，令人伤心的是，安卓上早就系统集成的功能（Smartisan OS），在 iOS 上却需要这样探索才能实现。并且，安卓上面第三方应用对带壳截图的实现也更加具有设计感，比如添加阴影、极简设计的机器磨具、以及调整背景光照属性等等。这个强大的安卓应用叫做：<a href="https://play.google.com/store/apps/details?id=de.toastcode.screener" target="_blank" rel="noopener">Screener</a>。来自 Google Play，因此可能需要科学上网才能下载。</p><p><img src="https://i.loli.net/2018/04/01/5ac0dc2fa0b6c.jpg" alt="img"></p><p>扼腕叹息。</p><p>这些就是我总结的最近大火的「带壳截图」的使用方案，感谢阅读。</p><p><br></p><p><br></p><p><a href="https://spencerwoo.com">©Spencer Woo</a></p>]]></content>
    
    <summary type="html">
    
      
      
        
        
          
        
      
    
    </summary>
    
      <category term="教程向" scheme="https://spencerwoo.com/categories/%E6%95%99%E7%A8%8B%E5%90%91/"/>
    
    
      <category term="tutorial" scheme="https://spencerwoo.com/tags/tutorial/"/>
    
      <category term="sexy moves" scheme="https://spencerwoo.com/tags/sexy-moves/"/>
    
  </entry>
  
  <entry>
    <title>Fragments | 鱼二与鱼</title>
    <link href="https://spencerwoo.com/2018/03/29/Fragments-%E9%B1%BC%E4%BA%8C%E4%B8%8E%E9%B1%BC/"/>
    <id>https://spencerwoo.com/2018/03/29/Fragments-鱼二与鱼/</id>
    <published>2018-03-29T12:24:43.000Z</published>
    <updated>2018-04-18T05:44:57.000Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h4 id="鱼二"><a href="#鱼二" class="headerlink" title="鱼二"></a>鱼二</h4><p>鱼二是我家小灰猫的新名字</p><p>来自于章子怡的「宫二」</p><p>鱼二是一只男猫猫</p><p>他的女朋友准备叫玛丽苏</p><p>希望是一只蓝眼睛的白猫</p><p><br></p><h4 id="玛丽苏"><a href="#玛丽苏" class="headerlink" title="玛丽苏"></a>玛丽苏</h4><p>今天是 3 月的第 29 天</p><p>不知不觉 3 月就已经要结束了 前半学期的课程几乎就都结束了</p><p>简直不可思议 仿佛前一秒还在哈尔滨的家里在床上躺着</p><p>旁边是鱼二和薯片瓜子</p><p>和同学计划着去网吧吃鸡</p><p><br></p><h4 id="噪声"><a href="#噪声" class="headerlink" title="噪声"></a>噪声</h4><p>最近被知乎的广告烦的不行</p><p>其实一直都被广告们折磨的不行</p><p>要不然</p><p>为什么会有 Chrome 和 Firefox 上必备插件 AdBlock</p><p>为什么会有熊猫吃短信 和锤子家 Smartisan OS 上的短信退订</p><p>为什么会有第三方微博客户端和安卓平台上利用 Xposed 实现的悟空加速</p><p>都是被自以为是的产品经理逼的啊</p><p>「破乎药丸」</p><p><img src="https://i.loli.net/2018/03/29/5abce1854edd3.jpg" alt="img"></p><p><br></p><h4 id="Excited"><a href="#Excited" class="headerlink" title="Excited!"></a>Excited!</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">curl aoaoao.me:1926</div></pre></td></tr></table></figure><p>终端运行</p><p>你会回来的</p><blockquote><p>【碎碎念】因为今天凌晨 3 点入眠 7 点半醒来赶早去上安卓 一直到现在</p><p>辛苦一下自己</p><p>晚安</p></blockquote><p><br></p><p><br></p><p>©Spencer Woo</p>]]></content>
    
    <summary type="html">
    
      
      
        
        
          
        
      
    
    </summary>
    
      <category term="碎碎念" scheme="https://spencerwoo.com/categories/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"/>
    
    
      <category term="sexy moves" scheme="https://spencerwoo.com/tags/sexy-moves/"/>
    
      <category term="fragments" scheme="https://spencerwoo.com/tags/fragments/"/>
    
  </entry>
  
  <entry>
    <title>Sexy Donate</title>
    <link href="https://spencerwoo.com/2018/03/15/Sexy-Donate/"/>
    <id>https://spencerwoo.com/2018/03/15/Sexy-Donate/</id>
    <published>2018-03-15T10:49:07.000Z</published>
    <updated>2018-08-11T12:06:57.308Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>前几天稍微写了一个小小的打赏 <strong>碎片。</strong> 给 Hexo 做了一些微小的贡献。</p><p>因为实在是太小了，实现也太过简单了，所以划重点：<strong>碎片</strong>。</p><h1 id="0×01-Fragments"><a href="#0×01-Fragments" class="headerlink" title="0×01 Fragments"></a>0×01 Fragments</h1><p>之前看 Hexo 的主题，包括 Next 和 Material 主题，都直接集成了「打赏模块」。很可惜我的主题简洁到除了没有评论，也没有设计打赏模块！自己动手，丰衣足食。虽然很简单，但是有总比没有强。</p><p>最初，我想要的是一个小小的按钮，点击打开一个抽屉，然后出现两个二维码。</p><p>就像 iOS 6.0 以及之前的应用抽屉：</p><p><img src="https://i.loli.net/2018/03/15/5aaa57113bc8b.jpg" alt="img"></p><p>如果真的可以用纯 CSS 实现这个质感的背景 (svg)，我就实在是佩服自己了。</p><p><br></p><h1 id="0×02-Rewards"><a href="#0×02-Rewards" class="headerlink" title="0×02 Rewards"></a>0×02 Rewards</h1><p>最难的部分竟然是用  jQuery 实现点击下拉 + 点击隐藏，就是所谓的 Expand and Collapse.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">$(<span class="string">".reward_btn"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">        $reward_btn = $(<span class="keyword">this</span>);</div><div class="line">        <span class="comment">//getting the next element</span></div><div class="line">        $qr_code = $reward_btn.next();</div><div class="line">        <span class="comment">//open up the qr_code needed - toggle the slide- if visible, slide up, if not slidedown.</span></div><div class="line">        $qr_code.slideToggle(<span class="number">500</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">            <span class="comment">//execute this after slideToggle is done</span></div><div class="line">            <span class="comment">//change text of reward_btn based on visibility of qr_code div</span></div><div class="line">            $reward_btn.text(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">                <span class="comment">//change text based on condition</span></div><div class="line">                <span class="keyword">return</span> $qr_code.is(<span class="string">":visible"</span>) ? <span class="string">"点击收起"</span> : <span class="string">"请喝咖啡"</span>;</div><div class="line">            &#125;);</div><div class="line">        &#125;);</div><div class="line">&#125;);</div></pre></td></tr></table></figure><p>具体的 JavaScript 就是如上了。主要代码只有 6 行，感谢 StackOverflow 的大神。</p><p>用 CSS 把按钮和图片变好看是最最最简单的了。虽然要比 JavaScript 多上 90 多行代码量。</p><p>最后实现的效果在本页面最下面啦！</p><p><br></p><h1 id="0×03-GitHub-ify"><a href="#0×03-GitHub-ify" class="headerlink" title="0×03 GitHub-ify"></a>0×03 GitHub-ify</h1><p>前几天唐大佬在校内服务器上搞成功了一个 GitLab，间接地熟悉了 git 的各种命令。</p><p>受 Telegram 上一个叫做「Apply for 🐸」的机器人启发，<strong>ALSO</strong> 也为了测试校内服务器，在 GitLab 上面上传了一个抒发对赞大佬崇拜之情的脚本。</p><p>这个算作是自己第二个认认真真设计的项目吧。地址在这里 -&gt; <a href="https://github.com/spencerwoo98/sexy-donate" target="_blank" rel="noopener">SexyDonate on GitHub</a></p><p>目前有两个小遗憾：</p><ul><li>一个是那个 iOS 拟物化风格的应用抽屉背景，用纯 CSS 实现。</li><li>还有一个是整个 Fragment 用 JavaScript 渲染出来。这样直接引用更小的一部分代码，在其他网页上就可以出现了，现在还需要一点 HTML 配合。最终的想法应该是 Gitment 那样子的代码片段：</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">const</span> gitment = <span class="keyword">new</span> Gitment(&#123;</div><div class="line">  id: <span class="string">'Your page ID'</span>, <span class="comment">// optional</span></div><div class="line">  owner: <span class="string">'Your GitHub ID'</span>,</div><div class="line">  repo: <span class="string">'The repo to store comments'</span>,</div><div class="line">  oauth: &#123;</div><div class="line">    client_id: <span class="string">'Your client ID'</span>,</div><div class="line">    client_secret: <span class="string">'Your client secret'</span>,</div><div class="line">  &#125;,</div><div class="line">  <span class="comment">// ...</span></div><div class="line">  <span class="comment">// For more available options, check out the documentation below</span></div><div class="line">&#125;)</div><div class="line"></div><div class="line">gitment.render(<span class="string">'comments'</span>)</div></pre></td></tr></table></figure><p>如上吧，这是 Render Gitment 时候的 JavaScript 代码。这样的话，还可以直接设置 HTML 代码中的一些自定义的内容，包括二维码链接、按钮的文本等等。</p><p>理想。</p><p><br></p><h1 id="0×04-Animista"><a href="#0×04-Animista" class="headerlink" title="0×04 Animista"></a>0×04 Animista</h1><p>昨天还有一个愿望，就是按钮可以对鼠标点击 (onClick) 或者悬停事件 (onHover) 做出一些反应，显得不那么单调，调皮一些。</p><p>首先感谢 Chrome 的插件 AnywayFM，一群牛逼的设计师设计的首屏。美的不可方物。</p><p>再感谢 <a href="http://animista.net/" target="_blank" rel="noopener">Animista</a>，由 AnywayFM 推荐的 CSS 合集。</p><p>在上面我找到了能实现：鼠标悬停在按钮上，按钮会调皮的抖动的 CSS。实在是骚气。</p><p><img src="https://i.loli.net/2018/03/14/5aa8bc4b20774.jpg" alt="img"></p><p><br></p><h1 id="0×05-设计"><a href="#0×05-设计" class="headerlink" title="0×05 设计"></a>0×05 设计</h1><p>我的 Java 和安卓老师，金大师。</p><p>他在安卓课上讲到 Google 的 Material Design 的时候讲过，程序员不要接触设计相关的领域。</p><p>脑子会烧掉的。</p><p>让那些有美感的同学去做设计吧。</p><p><strong>我是一万个不同意。</strong></p><p><img src="https://i.loli.net/2018/03/11/5aa5377418b17.jpg" alt="img"></p><p><strong>好看是第一生产力。</strong></p><p>继续对简洁与效率的追求。这就是美。</p><p><br></p><p><br></p><p>© Spencer Woo</p><p>打赏 DEMO 如下 ↓↓↓ 打赏 DEMO 如下</p>]]></content>
    
    <summary type="html">
    
      
      
        
        
          
        
      
    
    </summary>
    
    
      <category term="code" scheme="https://spencerwoo.com/tags/code/"/>
    
      <category term="sexy moves" scheme="https://spencerwoo.com/tags/sexy-moves/"/>
    
      <category term="github" scheme="https://spencerwoo.com/tags/github/"/>
    
  </entry>
  
  <entry>
    <title>Atom 入坑指南</title>
    <link href="https://spencerwoo.com/2018/03/11/Atom-%E5%85%A5%E5%9D%91%E6%8C%87%E5%8D%97/"/>
    <id>https://spencerwoo.com/2018/03/11/Atom-入坑指南/</id>
    <published>2018-03-11T11:18:57.000Z</published>
    <updated>2018-08-11T12:06:31.441Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><blockquote><p>本文首发于我的博客 - <a href="https://spencerwoo.com">https://spencerwoo.com</a></p></blockquote><hr><p>代码如诗。</p><blockquote><p>Code is poetry.</p></blockquote><p><img src="https://i.loli.net/2018/03/11/5aa5201dd7f2e.jpg" alt="img"></p><p><em>▲ Vim - the ubiquitous text editor.</em></p><p>写代码本应该是很享受的事情，我们有极客高效的 Vim，简约美丽的 Sublime Text，从小至最为纯粹的编辑器，到大至包罗万物的 IDE。一个好的、美观的、高效的代码编写环境着实能够提高一个人的写作、创作欲望。试想一个人把 VC 6.0 放在你的面前，黑底白字、没有高亮、没有颜色，有谁会爱上 C / C++？如果有人在 2018 年向你推荐 1998 年的 IDE，那么你觉得这个人的脑子该如何拯救？</p><p><img src="https://i.loli.net/2018/03/11/5aa51aeacc4b0.jpg" alt="img"></p><p><strong>生命不息，折腾不止。</strong></p><p>经过近 2 年的摸索，从高中的 Dev C++ 到大一开学时的 Codeblock 与 Sublime Text，到现如今的 Atom，我想总结一下：<strong>一个高效美观、能激发一个人创作欲望的代码编写环境到底是怎样配置出来的。</strong>以拯救那些大一刚刚开学，即将或是已经被 C 语言 / Dev C++ / VC 6.0 荼毒半年有余的同学们。</p><p><br></p><h1 id="壹-→-Atom"><a href="#壹-→-Atom" class="headerlink" title="壹 → Atom"></a>壹 → Atom</h1><p><strong>Atom：A hackable text editor for the 21st Century</strong></p><p><img src="https://i.loli.net/2018/03/11/5aa51fd0641a8.jpg" alt="img"></p><p>首先，介绍工具：<strong>Atom 文本编辑器</strong>，由 Github 出品的基于 Electron / Node.js 的半开源文本编辑器。官网位于 -&gt; <a href="https://atom.io/" target="_blank" rel="noopener">https://atom.io/</a></p><p>为什么我从一众优秀的文本编辑器中选择了 Atom，而不是 Vim，又放弃了我用了一年多的 Sublime Text？</p><ul><li><strong>开源。</strong>GitHub 上的大佬叫他是 Hackable 就不是吹的，配置文件是 <code>cson</code>，样式文件是 <code>CSS</code> 和 <code>Less</code>，所以理论上你可以把 Atom 配置成任何你想要的样子。</li><li><strong>开箱即用。</strong>所谓的 Out-Of-The-Box Experience 说的就是 Atom。自带 4 组 UI 主题、4 组 Syntax 主题，自带 Markdown 渲染器、代码美化插件等等。</li><li><strong>简单设置自带图形界面。</strong>无疑对我们这些 <code>Spicy Chicken</code> 很用户友好了，一些简单的设置是直接用下拉菜单的形式配置的，不需要打开诸如 <code>vimrc</code> 和 <code>User.sublime-settings</code> 然后费尽心思的直接改代码。</li></ul><p>又为什么我选择了 Atom 而不是 IDE？</p><p>我只能说，就我们这些 <code>Spicy Chicken</code> 来说，写的代码还轮不到 IDE 的事情，毕竟刚开始的我们，C / C++ 一个项目不超过两个文件，一个文件不超过 500 行代码，用 IDE 来 <code>cmake</code> 一波岂不是很亏。因此我在 IDE 和轻量级可拓展的文本编辑器中选择了后者，又在文本编辑器中选择了半开源、可 Hack 的 Atom。<strong>以上。</strong></p><p><br></p><h1 id="贰-→-配置-Atom-成为写-C-C-的「IDE」"><a href="#贰-→-配置-Atom-成为写-C-C-的「IDE」" class="headerlink" title="贰 → 配置 Atom 成为写 C/C++ 的「IDE」"></a>贰 → 配置 Atom 成为写 C/C++ 的「IDE」</h1><p>文本编辑器的最大的优势在于你可以通过开源社区下载，甚至自己编译开发「插件 - Plugin」来完善它，实现「开箱即用」中所没有提供的功能。</p><h2 id="1-写代码的时候"><a href="#1-写代码的时候" class="headerlink" title="1. 写代码的时候"></a>1. 写代码的时候</h2><p>一个有情怀的 IDE 基本都会实现<strong>代码自动补全</strong>，<strong>代码实时编译纠错</strong>，以及<strong>代码高亮</strong>（为了美丽）和<strong>代码自动整理。</strong>很可惜，Dev C++ 没有，Codeblock 也没有。因此，我们要完善我们崭新的 Atom 来实现以上功能。</p><h3 id="代码自动补全"><a href="#代码自动补全" class="headerlink" title="代码自动补全"></a>代码自动补全</h3><p><strong>Plugin:</strong> autocomplete-clang</p><p><img src="https://i.loli.net/2018/03/11/5aa52f724ffec.jpg" alt="img"></p><h3 id="代码实时编译"><a href="#代码实时编译" class="headerlink" title="代码实时编译"></a>代码实时编译</h3><p><strong>Plugins:</strong> linter, linter-clang, linter-ui-default</p><p><img src="https://i.loli.net/2018/03/11/5aa52fa12a4ec.jpg" alt="img"></p><h3 id="代码高亮"><a href="#代码高亮" class="headerlink" title="代码高亮"></a>代码高亮</h3><p><strong>Themes</strong>，这里的问题主要在于个人审美，我相信一定有一个美丽的 UI 和配套的 Syntax 主题打动你。</p><p><img src="https://i.loli.net/2018/03/11/5aa52fc316d12.jpg" alt="img"></p><h3 id="代码自动整理"><a href="#代码自动整理" class="headerlink" title="代码自动整理"></a>代码自动整理</h3><p><strong>Plugin:</strong> Atom-beautify</p><p><img src="https://i.loli.net/2018/03/11/5aa52ff2cb70f.jpg" alt="img"></p><p><br></p><h2 id="2-写完代码之后"><a href="#2-写完代码之后" class="headerlink" title="2. 写完代码之后"></a>2. 写完代码之后</h2><p>一个能正常操作的 IDE 都能通过，或是绿色箭头，或是组合键 <code>Fn + F5</code> 之类的方式编译运行。</p><p>在 Atom 里我们也可以实现：</p><h3 id="编译运行-C-C"><a href="#编译运行-C-C" class="headerlink" title="编译运行 C/C++"></a>编译运行 C/C++</h3><h4 id="一键编译：script"><a href="#一键编译：script" class="headerlink" title="一键编译：script"></a>一键编译：script</h4><p><img src="https://i.loli.net/2018/03/11/5aa53170e2991.jpg" alt="img"></p><p>插件 script 实际上是通过识别文件类型来执行对应的命令编译源代码。比如 C++ 的编译命令实际上是 <code>[Command: bash -c &#39;xcrun clang++ -std=c++14 -Wall -include stdio.h -fcolor-diagnostics -include iostream &#39;$Path_To_CPP_File$/Test.cpp&#39; -o /tmp/cpp.out &amp;&amp; /tmp/cpp.out&#39;]</code>，通过快捷键 <code>⌘ + I</code> 直接运行指令来编译。</p><p><img src="https://i.loli.net/2018/03/11/5aa533942bab0.jpg" alt="img"></p><h4 id="调出终端：platform-ide-terminal"><a href="#调出终端：platform-ide-terminal" class="headerlink" title="调出终端：platform-ide-terminal"></a>调出终端：platform-ide-terminal</h4><p><img src="https://i.loli.net/2018/03/11/5aa531cb9e7b8.jpg" alt="img"></p><p>如果不满意 script 一键编译运行的话，可以通过这个插件唤出终端，这样直接了当用 <code>g++ -o $File_Name$ $File_Name.cpp$</code> 这一命令来运行，这时候程序也支持输入，与 Windows 下 Dev C++ 中默认运行调出 Command Prompt 小黑框一般道理。同时这样也方便用 <code>gdb</code> 来进行调试。</p><p><br></p><h2 id="3-一个有情怀的工作流开发者的加成"><a href="#3-一个有情怀的工作流开发者的加成" class="headerlink" title="3. 一个有情怀的工作流开发者的加成"></a>3. 一个有情怀的工作流开发者的加成</h2><p>在 ACM 中，每段代码都是有标准输入和标准输出的。在 C / C++ 中我们可以通过这样的代码片段来读取输入：<code>in.txt</code> 并将程序输出、程序运行时间写入文件：<code>out.txt</code>。在保证 C / C++ 源代码和两个 TXT 文件再同一个文件目录下，这段代码是这样的：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> SUBMIT</span></div><div class="line">freopen(<span class="string">"in.txt"</span>, <span class="string">"r"</span>, <span class="built_in">stdin</span>);</div><div class="line">freopen(<span class="string">"out.txt"</span>, <span class="string">"w"</span>, <span class="built_in">stdout</span>);</div><div class="line"><span class="keyword">long</span> _begin_time = clock();</div><div class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></div><div class="line"></div><div class="line"><span class="comment">/* your code here */</span></div><div class="line"></div><div class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> SUBMIT</span></div><div class="line"><span class="keyword">long</span> _end_time = clock();</div><div class="line"><span class="built_in">printf</span>(<span class="string">"time = %ld ms"</span>, _end_time - _begin_time);</div><div class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></div></pre></td></tr></table></figure><p>同时要在头文件定义时加入：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">define</span> SUBMIT <span class="comment">//本地运行这行留下，提交代码直接注释掉</span></span></div></pre></td></tr></table></figure><p>这样在 Atom 中就可以形成工作流：代码区域 - 编写 → 输入内容 <code>in.txt</code> → 编译代码 → 查看输出文件内容、运行时间 <code>out.txt</code></p><p><img src="https://i.loli.net/2018/03/11/5aa5377418b17.jpg" alt="img"></p><p><strong>直观纯粹，效率优先。</strong></p><p><img src="https://i.loli.net/2018/03/11/5aa53879150d8.jpg" alt="img"></p><p>最后，上成果。这样的 Atom 配置在写 C / C++ 基础程序的时候，基本实现了：</p><ul><li>Linter: 基于 clang 的实时编译</li><li>代码高亮与自动补全</li><li>代码自动优化美化</li><li>一键编译运行</li><li>终端调试</li></ul><p>我相信，这样的配置不仅完美的适合小型项目的编写，还能极大的提升对代码的敏感和热爱。至少，这种解决方式，比 Dev C++ 和 VC 6.0 体面，也比 Visual Studio 和 CLion 纯粹、轻量。</p><p>感谢阅读。</p><p>鞠躬。</p><p><br></p><p><br></p><p><a href="https://spencerwoo.com">©Spencer Woo</a></p>]]></content>
    
    <summary type="html">
    
      
      
        
        
          
        
      
    
    </summary>
    
      <category term="教程向" scheme="https://spencerwoo.com/categories/%E6%95%99%E7%A8%8B%E5%90%91/"/>
    
    
      <category term="tutorial" scheme="https://spencerwoo.com/tags/tutorial/"/>
    
      <category term="code" scheme="https://spencerwoo.com/tags/code/"/>
    
      <category term="sexy moves" scheme="https://spencerwoo.com/tags/sexy-moves/"/>
    
      <category term="atom" scheme="https://spencerwoo.com/tags/atom/"/>
    
      <category term="sspai" scheme="https://spencerwoo.com/tags/sspai/"/>
    
  </entry>
  
  <entry>
    <title>知乎 | 如何鉴别文艺青年</title>
    <link href="https://spencerwoo.com/2018/03/05/%E7%9F%A5%E4%B9%8E-%E5%A6%82%E4%BD%95%E9%89%B4%E5%88%AB%E6%96%87%E8%89%BA%E9%9D%92%E5%B9%B4/"/>
    <id>https://spencerwoo.com/2018/03/05/知乎-如何鉴别文艺青年/</id>
    <published>2018-03-05T11:35:34.000Z</published>
    <updated>2018-03-05T12:27:04.100Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>在知乎上面看到了这样一个问题：</p><blockquote><p>如何鉴别文艺青年？</p></blockquote><p><br></p><hr><p><img src="https://i.loli.net/2018/03/05/5a9d33c463bcc.jpg" alt="img"></p><h1 id="①-文艺青年"><a href="#①-文艺青年" class="headerlink" title="① 文艺青年"></a>① 文艺青年</h1><p>我曾想过，如果有一天，我不得不去相亲，</p><p>那我一定会在大家都比较放松的时候，突然问对方：</p><p><strong>「相对论的两个基本假设是什么？」</strong></p><p>我估摸着，对方在那一刹那，可能会有以下反应：</p><p>（A）一愣，然后说「不知道诶，是什么呀？」；</p><p>（B）冷静地说出正确答案；</p><p>（B2）「狭义相对论还是广义相对论？」；</p><p>（C）反问「你是学物理的吗？」；</p><p>（D）笑着说道「你是在做什么心理学实验吗？」；</p><p>（E）一脸厌恶，嘀咕道「书呆子」/「神经病」；</p><p><strong>（F）思考了一下，说「我不知道什么是相对论，但我知道……（她眼中的爱因斯坦或人生的看法之类）」；</strong></p><p><br></p><p>这一瞬间的反应，能影射出她是一个什么样的人。</p><p>（A）普通青年；</p><p>（B）单纯的普通学霸；</p><p>（B2）…那就必定是赞大佬无疑了；</p><p>（C）思维缜密的人；</p><p>（D）充满好奇心的社会人；</p><p>（E）无趣而又不善于掩饰自己的人；</p><p><strong>（F）便是「文艺青年」无疑了。</strong></p><p>以上只是一个小小的例子。</p><p><br></p><p>那详细地讲，什么是「文艺青年」呢？</p><p>「文艺青年」就是：</p><ul><li>即使我不了解，都要假装对此很熟悉；</li><li>即使我没有进步，都要假装自己的灵魂得到升华；</li><li>即使我过得很糟，都要在大家面前塑造完美无瑕。</li></ul><p>……</p><p>普通青年，有为了物质而活的，有为了精神而活的，但不管怎么样，都活着真实的世界。</p><p><strong>而「文艺青年」，却更多地活在了那个虚构的、比真实自己单纯美好得多的「自己」中。</strong></p><p><br></p><p>摘自：知乎回答：<a href="https://www.zhihu.com/question/268022081/answer/334128776" target="_blank" rel="noopener">如何鉴别文艺青年？</a></p><p><br></p><p><img src="https://i.loli.net/2018/03/05/5a9d373e70386.jpg" alt="img"></p><h1 id="②-少年"><a href="#②-少年" class="headerlink" title="② 少年"></a>② 少年</h1><blockquote><p>他是个十六岁的少年，真正的少年，看着春风不喜，看着秋风不悲，看着冬雪不叹，看着夏蝉不烦，他看着喜欢的才喜，看着厌憎的便烦，看着不公平的便叹，看到夕阳下的壮烈背影才悲。</p></blockquote><p>高中的时候就很是喜欢这种表达。</p><p>能在文章里面反复引用。</p><p>还包括：南方周末的新年贺词、论自由、以及《幼学琼林》中的「急急如律令」。</p><p>现在马上就要 20 岁了。就会有一种感受：之前，包括初中，自己没事在朋友圈、QQ 空间里面发两句无病呻吟的诗，从微博上面复制粘贴两首诗歌、一张图片，就假装自己行迹天涯。那不叫文艺，叫<strong>「又酸又装逼」。</strong></p><p>以及：「句号。是他们的象征之一。」</p><p><br></p><hr><p>我只是想做你的盖世英雄罢了。</p><p>这是今日份的碎碎念。</p><p>但这句：</p><blockquote><p>「文艺青年」，却更多地活在了那个虚构的、比真实自己单纯美好得多的「自己」中。</p></blockquote><p>却是真的。</p><p><br></p><p>©Spencer Woo</p>]]></content>
    
    <summary type="html">
    
      
      
        
        
          
        
      
    
    </summary>
    
      <category term="碎碎念" scheme="https://spencerwoo.com/categories/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"/>
    
    
      <category term="sexy moves" scheme="https://spencerwoo.com/tags/sexy-moves/"/>
    
      <category term="speak out" scheme="https://spencerwoo.com/tags/speak-out/"/>
    
  </entry>
  
  <entry>
    <title>The Lightroom</title>
    <link href="https://spencerwoo.com/2018/02/27/The-Lightroom/"/>
    <id>https://spencerwoo.com/2018/02/27/The-Lightroom/</id>
    <published>2018-02-27T12:38:40.000Z</published>
    <updated>2018-03-01T12:56:12.580Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h2 id="好看的照片三千一张，有趣的灵魂加个狗头。"><a href="#好看的照片三千一张，有趣的灵魂加个狗头。" class="headerlink" title="好看的照片三千一张，有趣的灵魂加个狗头。"></a>好看的照片三千一张，有趣的灵魂加个狗头。</h2><p>去他妈的 Android Studio 和 Google，非得惹事情被挡在 GFW 外面。</p><p>气死了。</p><blockquote><p>这里我要表达的是对美国谷歌公司的愤慨，对资本主义的不满，对党和人民群众的热爱，对祖国的敬爱与敬畏。</p></blockquote><p>Gradle 和 Android SDK 的默认更新源都被阻挡在了国门之外。</p><p>我一条 <code>brew install gradle</code> 执行了小一个小时。</p><p>叹气。</p><p><img src="https://i.loli.net/2018/03/01/5a97ef8acc9d4.jpg" alt="img"></p><p><br></p><h2 id="科技以换壳为本"><a href="#科技以换壳为本" class="headerlink" title="科技以换壳为本"></a>科技以换壳为本</h2><p><code>Terminal</code> 也是。</p><p>我的 iTerm2 配置：</p><ul><li>默认 zsh</li><li>配置文件：oh-my-zsh</li><li>Theme: <code>ZSH_THEME=&quot;agnoster&quot;</code></li><li>Color Scheme: Solarized Dark High Contrast</li></ul><p><img src="https://i.loli.net/2018/03/01/5a97f0ed164c8.jpg" alt="img"></p><p><br></p><h2 id="有关光的艺术"><a href="#有关光的艺术" class="headerlink" title="有关光的艺术"></a>有关光的艺术</h2><p><img src="https://i.loli.net/2018/03/01/5a97f14f5f795.jpg" alt="img"></p><p>Adobe 爸爸更新了 Lightroom，增加了 Adobe 云，并且把 UI 变好看了。</p><p>手机端的体验尤其快活。</p><h2 id="这篇博文毫无营养"><a href="#这篇博文毫无营养" class="headerlink" title="这篇博文毫无营养"></a>这篇博文毫无营养</h2><p>告辞。</p><p><br></p><p><br></p><p>©Spencer Woo</p>]]></content>
    
    <summary type="html">
    
      
      
        
        
          
        
      
    
    </summary>
    
      <category term="碎碎念" scheme="https://spencerwoo.com/categories/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"/>
    
    
      <category term="sexy moves" scheme="https://spencerwoo.com/tags/sexy-moves/"/>
    
  </entry>
  
  <entry>
    <title>SM.MS</title>
    <link href="https://spencerwoo.com/2018/01/28/SM-MS/"/>
    <id>https://spencerwoo.com/2018/01/28/SM-MS/</id>
    <published>2018-01-28T08:25:32.000Z</published>
    <updated>2018-01-28T12:12:10.130Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><blockquote><p>曾踏月而来</p><p>只因你在山中</p><p>山风拂发、拂颈、拂裸露的肩膀</p><p>而月光衣我以华裳</p></blockquote><hr><p><img src="https://i.loli.net/2018/01/28/5a6d937413bbd.jpg" alt="img"></p><p>托 V 站大佬的福，我用上了极为可靠的、支持 HTTPS 的、GeoTrust EV SSL CA - G4 签发证书的、<strong>证书名字叫：Cat Networks, Inc 的图床！</strong>—— <a href="https://sm.ms/" target="_blank" rel="noopener">SM.MS</a></p><p>就冲这名字，我就得用这个啊。</p><p>最近的半年里，当我还在用七牛云做我的图床，以及我的网站并不支持 HTTPS 的时候，我的图片都是通过在 macOS 平台上或许是最为知名的图床工具—— <a href="https://www.toolinbox.net/iPic/" target="_blank" rel="noopener">iPic</a> 进行方便快捷的上传。当然 iPic 也确实，在大部分时间里，满足了我的需求。然而，iPic 免费版的微博图床存在压缩图片、图片可能被添加水印或删除等诸多不足，而高级版采用的订阅制也让不少人心生不快。不过为了便捷的操作我还是在去年的双十一购置了一年的 iPic 高级版账户，花费了我 30 大洋。这样我的图片也就能通过 iPic 无缝衔接式的上传至七牛云。</p><p>事到如今，我换掉了不支持未备案域名 HTTPS 的七牛云，换成了 SM.MS 图床。如何方便、快捷、简单、无脑地把我想要上传至图床的内容成功上传，并且还能将图片外链直接复制到剪切板呢？经过一下午的探索，我发现了：基础、强、极其强三种方法。</p><p><br></p><h1 id="基础-网页版点击文件直接上传"><a href="#基础-网页版点击文件直接上传" class="headerlink" title="基础 - 网页版点击文件直接上传"></a>基础 - 网页版点击文件直接上传</h1><p><img src="https://i.loli.net/2018/01/28/5a6d9ee69a62a.jpg" alt="img"></p><h1 id="强-Chrome-插件"><a href="#强-Chrome-插件" class="headerlink" title="强 - Chrome 插件"></a>强 - Chrome 插件</h1><p>在 GitHub 上逛呀又逛，发现了一个支持 SM.MS 图床的插件：<a href="https://github.com/sinchang/smms" target="_blank" rel="noopener">SM.MS 图床</a></p><p>大概功能是拖拽上传，自动提取图片外链。配置十分简单，并且已经上架 Chrome Web Store。</p><p><br></p><h1 id="极其强-Automator"><a href="#极其强-Automator" class="headerlink" title="极其强 - Automator"></a>极其强 - Automator</h1><blockquote><p>iOS 上大名鼎鼎的 <a href="https://sspai.com/post/tag/workflow" target="_blank" rel="noopener">Workflow</a> 在<a href="https://sspai.com" target="_blank" rel="noopener">我派</a>是深入人心，许多大神研究了很多高阶的玩法，利用 Workflow 提高了不少的效率。不得不承认，自从我开始用 Workflow 之后，也是越来越离不开他。iOS 端有 Workflow 这样的神器，那么 Mac 端呢？当然有，而且还是 macOS 系统自带的，叫 Automator ，俗称「扛炮」。他在一个很不起眼的地方，你可以通过 Spotlight 搜索来启动它。</p></blockquote><p><img src="https://i.loli.net/2018/01/28/5a6da18d521a0.png" alt="img"></p><p>讲道理，第一次知道 Automator 叫扛炮，我笑的停不下来。</p><p>其实，利用 macOS 自带的 Automator 程序，我们可以自己 DIY 一个简单、免费的图床上传工具，来满足我日常写字传图的需求。</p><h2 id="1-Dependency"><a href="#1-Dependency" class="headerlink" title="1. Dependency"></a>1. Dependency</h2><p><a href="https://sm.ms/" target="_blank" rel="noopener">SM.MS</a> 提供了一个非常简单的上传 API，我们可以利用 macOS 自带的 curl 命令行工具通过 POST 方法直接上传本地图片。API 的返回参数是以 json 的形式返回数据的，我们可以利用命令行工具 jq 来解析 json 数据。</p><p>依托：</p><ul><li><a href="https://github.com/curl/curl" target="_blank" rel="noopener">curl</a> —— A command line tool and library for transferring data with URL syntax</li><li><a href="https://brew.sh/" target="_blank" rel="noopener">Homebrew</a> —— The missing package manager for macOS（可有可无）</li><li><a href="https://github.com/stedolan/jq" target="_blank" rel="noopener">jq</a> —— Command-line JSON processor</li></ul><h2 id="2-Configuration"><a href="#2-Configuration" class="headerlink" title="2. Configuration"></a>2. Configuration</h2><h4 id="a-安装依托"><a href="#a-安装依托" class="headerlink" title="a. 安装依托"></a>a. 安装依托</h4><p>macOS 自带 curl，无需担心。</p><p>如果你装有 Homebrew，可以在 Terminal 中键入 <code>brew install jq</code> 来安装。</p><p>OR … 你也可以从 <a href="https://github.com/stedolan/jq/releases" target="_blank" rel="noopener">GitHub</a> 下载然后将文件拖进 <code>/usr/local/bin</code> 目录。下载完成后，在 Terminal 中键入 <code>chmod +x /usr/local/bin/jq</code> 赋其可执行权限。</p><h4 id="b-配置-Automator"><a href="#b-配置-Automator" class="headerlink" title="b. 配置 Automator"></a>b. 配置 Automator</h4><p><img src="https://i.loli.net/2018/01/28/5a6da5f8bc538.jpg" alt="img"></p><p>首先，我们打开 Automator，在弹出的窗口中选择新建服务 (Service)，然后从左边的资源库中依次拖拽出「拷贝至剪贴板」(Copy to Clipboard)，「运行 Shell 脚本」(Run Shell Script) 和「显示通知」(Display Notification) 三个操作。</p><p><img src="https://i.loli.net/2018/01/28/5a6da7f3e297d.png" alt="img"></p><p>接着在 Shell 窗口中粘贴 <code>curl -F smfile=@$@ https://sm.ms/api/upload | /usr/local/bin/jq -r &#39;.data.url&#39; | sed &#39;s/^/![img](&amp;/; s/$/)&amp;/&#39;| pbcopy</code> ，并将右上角的「传递输入」选项设为「作为自变量」，即：Pass input: as arguments.</p><p>上面我们在 Shell 窗口中所执行的命令主体依次是：<code>curl</code>，<code>jq</code>，<code>sed</code> 和 <code>pbcopy</code> 。</p><ol><li><p>通过 <code>curl -F smfile=@$@ https://sm.ms/api/upload</code> 这一命令，我们选择的图片就已经上传到 SM.MS 图床上了，同时，服务器给我们返回了我们所需要的 JSON 文件，如果我们直接在终端执行这一命令会更直观的看到 JSON 的样子，如下图。</p><p><img src="https://i.loli.net/2018/01/28/5a6dad980acd6.jpg" alt="img"></p></li><li><p>通过 <code>/usr/local/bin/jq -r &#39;.data.url&#39;</code> 这个命令，我们就将服务器返回的 JSON 文件进行解析，得到我们的图片外链 url 并输出。</p></li><li><p>不过我还想直接得到 Markdown 格式图片链接，那么这段命令就起作用了 <code>sed &#39;s/^/![img](&amp;/; s/$/)&amp;/&#39;</code>，这段命令会调用 sed 流编辑器将图片链接转换为 Markdown 格式。</p></li><li><p>最后我们用 <code>pbcopy</code> 将得到的图片外链复制到剪贴板。</p></li></ol><p>然后我们在 Shell 脚本后添加一个通知提醒自己图片上传成功：Display Notifications.</p><p>最后，我们保存服务，一个一键上传图片至 SM.MS 并复制图片链接的小工具就完成了。</p><p><img src="https://i.loli.net/2018/01/28/5a6dab73911df.jpg" alt="img"></p><p>正常使用这个 Service 的时候，我们可以通过在图片上方鼠标右键选择服务 (Service) 然后点击我们刚刚保存的 Workflow 名字 (PicbedSM - MD) 来执行这个操作。</p><p>更高阶的玩法，我们还可以将这个 Service 直接绑定全局快捷键 （<code>⌘ + U</code>），这样我们选中一个图片就可以通过按键组合飞速上传，岂不美哉！</p><p><br></p><p>鞠躬。</p><p><br></p><p><br></p><p>© Spencer Woo</p>]]></content>
    
    <summary type="html">
    
      
      
        
        
          
        
      
    
    </summary>
    
    
      <category term="code" scheme="https://spencerwoo.com/tags/code/"/>
    
      <category term="sexy moves" scheme="https://spencerwoo.com/tags/sexy-moves/"/>
    
      <category term="mac" scheme="https://spencerwoo.com/tags/mac/"/>
    
  </entry>
  
  <entry>
    <title>Spencer&#39;s HTTPS-ed Blog - v1.0</title>
    <link href="https://spencerwoo.com/2018/01/26/Spencer-s-HTTPS-ed-Blog-v1-0/"/>
    <id>https://spencerwoo.com/2018/01/26/Spencer-s-HTTPS-ed-Blog-v1-0/</id>
    <published>2018-01-26T12:18:24.000Z</published>
    <updated>2018-01-28T07:27:45.780Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p><img src="https://i.loli.net/2018/01/28/5a6d7b398184c.jpg" alt="img"></p><p>一个网站开头的小绿标是网站管理员的基本素养。</p><p><br></p><hr><p>是滴，我的博客今天早上 7 点 19 分正式开始<strong>全站 HTTPS 了！</strong></p><p><strong>Well, almost.</strong></p><p>其实托管在 GitHub 上面的博客 + 自定义域名实现<code>全站 HTTPS</code>真是超级难搞定的。</p><p><br></p><h1 id="一-BASELINE"><a href="#一-BASELINE" class="headerlink" title="一. BASELINE"></a>一. BASELINE</h1><p>在 GitHub Pages 上托管的博客最最最最初的网址：<em>*</em>.github.io 本来是全站 HTTPS 的，证书是 GitHub 分发的，可是自定义域名就让这个证书失效了。我们可爱的小绿标也消失了。</p><blockquote><p>“师傅，你在……赛车？”</p><p>“不，我在追风。”</p><p><br></p><p>一道完美的弧线，如同流星追月，长河入海。王建国的出租车像一把银梭，如同浩瀚宇宙里的夺目灿星，又似汪洋中跃起的飞鱼，将那批出租车瞬间抛远。</p></blockquote><p><br></p><h1 id="二-UPGRADE"><a href="#二-UPGRADE" class="headerlink" title="二. UPGRADE"></a>二. UPGRADE</h1><p>非常难过的是，GitHub Pages 不支持上传SSL证书。 我们曲线救国：用 CloudFlare 的 CDN 服务器反向代理。<br>CloudFlare 是一家 CDN 提供商，它提供了免费的 HTTPS 服务，但不是应用SSL证书。CloudFlare 的基本实现模式是，用户到 CDN 服务器的连接为<code>https</code>，而 CDN 服务器到 Github 的服务器的连接为<code>http</code>，即在 CDN 服务器那里加上反向代理。</p><ol><li>注册并登录 CloudFlare，并在自己的域名提供商（我的是阿里云万网）将自己域名下的 Name Server 修改为 CloudFlare 的 Name Server.</li><li>在 CloudFlare 的 DNS 设置域名匹配到自己的博客，然后启用动态 DNS 加速.</li><li>在 CloudFlare 的 Crypto 设置 SSL 为 Full，等待一定时间实现建立连接后，就可以通过 <code>https</code> 来访问博客咯~</li><li>在 CloudFlare 的 Page Rules 中设置路由规则。一般情况下，利用 <code>Always use https</code> 设置两条规则，规则链接分别为 <code>http://your_site_url.com/*</code> 与 <code>http://www.your_site_url/*</code>，这样就可以开启 <code>https</code> 强制跳转.</li></ol><p>到这里我们就基本实现了全站 HTTPS (Almost).</p><blockquote><p>杨秋之以为自己见到了美，他听老师说，美是人类内心的根源，你见到了美，自然而然地，就明白人类为什么前行，为什么进步，为什么义无反顾。</p></blockquote><p><br></p><h1 id="三-WRAP-UP"><a href="#三-WRAP-UP" class="headerlink" title="三. WRAP_UP"></a>三. WRAP_UP</h1><p>虽然通过上面的方法我们把全站大部分内容 实现了用 HTTPS 传输，可是这时候如果用 Chrome 访问我们的博客，会发现 Console 里面出现警告：<code>Mixed Content</code> 。其实这个是因为我在我的网站上放置图片的时候用的是七牛云的图床服务，而这部分资源（Resources）的传输是 HTTP 协议传输的。So…</p><p><img src="https://i.loli.net/2018/01/28/5a6d7b66971f9.jpg" alt="img"></p><blockquote><p>遇见是两个人的事，离开却是一个人的决定。</p></blockquote><p>我可能要离开我现在的图床了。</p><p>知乎告诉我了两个免费的支持 HTTPS 外链的图床：</p><ul><li>图床001：<a href="https://www.tuchuang001.com/" target="_blank" rel="noopener">https://www.tuchuang001.com/</a></li><li>爱信息图床：<a href="https://tu.aixinxi.net/index.php" target="_blank" rel="noopener">https://tu.aixinxi.net/index.php</a></li></ul><p>还在测试中，不知道哪个更好一点。</p><blockquote><p>陶小红一直笑，第二天，她说当晚回去，脚就肿了，她还说，杨秋之，你跳舞很有节奏，旁人是踩点，你是踩脚，每一下都能够恰到好处，位置恰到好处，集中在脚背、脚趾，力量也恰到好处，不会小到让我没有感觉，也不会大到让我终身残废。</p></blockquote><p>emmm 我是多么希望七牛云能支持没有备案的域名 HTTPS 外链啊。</p><p><br></p><p>鞠躬。</p><p><br></p><p><br></p><p>© Spencer Woo</p>]]></content>
    
    <summary type="html">
    
      
      
        
        
          
        
      
    
    </summary>
    
    
      <category term="code" scheme="https://spencerwoo.com/tags/code/"/>
    
      <category term="sexy moves" scheme="https://spencerwoo.com/tags/sexy-moves/"/>
    
  </entry>
  
  <entry>
    <title>让 Galaxy 焕发新生 | 我的安卓折腾之路</title>
    <link href="https://spencerwoo.com/2018/01/20/%E8%AE%A9-Galaxy-%E7%84%95%E5%8F%91%E6%96%B0%E7%94%9F-%E6%88%91%E7%9A%84%E5%AE%89%E5%8D%93%E6%8A%98%E8%85%BE%E4%B9%8B%E8%B7%AF/"/>
    <id>https://spencerwoo.com/2018/01/20/让-Galaxy-焕发新生-我的安卓折腾之路/</id>
    <published>2018-01-20T12:09:56.000Z</published>
    <updated>2018-01-26T04:26:37.720Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><blockquote><p>世界就是这样告终，不是嘭的一声，而是嘘的一声。</p></blockquote><p><br></p><p><strong>- 先来一段回忆杀 -</strong></p><p>2011 年的 6 月，我的生日，我买到了人生中第一台 Apple 的产品：iPod Touch. (4th-gen)</p><p>2016 年的 8 月，我迎来了人生中第一台 Mac. (MacBook, 12-inch, Early 2016)</p><p>2016 年的 11 月，我买来了人生中第一台 iPhone. (iPhone 7 Plus)</p><p>紧接着，我也迎来了不可避免的 Apple Watch，以及好感度爆棚的 AirPods。我想，这可能就标志着我开始了在所谓的「生态系统」中不能自拔的经历。</p><p><br></p><hr><p>如今，为了我<strong>大金老师</strong>的安卓开发，我翻出来了陪伴我整个高二，只有在考试的时候失误了一次，才迫使我抛弃了它的 Galaxy S5，让它在 2018 年焕发新生。</p><p><img src="http://owkccdyrm.bkt.clouddn.com/blog/2018-01-20-S5.JPG" alt="img"></p><p>Galaxy S5 是一部 2014 年春天发布的机器。除了它万年不变的塑料廉价质感的外壳，别的都是当年安卓界的翘楚，如日中天的三星令当年的小米华为之流难以望其项背。</p><p>但是它那令人难堪的塑料背壳，毫无设计感可言的塑料边框，和难用同嚼蜡的 TouchWiz 真是令人失望。</p><p>2018 年的今天，软件部分的改造工程从升级系统开始。</p><p><br></p><h1 id="壹-ME-x2764-Lineage-OS"><a href="#壹-ME-x2764-Lineage-OS" class="headerlink" title="壹. ME &#x2764; Lineage OS"></a>壹. ME <span class="github-emoji" title="heart" data-src="https://assets-cdn.github.com/images/icons/emoji/unicode/2764.png?v8">&#x2764;</span> Lineage OS</h1><p>自从上次刷机我不小心给我的 Galaxy S4 同时刷了两个二进制文件（SuperSU 和 Magisk 的二进制）进去导致了 Bootloop 让我的小 S4 变砖的惨痛经历，我这次异常谨慎。</p><p><img src="http://owkccdyrm.bkt.clouddn.com/blog/2018-01-20-S5_WholeView.JPG" alt="img"></p><p>翻遍了百度，由于我的 S5 是坑父亲的电信定制版，所以就算是大神云集的论坛：<a href="http://www.xda-developers.com" target="_blank" rel="noopener">xda-developers</a> 都很难找到第三方的 ROM。不过还好有 Lineage OS，令人激动。再说一遍，ME <span class="github-emoji" title="heart" data-src="https://assets-cdn.github.com/images/icons/emoji/unicode/2764.png?v8">&#x2764;</span> Lineage OS.</p><p>这里具体步骤参考了 —&gt; <a href="http://bbs.gfan.com/forum.php?mod=viewthread&amp;tid=9153633" target="_blank" rel="noopener">机锋论坛上的这个帖子</a></p><ol><li>到  <a href="http://www.lineageosdownloads.com/lineage-os-rom-downloads-build-status" target="_blank" rel="noopener">Lineage OS 的官网</a>下载 Lineage OS 卡刷版，电信定制版（G9009W）对应版本为 Galaxy S5 Duos China (kltechnduo)，最高对应版本为 Lineage OS 14.1 基于 Android 7.1.2.</li><li>到 <a href="http://twrp.me" target="_blank" rel="noopener">TWRP 官网</a>下载第三方 Recovery 线刷版，最新版本是 2017 年 12 月 9 日更新的 3.2.1-0 Released.</li><li>到 <a href="http://odindownload.com" target="_blank" rel="noopener">谁知道这是不是 Odin 的官网反正下载的 Odin 挺好用的官网</a>下载 Windows 版的 Odin3，它是三星刷机用的电脑客户端，最新版本是Odin 3.12.3.</li><li>依次刷入：① TWRP Recovery ② Lineage OS</li></ol><p>成功的标志：S5 的中国电信开机动画变成了 Lineage OS 的标志性小圈圈，稍等片刻便进入系统。</p><p><br></p><h1 id="贰-ME-x2764-Magisk"><a href="#贰-ME-x2764-Magisk" class="headerlink" title="贰. ME &#x2764; Magisk"></a>贰. ME <span class="github-emoji" title="heart" data-src="https://assets-cdn.github.com/images/icons/emoji/unicode/2764.png?v8">&#x2764;</span> Magisk</h1><p>Magisk 是一名台湾的大佬开发的以「系统外挂」方式存在的 Root 插件。</p><p>听说 SuperSU 被中国某个毒瘤厂家收购了，于是我转而投靠 Magisk 的怀抱。</p><p><img src="http://owkccdyrm.bkt.clouddn.com/blog/2018-01-20-S5_SystemInfo.JPG" alt="img"></p><p><a href="http://forum.xda-developers.com/apps/magisk" target="_blank" rel="noopener">XDA Developers Forum: Magisk</a></p><p>Magisk 也是通过 TWRP 第三方 Recovery 卡刷的，原理同上。</p><p>丢下一个链接就逃跑。</p><p><br></p><h1 id="叁-ME-x2764-Xposed"><a href="#叁-ME-x2764-Xposed" class="headerlink" title="叁. ME &#x2764; Xposed"></a>叁. ME <span class="github-emoji" title="heart" data-src="https://assets-cdn.github.com/images/icons/emoji/unicode/2764.png?v8">&#x2764;</span> Xposed</h1><p><strong>上帝之手</strong>，我只能这样形容 Xposed。</p><p><img src="http://owkccdyrm.bkt.clouddn.com/blog/2018-01-20-S5-xposed-magisk.jpg" alt="img"></p><p>从安卓 4.x 就存在的神器：Xposed 可以在不修改 apk 本身的情况下直接干预系统行为。</p><p>那些 wx 自动抢红包，wx 防撤回，修改应用启动图等等等等玄乎其玄的东东，都是 Xposed 干的。</p><p>上一个步骤安装 Magisk 除了提取 root 权限，还有一个目的就是让 Android 7.1.2 吃上 Xposed，具体刷入 Xposed 的步骤在这个链接：<a href="http://forum.xda-developers.com/xposed/unofficial-systemless-xposed-t3388268" target="_blank" rel="noopener">XDA Developers Forum: Systemless Xposed Framework based on Magisk</a></p><p>刷入 Xposed Framework 之后，我们就几乎可以在系统中为所欲为了。</p><p><img src="http://owkccdyrm.bkt.clouddn.com/blog/2018-01-20-S5_Xposed_NeteaseMusic.JPG" alt="img"></p><p>这里，我启用了 Xposed SDK25，安装了这些插件：</p><ul><li>网易云音乐插件：去除启动页广告，自动签到，<strong>本地显示</strong>会员、网易音乐人等等.</li><li>绿色守护：组织国产毒瘤软件自启动与链接启动.</li><li>Gravity Box：修改锁屏、桌面、通知栏、状态栏的利器.</li><li>PerfectColorBar：强制全局自适应状态栏颜色.</li><li>MinMinGuard：全局去广告.</li><li>…</li></ul><p><img src="http://owkccdyrm.bkt.clouddn.com/blog/2018-01-20-xposed%20framework.jpg" alt="img"></p><h1 id="Finally"><a href="#Finally" class="headerlink" title="Finally."></a>Finally.</h1><p>在我折腾的这段时间，我让：</p><ul><li>一个曾经半天待机就把自己耗没电的老机器变成能坚持一天.</li><li>一个停留在安卓 5.0.x 时代，还有着辣鸡到炸裂的系统 UI 的老机器吃上 Android Nougat.</li><li>一个可自定义东西少之又少的机器，拥有上帝之手，整个系统尽在掌控.</li></ul><p><img src="http://owkccdyrm.bkt.clouddn.com/blog/2018-01-20-battery-drain.jpg" alt="img"></p><blockquote><p>是黄书，但也是好书，一本黄书，写得人民群众手不释纸，夜不能寐，虽不能催泪，至少能催情。人民群众喜欢读，自己读了，还要给朋友读，甭管黄不黄，都是好书。</p></blockquote><p>晚安。</p><p><img src="http://owkccdyrm.bkt.clouddn.com/blog/2018-01-20-ECD88335-584A-41CE-B44C-E0BC365BC5BF.JPG" alt="img"></p><p>这是我的第二只猫猫，他叫小脑斧。</p><p><br></p><p><br></p><p>© Spencer Woo</p>]]></content>
    
    <summary type="html">
    
      
      
        
        
          
        
      
    
    </summary>
    
      <category term="教程向" scheme="https://spencerwoo.com/categories/%E6%95%99%E7%A8%8B%E5%90%91/"/>
    
    
      <category term="code" scheme="https://spencerwoo.com/tags/code/"/>
    
      <category term="sexy moves" scheme="https://spencerwoo.com/tags/sexy-moves/"/>
    
      <category term="android" scheme="https://spencerwoo.com/tags/android/"/>
    
  </entry>
  
  <entry>
    <title>HANDS ON | 盘点一下 2017 年购入的最令人满意的东东</title>
    <link href="https://spencerwoo.com/2018/01/04/HANDS-ON-%E7%9B%98%E7%82%B9%E4%B8%80%E4%B8%8B-2017-%E5%B9%B4%E8%B4%AD%E5%85%A5%E7%9A%84%E6%9C%80%E4%BB%A4%E4%BA%BA%E6%BB%A1%E6%84%8F%E7%9A%84%E4%B8%9C%E4%B8%9C/"/>
    <id>https://spencerwoo.com/2018/01/04/HANDS-ON-盘点一下-2017-年购入的最令人满意的东东/</id>
    <published>2018-01-04T08:58:04.000Z</published>
    <updated>2018-01-26T04:25:39.260Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><blockquote><p>本文参与 <a href="http://sspai.com/page/2017" target="_blank" rel="noopener">少数派 2017 年度征文</a></p></blockquote><hr><p><img src="http://owkccdyrm.bkt.clouddn.com/blog/2018-01-04-Alipay_Shot.jpg" alt="img"></p><blockquote><p>就像一个人穿越森林，总会途径沼泽与湿地，面临猛兽毒蛇，可这些总会过去。你穿过去，就能看见翠叶河与玫瑰花圃，会有人在花圃里等你，摘了一手的玫瑰，只为了送你。</p></blockquote><p>支付宝的账单昨天公布了。</p><p>嗝。<span class="github-emoji" title="smile" data-src="https://assets-cdn.github.com/images/icons/emoji/unicode/1f604.png?v8">&#x1f604;</span></p><p><br></p><h1 id="一-Airpods"><a href="#一-Airpods" class="headerlink" title="一. Airpods"></a>一. Airpods</h1><p><img src="http://owkccdyrm.bkt.clouddn.com/blog/2018-01-04-Airpods.jpg" alt="img"></p><p>▲ <em>Airpods and Battery Case</em></p><p>一句话结论：Airpods 是对于 iOS 和 macOS 用户最为友好的蓝牙分体式耳机。</p><p>好到我身边五个用 iPhone 的同学全部购入了这款耳机。包括我可爱的 <a href="http://tenkeyseven.com" target="_blank" rel="noopener">Tenkey</a> ~</p><p><br></p><h2 id="1-舒适度"><a href="#1-舒适度" class="headerlink" title="1. 舒适度"></a>1. 舒适度</h2><p>iPhone 自带小白耳机 Earpods 的舒适度完美的继承于 Airpods 上。</p><p>稳定程度堪比 Bose 鲨鱼鳍，除非穿衣脱衣或是被东西挂到这两个东东很难被人为弄掉。包括甩头、<strong>蹦迪</strong>、跑步、<strong>拳击考试</strong>…</p><p>又由于 Airpods 并不是入耳式耳机，所以根本没有听诊器效应。对夜跑的人儿很友好。</p><p>我对比的是谁呢？就是 Beoplay H5 —— 史上最差的蓝牙耳机、运动耳机、华而不实的耳机。</p><p>请看文章：<a href="http://spencerwoo.com/2017/11/08/HANDS-ON-B-O-Beoplay-H5-%E4%B8%8A%E6%89%8B/">HANDS ON | Beoplay H5</a></p><p>我听过的所有运动耳机中：Beoplay H5 是听诊器效应最严重、耳朵最不舒服、以及根本无法戴稳的耳机。</p><p><br></p><h2 id="2-音质"><a href="#2-音质" class="headerlink" title="2. 音质"></a>2. 音质</h2><p>要求一个非入耳式、分体式、蓝牙的耳机的音质，可以说是很过分了。</p><p>只能说，Airpods 音质和 Earpods 有过之无不及。和 Sony 大法家的降噪豆和 Bose 家的运动豆(?)都差很多。</p><p>但是 Airpods 在 Apple 的生态下简直无敌。肉耳无法察觉到的延迟和 5 小时本机 + 12 小时电池仓的续航足以吊打竞品。毕竟我听说 Sony 大法降噪豆固件更新之后都有足足 1 秒的延迟。生态系统降维打击真是惹不起啊。</p><p><br></p><h2 id="3-电池仓"><a href="#3-电池仓" class="headerlink" title="3. 电池仓"></a>3. 电池仓</h2><p>要单独讲讲这个小盒子。</p><p>通体白色，塑料质感，宣称能为 Airpods 提供 12 小时的额外续航。</p><p>可它真的很容易被划伤啊！！！还很容易进灰，进了灰几乎无法清洁。</p><p>迫使我们穷困的强迫症患者给它带上套子。</p><p><img src="http://owkccdyrm.bkt.clouddn.com/blog/2018-01-04-Airpods_Battery_Case.jpg" alt="img"></p><p>▲ <em>Airpods Battery Case Close-up</em></p><p><br></p><h1 id="二-米家电动牙刷"><a href="#二-米家电动牙刷" class="headerlink" title="二. 米家电动牙刷"></a>二. 米家电动牙刷</h1><p><img src="http://owkccdyrm.bkt.clouddn.com/blog/2018-01-04-Vertical_Toothbrush.JPG" alt="img"></p><p>▲<em>米家电动牙刷</em></p><p>电动牙刷可能是一名小资青年最为值得的投资了。</p><p>自从看完 <code>爱否科技</code> 的电动牙刷的测评，我就开始心心念电动牙刷。<span class="github-emoji" title="innocent" data-src="https://assets-cdn.github.com/images/icons/emoji/unicode/1f607.png?v8">&#x1f607;</span></p><p>虽然说这个 <code>米家声波电动牙刷</code> 听起来好像就是利用高频超声波来进行清洗牙齿，可惜一个 199 人民币的电动牙刷真不是这个原理。</p><p><br></p><h2 id="1-开箱"><a href="#1-开箱" class="headerlink" title="1. 开箱"></a>1. 开箱</h2><p>极为简洁，打开之后只有一枚牙刷手柄，右侧存放着的刷头、替换环、说明书以及充电器都用通体白色的盒子隐藏起来。特别令人惊艳的是：<strong>刷头是真空包装哦。</strong><span class="github-emoji" title="stuck_out_tongue" data-src="https://assets-cdn.github.com/images/icons/emoji/unicode/1f61b.png?v8">&#x1f61b;</span></p><p><img src="http://owkccdyrm.bkt.clouddn.com/blog/2018-01-04-Toothbrush_head.jpg" alt="img"></p><p>▲ <em>米家声波电动牙刷 刷头</em></p><p><br></p><h2 id="2-体验"><a href="#2-体验" class="headerlink" title="2. 体验"></a>2. 体验</h2><p>这个米家的产品啊，就是什么都能连接到它的 APP 上去，真是绝了。</p><p>万物皆可物联网。</p><p>除了电动牙刷最为本质的刷牙干净的特点以外，米家电动牙刷的 APP 还提供了每次刷牙的综合评分，根据刷牙时长、刷牙覆盖率、和刷牙均匀程度进行评分。然而根据我 3 天来的体验，米家电动牙刷给我打的分数连 85 分都没有超过，吝啬的堪比我的<strong>数值分析老师</strong>了。</p><p>咳咳。<span class="github-emoji" title="open_mouth" data-src="https://assets-cdn.github.com/images/icons/emoji/unicode/1f62e.png?v8">&#x1f62e;</span></p><p><img src="http://owkccdyrm.bkt.clouddn.com/blog/2018-01-04-Mijia_app.JPG" alt="img"></p><p>▲<em>Mijia App</em></p><p>牙刷除了定时 2 分钟外，还有三种刷牙模式：正常、温柔和个性定制。在刷牙过程中每隔半分钟牙刷还会停止震动不到 1 秒钟来提醒该换位置了。这些点应该是 <code>物联网工程</code> 的工程师们，也就是我的同学 <code>赞大佬</code> 和 <code>Tenkey</code>，的价值体现咯。<span class="github-emoji" title="grinning" data-src="https://assets-cdn.github.com/images/icons/emoji/unicode/1f600.png?v8">&#x1f600;</span></p><p>截至目前，这个电动牙刷给我带来的新鲜感，让我能每天二 ~ 三次，每次两分钟以上的坚持刷牙，比起曾经的手动刷牙要健康得多了。</p><p><br></p><h1 id="三-Extra"><a href="#三-Extra" class="headerlink" title="三. Extra"></a>三. Extra</h1><p>再墨迹一下 2017 年的美丽的遭遇。</p><ul><li>知乎达成 1632 赞同，414 感谢，1305 收藏。</li><li>在 Github 上建立了自己的<a href="http://spencerwoo.com">博客</a>。</li><li>2016 年 11 月份注册的公众号 <code>武先生很好看</code> 在 2017 年 12 月份终于更新了，finally。<span class="github-emoji" title="hushed" data-src="https://assets-cdn.github.com/images/icons/emoji/unicode/1f62f.png?v8">&#x1f62f;</span></li><li>购置了 Apple Watch，但被证明是除了看课表、默默提醒、以及心率监测没有其他用处。</li><li>去了秦皇岛三联海边公立图书馆，被附近的房价惊艳，被愿意 99 元载我们从秦皇岛到图书馆的友好滴滴司机圈粉。</li><li>去了两次天津，吃到了心心念的煎饼果子，被夜晚的海河惊艳。</li><li>还去了沈阳，社会实践，学院优秀团队，但并没有奖金。</li><li>去了玉渊潭、798、欢乐谷、故宫、南锣鼓巷、芳草地、西红门宜家、北京电影学院、阿里巴巴。</li><li>在比特币疯涨的潮流中悄默默赚到了小一千。</li><li>有了人生中第一只猫！</li></ul><p>以上没有时间顺序、没有重要程度顺序、没有任何顺序。</p><p><img src="http://owkccdyrm.bkt.clouddn.com/blog/2018-01-04-sanlian_seaside_library.jpg" alt="img"></p><p>▲ <em>秦皇岛 三联海边公益图书馆</em></p><p><br></p><p>就酱紫。</p><p>妈妈跟我讲马上就会有第二只猫咪啦，激动。</p><p>鞠躬。</p><p><br></p><p><br></p><p>© Spencer Woo</p>]]></content>
    
    <summary type="html">
    
      
      
        
        
          
        
      
    
    </summary>
    
    
      <category term="sexy moves" scheme="https://spencerwoo.com/tags/sexy-moves/"/>
    
      <category term="hands on" scheme="https://spencerwoo.com/tags/hands-on/"/>
    
  </entry>
  
  <entry>
    <title>并不是最后一篇博客的高产作家对猫的执念</title>
    <link href="https://spencerwoo.com/2017/12/28/%E5%B9%B6%E4%B8%8D%E6%98%AF%E6%9C%80%E5%90%8E%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2%E7%9A%84%E9%AB%98%E4%BA%A7%E4%BD%9C%E5%AE%B6%E5%AF%B9%E7%8C%AB%E7%9A%84%E6%89%A7%E5%BF%B5/"/>
    <id>https://spencerwoo.com/2017/12/28/并不是最后一篇博客的高产作家对猫的执念/</id>
    <published>2017-12-28T11:25:39.000Z</published>
    <updated>2018-01-26T04:04:40.110Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p><img src="http://owkccdyrm.bkt.clouddn.com/blog/2017-12-28-pubg-cat-header.jpg" alt="img"></p><p><img src="http://owkccdyrm.bkt.clouddn.com/blog/2017-12-28-PUBG_Cats-1.JPG" alt="img"></p><hr><p>2018 快乐。</p><p>©Spencer Woo</p>]]></content>
    
    <summary type="html">
    
      
      
        
        
          
        
      
    
    </summary>
    
      <category term="碎碎念" scheme="https://spencerwoo.com/categories/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"/>
    
    
      <category term="sexy moves" scheme="https://spencerwoo.com/tags/sexy-moves/"/>
    
  </entry>
  
  <entry>
    <title>Hello Atom</title>
    <link href="https://spencerwoo.com/2017/12/26/Hello-Atom/"/>
    <id>https://spencerwoo.com/2017/12/26/Hello-Atom/</id>
    <published>2017-12-26T13:39:24.000Z</published>
    <updated>2018-01-26T04:25:52.020Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p><img src="http://owkccdyrm.bkt.clouddn.com/blog/2017-12-27-golang.jpg" alt="img"></p><p>Hello Atom.</p><p>Hello 2018.</p><hr><p>这可能是今年最后一次更博了。</p><p>讲一讲 2017 年的最后 5 天里都发现了什么吧。</p><p><br></p><h1 id="壹"><a href="#壹" class="headerlink" title="壹"></a>壹</h1><p>Atom 真可爱。</p><p>我抛弃了陪伴我走过数据结构和 C 语言的 Sublime Text 3。</p><p>还是<strong>开源免费</strong>胜过<strong>闭源收费</strong>啊。无论闭源的大佬多么大佬。</p><h3 id="这个是写-C-的时候："><a href="#这个是写-C-的时候：" class="headerlink" title="这个是写 C++ 的时候："></a>这个是写 C++ 的时候：</h3><p><img src="http://owkccdyrm.bkt.clouddn.com/blog/2017-12-27-atom_cpp.jpg" alt="img"></p><p><br></p><h3 id="这个是玩耍-Go-的时候："><a href="#这个是玩耍-Go-的时候：" class="headerlink" title="这个是玩耍 Go 的时候："></a>这个是玩耍 Go 的时候：</h3><p><img src="http://owkccdyrm.bkt.clouddn.com/blog/2017-12-27-atom_go.jpg" alt="img"></p><p><br></p><p>追随<a href="http://life.felinae98.cn" target="_blank" rel="noopener">唐大佬</a>的步伐。</p><p>Keep Calm and <strong>Use Solarized.</strong></p><p><br></p><h3 id="这是-Atom-的-Markdown-实时预览："><a href="#这是-Atom-的-Markdown-实时预览：" class="headerlink" title="这是 Atom 的 Markdown 实时预览："></a>这是 Atom 的 Markdown 实时预览：</h3><p><img src="http://owkccdyrm.bkt.clouddn.com/blog/2017-12-27-atom_md.jpg" alt="img"></p><p><br></p><blockquote><p>A hackable text editor for the 21st century.</p></blockquote><p>Github 真不是吹的。</p><p><br></p><h1 id="贰"><a href="#贰" class="headerlink" title="贰"></a>贰</h1><p><img src="http://owkccdyrm.bkt.clouddn.com/blog/2017-12-27-euler.jpg" alt="img"></p><p>欧拉这个人真的是事情多得很。</p><blockquote><p>欧拉在数学的多个领域，包括<a href="http://zh.wikipedia.org/wiki/%E5%BE%AE%E7%A7%AF%E5%88%86" target="_blank" rel="noopener">微积分</a>和<a href="http://zh.wikipedia.org/wiki/%E5%9B%BE%E8%AE%BA" target="_blank" rel="noopener">图论</a>都做出过重大发现。他引进的许多数学术语和书写格式，例如<a href="http://zh.wikipedia.org/wiki/%E5%87%BD%E6%95%B0" target="_blank" rel="noopener">函数</a>的记法”f(x)”，一直沿用至今。此外，他还在<a href="http://zh.wikipedia.org/wiki/%E5%8A%9B%E5%AD%A6" target="_blank" rel="noopener">力学</a>、<a href="http://zh.wikipedia.org/wiki/%E5%85%89%E5%AD%A6" target="_blank" rel="noopener">光学</a>和<a href="http://zh.wikipedia.org/wiki/%E5%A4%A9%E6%96%87%E5%AD%A6" target="_blank" rel="noopener">天文学</a>等学科有突出的贡献。</p><p>欧拉是18世纪杰出的数学家，同时也是有史以来最伟大的数学家之一。他也是一位多产作者，其学术著作约有60-80册。法国数学家<a href="http://zh.wikipedia.org/wiki/%E7%9A%AE%E5%9F%83%E7%88%BE-%E8%A5%BF%E8%92%99%C2%B7%E6%8B%89%E6%99%AE%E6%8B%89%E6%96%AF" target="_blank" rel="noopener">皮埃尔-西蒙·拉普拉斯</a>曾这样评价欧拉对于数学的贡献：「读欧拉的著作吧，在任何意义上，他都是我们的大师」</p><p>— from Wikipedia</p></blockquote><p>2018 年的第二天将迎来一场考验我对欧拉老师的了解程度的考试——离散数学。</p><p>就比如：</p><p><img src="http://owkccdyrm.bkt.clouddn.com/blog/2017-12-27-euler_formula.jpg" alt="img"></p><p><span class="github-emoji" title="mask" data-src="https://assets-cdn.github.com/images/icons/emoji/unicode/1f637.png?v8">&#x1f637;</span></p><p><br></p><h1 id="叁"><a href="#叁" class="headerlink" title="叁"></a>叁</h1><p>知乎发布了「我的知乎 2017」。</p><p><img src="http://owkccdyrm.bkt.clouddn.com/blog/2017-12-27-zhihu_answers.jpg" alt="img"></p><p>嗝。</p><p>真是高产似那啥。</p><blockquote><p>全年登录 355 天，浏览 280,412 个页面。</p><p>全年阅读 46,548,392 个文字。</p><p>访问知乎时间最久的一天：2017 年 9 月 7 日。</p><p>最常访问时间：00:07-01:12，08:05-17:03，19:34-20:43</p></blockquote><p>鬼知道我 2017 年 9 月 7 日都经历了些什么。<span class="github-emoji" title="joy" data-src="https://assets-cdn.github.com/images/icons/emoji/unicode/1f602.png?v8">&#x1f602;</span></p><p>PC —&gt; <a href="http://2017.zhihu.com/pc.html" target="_blank" rel="noopener">http://2017.zhihu.com/pc.html</a></p><p>Phone —&gt; <a href="http://2017.zhihu.com" target="_blank" rel="noopener">http://2017.zhihu.com</a></p><p><br></p><p>好啦，结束啦。</p><p>2018 快乐。</p><p><br></p><p><br></p><p>©Spencer Woo</p>]]></content>
    
    <summary type="html">
    
      
      
        
        
          
        
      
    
    </summary>
    
    
      <category term="code" scheme="https://spencerwoo.com/tags/code/"/>
    
      <category term="sexy moves" scheme="https://spencerwoo.com/tags/sexy-moves/"/>
    
      <category term="sublime text" scheme="https://spencerwoo.com/tags/sublime-text/"/>
    
  </entry>
  
  <entry>
    <title>All about HEXO</title>
    <link href="https://spencerwoo.com/2017/12/13/All-about-HEXO/"/>
    <id>https://spencerwoo.com/2017/12/13/All-about-HEXO/</id>
    <published>2017-12-13T07:30:37.000Z</published>
    <updated>2018-04-09T00:55:53.680Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p><img src="http://owkccdyrm.bkt.clouddn.com/blog/2017-12-13-hexo_logo.jpg" alt="img"></p><p>这是一篇 <code>List</code>：A curated list of awesome things you can do with <code>Hexo</code> &lt;3 <code>Github Pages</code>.</p><p>本页面长期不定期更新。</p><p><br></p><h1 id="Hexo"><a href="#Hexo" class="headerlink" title="Hexo"></a>Hexo</h1><p>Hexo 是个好东西啊。</p><blockquote><p>HEXO - A fast, simple &amp; powerful blog framework</p></blockquote><p>不多说，<code>Hexo</code> 就是一个能在不到1分钟的时间里生成一个网站所有网页的框架。</p><p>现在我用的就是它来维护<a href="www.spencerwoo.com">我的博客</a>。</p><p><br></p><h1 id="Hexo-Plugins"><a href="#Hexo-Plugins" class="headerlink" title="Hexo Plugins"></a>Hexo Plugins</h1><h2 id="1-hexo-tag-aplayer"><a href="#1-hexo-tag-aplayer" class="headerlink" title="1. hexo-tag-aplayer"></a>1. hexo-tag-aplayer</h2><p>Yet another HTML5 music player.</p><p>又一个 HTML5 音频播放器。</p><p>项目地址：Find me on <a href="http://github.com/MoePlayer/hexo-tag-aplayer" target="_blank" rel="noopener">Github</a></p><h3 id="Demo"><a href="#Demo" class="headerlink" title="Demo"></a>Demo</h3><div id="aplayer0" class="aplayer" style="margin-bottom: 20px;"></div><script>var ap = new APlayer({element: document.getElementById("aplayer0"),narrow: false,autoplay: true,showlrc: 0,music: {title: "Radioactive (Acoustic)",author: "Imagine Dragons",url: "http://owkccdyrm.bkt.clouddn.com/Imagine%20Dragons%20-%20Radioactive%20%28Acoustic%29.mp3",pic: "http://owkccdyrm.bkt.clouddn.com/WechatIMG8.jpeg",}});window.aplayers || (window.aplayers = []);window.aplayers.push(ap);</script><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install --save hexo-tag-aplayer</div></pre></td></tr></table></figure><h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&#123;% aplayer title author url [picture_url, narrow, autoplay, width:xxx, lrc:xxx] %&#125;</div></pre></td></tr></table></figure><h3 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h3><ul><li><code>title</code>: music title</li><li><code>author</code>: music author</li><li><code>url</code>: music file url</li><li><code>picture_url</code>: optional, music picture url</li><li><code>narrow</code>: optional, narrow style</li><li><code>autoplay</code>: optional, autoplay music, not supported by mobile browsers</li><li><code>width:xxx</code>: optional, prefix <code>width:</code>, player’s width (default: 100%)</li><li><code>lrc:xxx</code>: optional, prefix <code>lrc:</code>, LRC file url</li></ul><h2 id="2-hexo-tag-dplayer"><a href="#2-hexo-tag-dplayer" class="headerlink" title="2. hexo-tag-dplayer"></a>2. hexo-tag-dplayer</h2><p>Yet another HTML5 video player.</p><p>又是一个 HTML5 视频播放器。</p><p>项目地址：Find me on <a href="http://github.com/MoePlayer/hexo-tag-dplayer" target="_blank" rel="noopener">Github</a></p><h3 id="Demo-1"><a href="#Demo-1" class="headerlink" title="Demo"></a>Demo</h3><div id="dplayer0" class="dplayer" style="margin-bottom: 20px;"></div><script>var dplayer0 = new DPlayer({"element":document.getElementById("dplayer0"),"video":{"url":"http://owkccdyrm.bkt.clouddn.com/Lana%20Del%20Rey%20-%20White%20Mustang%20%28Official%20Video%29.mp4","pic":"http://owkccdyrm.bkt.clouddn.com/blog/2017-12-15-dplayer-demo-title-img.jpg"}});</script><!-- dplayer used1 --><h3 id="安装-1"><a href="#安装-1" class="headerlink" title="安装"></a>安装</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install hexo-tag-dplayer --save</div></pre></td></tr></table></figure><h3 id="使用-1"><a href="#使用-1" class="headerlink" title="使用"></a>使用</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&#123;% dplayer key=value ... %&#125;</div></pre></td></tr></table></figure><p>其中 key 可以有：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">dplayer options:</div><div class="line">    &apos;autoplay&apos;, &apos;loop&apos;, &apos;screenshot&apos;, &apos;hotkey&apos;, &apos;mutex&apos;, &apos;dmunlimited&apos; : bool options, use &quot;yes&quot; &quot;y&quot; &quot;true&quot; &quot;1&quot; &quot;on&quot; or just without value to enable</div><div class="line">    &apos;preload&apos;, &apos;theme&apos;, &apos;lang&apos;, &apos;logo&apos;, &apos;url&apos;, &apos;pic&apos;, &apos;thumbnails&apos;, &apos;vidtype&apos;, &apos;suburl&apos;, &apos;subtype&apos;, &apos;subbottom&apos;, &apos;subcolor&apos;, &apos;subcolor&apos;, &apos;id&apos;, &apos;api&apos;, &apos;token&apos;, &apos;addition&apos;, &apos;dmuser&apos; : string arguments</div><div class="line">    &apos;volume&apos;, &apos;maximum&apos; : number arguments</div><div class="line">container options:</div><div class="line">    &apos;width&apos;, &apos;height&apos; : string, used in container element style</div><div class="line">other:</div><div class="line">    &apos;code&apos; : value of this key will be append to script tag</div></pre></td></tr></table></figure><h3 id="参数-Arguments-to-DPlayer-options-mapping"><a href="#参数-Arguments-to-DPlayer-options-mapping" class="headerlink" title="参数 Arguments to DPlayer options mapping:"></a>参数 Arguments to DPlayer options mapping:</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">    container: &quot;you needn&apos;t set this&quot;,</div><div class="line">    autoplay: &apos;autoplay&apos;,</div><div class="line">    theme: &apos;theme&apos;,</div><div class="line">    loop: &apos;loop&apos;,</div><div class="line">    lang: &apos;lang&apos;,</div><div class="line">    screenshot: &apos;screenshot&apos;,</div><div class="line">    hotkey: &apos;hotkey&apos;,</div><div class="line">    preload: &apos;preload&apos;,</div><div class="line">    logo: &apos;logo&apos;,</div><div class="line">    volume: &apos;volume&apos;,</div><div class="line">    mutex: &apos;mutex&apos;,</div><div class="line">    video: &#123;</div><div class="line">        url: &apos;url&apos;,</div><div class="line">        pic: &apos;pic&apos;,</div><div class="line">        thumbnails: &apos;thumbnails&apos;,</div><div class="line">        type: &apos;vidtype&apos;,</div><div class="line">    &#125;,</div><div class="line">    subtitle: &#123;</div><div class="line">        url: &apos;suburl&apos;,</div><div class="line">        type: &apos;subtype&apos;,</div><div class="line">        fontSize: &apos;subsize&apos;,</div><div class="line">        bottom: &apos;subbottom&apos;,</div><div class="line">        color: &apos;subcolor&apos;,</div><div class="line">    &#125;,</div><div class="line">    danmaku: &#123;</div><div class="line">        id: &apos;id&apos;,</div><div class="line">        api: &apos;api&apos;,</div><div class="line">        token: &apos;token&apos;,</div><div class="line">        maximum: &apos;maximum&apos;,</div><div class="line">        addition: [&apos;addition&apos;],</div><div class="line">        user: &apos;dmuser&apos;,</div><div class="line">        unlimited: &apos;dmunlimited&apos;,</div><div class="line">    &#125;,</div><div class="line">    icons: &apos;icons&apos;,</div><div class="line">    contextmenu: &apos;menu&apos;,</div><div class="line">&#125;</div></pre></td></tr></table></figure><h2 id="3-hexo-filter-github-emojis"><a href="#3-hexo-filter-github-emojis" class="headerlink" title="3. hexo-filter-github-emojis"></a>3. hexo-filter-github-emojis</h2><p>It’s Github emojis for hexo! 🎉</p><p>项目地址：Find me on <a href="http://github.com/crimx/hexo-filter-github-emojis" target="_blank" rel="noopener">Github</a></p><blockquote><p> A Hexo plugin that adds emoji support, using <a href="http://api.github.com/emojis" target="_blank" rel="noopener">Github Emojis API</a>.<br> Check out the <a href="http://www.webpagefx.com/tools/emoji-cheat-sheet/" target="_blank" rel="noopener">Emoji Cheat Sheet</a> for all the emojis it supports.</p></blockquote><h3 id="安装-2"><a href="#安装-2" class="headerlink" title="安装"></a>安装</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install hexo-filter-github-emojis --save</div></pre></td></tr></table></figure><h3 id="使用-2"><a href="#使用-2" class="headerlink" title="使用"></a>使用</h3><p>You can configure this plugin in <code>_config.yml</code>. Default options:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">githubEmojis:</div><div class="line">  enable: true</div><div class="line">  className: github-emoji</div><div class="line">  unicode: false</div><div class="line">  styles:</div><div class="line">  localEmojis:</div></pre></td></tr></table></figure><p>The filter will try to download the latest version of <a href="http://api.github.com/emojis" target="_blank" rel="noopener">Github Emojis</a> list. If the network is unavailable or too slow it will use the backup version.</p><ul><li><p><strong>className</strong> - Image class name. For ✨ <code>&lt;span class=&quot;github-emoji&quot;  title=&quot;sparkles&quot; data-src=&quot;https://assets-cdn.github.com/images/icons/emoji/unicode/2728.png?v8&quot;&gt;&amp;#x2728;&lt;/span&gt;</code> the filter will generate something like this:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;img class=&quot;github-emoji&quot; title=&quot;<span class="github-emoji" title="sparkles" data-src="https://assets-cdn.github.com/images/icons/emoji/unicode/2728.png?v8">&#x2728;</span>&quot; alt=&quot;<span class="github-emoji" title="sparkles" data-src="https://assets-cdn.github.com/images/icons/emoji/unicode/2728.png?v8">&#x2728;</span>&quot; src=&quot;http://assets-cdn.github.com/images/icons/emoji/unicode/2728.png&quot; height=&quot;20&quot; width=&quot;20&quot;&gt;</div></pre></td></tr></table></figure></li><li><p><strong>unicode</strong> - If you set this option to true, the filter will generate something like this:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;span class=&quot;github-emoji&quot; title=&quot;<span class="github-emoji" title="sparkles" data-src="https://assets-cdn.github.com/images/icons/emoji/unicode/2728.png?v8">&#x2728;</span>&quot; data-src=&quot;http://assets-cdn.github.com/images/icons/emoji/unicode/2728.png&quot;&gt;&amp;#x2728;&lt;/span&gt;</div></pre></td></tr></table></figure><p>Then you can fallback to image with JavaScript. For example, with jQuery:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">$(&apos;span.github-emoji&apos;).each(function (i, emoji) &#123;</div><div class="line">  var $emoji = $(emoji)</div><div class="line">  var codepoint = $emoji.html()</div><div class="line">  $(&apos;&lt;img height=&quot;20&quot; width=&quot;20&quot;&gt;&apos;)</div><div class="line">    .on(&apos;error&apos;, function () &#123;</div><div class="line">      // image loading failed</div><div class="line">      $emoji.html(codepoint)</div><div class="line">    &#125;)</div><div class="line">    .prop(&apos;alt&apos;, $emoji.attr(&apos;title&apos;))</div><div class="line">    .prop(&apos;src&apos;, $emoji.data(&apos;src&apos;))</div><div class="line">    .appendTo($emoji.empty())</div><div class="line">&#125;)</div></pre></td></tr></table></figure></li><li><p><strong>styles</strong> - inline styles for the images. For example:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">githubEmojis:</div><div class="line">  styles:</div><div class="line">    display: inline</div><div class="line">    vertical-align: bottom</div></pre></td></tr></table></figure><p>outputs:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;img class=&quot;github-emoji&quot; style=&quot;display:inline;vertical-align:bottom&quot; ...&gt;</div></pre></td></tr></table></figure></li><li><p><strong>localEmojis</strong> - You can specify your own list. An object or JSON string is valid. The filter will first check the <code>localEmojis</code> then fallback to the <a href="http://api.github.com/emojis" target="_blank" rel="noopener">Github Emojis</a> list.</p><p>For example:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">githubEmojis:</div><div class="line">  localEmojis:</div><div class="line">    arrow_left: http://path/to/arrow_left.png</div><div class="line">    arrow_right: http://path/to/arrow_right.png</div></pre></td></tr></table></figure><p>If you need to add code points that are not in the Github list, you can do this:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">githubEmojis:</div><div class="line">  localEmojis:</div><div class="line">    man_juggling:</div><div class="line">      src: http://path/to/man_juggling.png</div><div class="line">      codepoints: [&quot;1f939&quot;, &quot;2642&quot;]</div><div class="line">    arrow_right: http://path/to/arrow_right.png</div></pre></td></tr></table></figure></li></ul><h1 id="Hexo-Themes"><a href="#Hexo-Themes" class="headerlink" title="Hexo Themes"></a>Hexo Themes</h1><p>Click me for <a href="http://hexo.io/themes/" target="_blank" rel="noopener">Themes</a></p><h1 id="Dependencies"><a href="#Dependencies" class="headerlink" title="Dependencies"></a>Dependencies</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">hexo: 3.4.2</div><div class="line">hexo-cli: 1.0.3</div><div class="line">os: Darwin 17.0.0 darwin x64</div><div class="line">http_parser: 2.7.0</div><div class="line">node: 8.9.1</div><div class="line">v8: 6.1.534.47</div><div class="line">uv: 1.15.0</div><div class="line">zlib: 1.2.11</div><div class="line">ares: 1.10.1-DEV</div><div class="line">modules: 57</div><div class="line">nghttp2: 1.25.0</div><div class="line">openssl: 1.0.2m</div><div class="line">icu: 59.1</div><div class="line">unicode: 9.0</div><div class="line">cldr: 31.0.1</div><div class="line">tz: 2017b</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        
        
          
        
      
    
    </summary>
    
    
      <category term="tutorial" scheme="https://spencerwoo.com/tags/tutorial/"/>
    
      <category term="code" scheme="https://spencerwoo.com/tags/code/"/>
    
      <category term="sexy moves" scheme="https://spencerwoo.com/tags/sexy-moves/"/>
    
  </entry>
  
  <entry>
    <title>HOW TO | 如何用手机拍摄 Vlog</title>
    <link href="https://spencerwoo.com/2017/12/06/HOW-TO-%E5%A6%82%E4%BD%95%E7%94%A8%E6%89%8B%E6%9C%BA%E6%8B%8D%E6%91%84-Vlog/"/>
    <id>https://spencerwoo.com/2017/12/06/HOW-TO-如何用手机拍摄-Vlog/</id>
    <published>2017-12-06T08:42:54.000Z</published>
    <updated>2018-04-01T11:17:47.810Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><blockquote><p>本文首发于<a href="http://www.zhihu.com/question/65198828/answer/269329730" target="_blank" rel="noopener">知乎 - 如何用手机拍 Vlog？</a></p></blockquote><p><br><br>感谢邀请。<br><br><br><img src="http://owkccdyrm.bkt.clouddn.com/vlog-with-iphone-1.jpg" alt="img"></p><p>▲iPhone 7 plus 拍摄 Onetake 后期视频截图</p><p>接触 Vlog 是从 <a href="http://www.zhihu.com/people/440c68fd02f449f010d69c1a6eebdbd4" target="_blank" rel="noopener">@Tim Pan</a></p><blockquote><p>Write<br>Shoot<br>Edit<br>Repeat</p></blockquote><p><strong>「B 站画质扛把子」。</strong></p><p>他拍的视频可以说是有着最为震撼的画质、转场以及配乐。</p><p>Also，影视飓风还科普了很多拍摄相关的知识，就比如，我看了 Tim 的一期「<a href="http://link.zhihu.com/?target=http%3A//www.bilibili.com/video/av7855737/" target="_blank" rel="noopener">小技巧：LUTS**</a>」才知道如何利用 Adobe Premiere 和 Lumetri 对视频进行调色。</p><p><br></p><hr><p><strong>如何用手机拍摄 Vlog。</strong></p><p>Tim 毕竟有个专业拍摄团队，在英国留学，有 GH5，RED 和各种各样的电影机、滑轨、稳定器和摇臂 blah blah blah…</p><p>专业的设备（qian）拍摄成就了出色的画质和音质。</p><p>但是 Tim 一期「<a href="http://link.zhihu.com/?target=http%3A//www.bilibili.com/video/av15505588/" target="_blank" rel="noopener">放入口袋的4k摄影机——IPhone 8 Plus评测</a>」让我觉得，咦，iPhone 视频能力这么强？果真哦。</p><p><br></p><p>我看了看手里的 iPhone 7 Plus：</p><ul><li>录制视频支持 4K at 30 fps 或者 1080p HD at 60 fps</li><li>录制慢动作 Slo-mo 支持 1080p HD at 120 fps 或者 720p HD at 240 fps</li><li>还有五轴光学防抖</li></ul><p>惊艳到一个之前只拿 iPhone 拍照片的人了。</p><p><br></p><p>目前呢，我的 Vlog 制作方法是手持 iPhone 录制视频，用 Onetake 这个 App 来后期制作。</p><p><br></p><p><strong>流程：</strong></p><ul><li>拿着充满电的 iPhone 背着书包电脑出门</li><li>看到好看的、有趣的、温暖的或是只是颜色艳丽的东西就掏出手机开始录制</li><li>一个视频录大概 10 秒左右</li><li>晚上开始用 Onetake 剪辑</li></ul><p><img src="http://owkccdyrm.bkt.clouddn.com/vlog-with-iphone-2.jpg" alt="img"><br>▲ iPhone 7 plus 拍摄 Onetake 后期视频截图</p><p><br></p><p><strong>Onetake - Vlog &amp; Video Editing by Blink Academy Ltd.</strong></p><p><img src="http://owkccdyrm.bkt.clouddn.com/vlog-with-iphone-3.jpg" alt="img"></p><p>为什么我用的是 Onetake 而不是上面许多人都提到的 VUE 甚至是 iMovie 之流呢？</p><p>一个非常非常主要的原因是：Onetake 有很多我很是喜欢的字体，以及还有许多很适合 Vlog 的背景音乐。</p><p><img src="http://owkccdyrm.bkt.clouddn.com/vlog-with-iphone-4.jpg" alt="img"></p><p>▲ Onetake 自带背景音乐 Optimized for Vlog</p><p><br></p><p>而且更令人感动的是：Onetake 有内置 Zoom in 和 Zoom out！</p><p>也就是说，当你把手机静止放在脚架上或者只是单纯的用手举着不动拍摄一个镜头的话，这两个会显得镜头不那么单调，很多延时摄影里面也会利用 Zoom in 和 Zoom out 这样的镜头。</p><p><img src="http://owkccdyrm.bkt.clouddn.com/vlog-with-iphone-5.jpg" alt="img"><br>▲ Onetake 内置字体 Fonts 以及 Zoom 效果</p><p><br></p><p>其实利用手机制作 Vlog 的这个流程我也在摸索。</p><p>不过嘛，Vlog 就是 Video Log，拿视频来记录生活，就是点点滴滴的片段堆砌而成的。酱紫。</p><p><br></p><p><strong>最后。</strong></p><p>放一个成片，十二月的第一天拍的。已经上传 —&gt; <a href="http://link.zhihu.com/?target=http%3A//www.bilibili.com/video/av16843285/" target="_blank" rel="noopener">bilibili</a> 欢迎去看~</p><p>晚安。</p><p><a href="http://link.zhihu.com/?target=http%3A//spencerwoo.com/" target="_blank" rel="noopener">©Spencer Woo</a></p>]]></content>
    
    <summary type="html">
    
      
      
        
        
          
        
      
    
    </summary>
    
    
      <category term="tutorial" scheme="https://spencerwoo.com/tags/tutorial/"/>
    
      <category term="sexy moves" scheme="https://spencerwoo.com/tags/sexy-moves/"/>
    
  </entry>
  
  <entry>
    <title>我在北理的一百天 | BIG PRODUCTIONS</title>
    <link href="https://spencerwoo.com/2017/11/27/%E6%88%91%E5%9C%A8%E5%8C%97%E7%90%86%E7%9A%84%E4%B8%80%E7%99%BE%E5%A4%A9-BIG-PRODUCTIONS/"/>
    <id>https://spencerwoo.com/2017/11/27/我在北理的一百天-BIG-PRODUCTIONS/</id>
    <published>2017-11-27T07:34:33.000Z</published>
    <updated>2018-01-26T04:26:29.640Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><blockquote><p>2017 年 8 月 20 日。</p><p>我和你在北理工相遇。</p><p>全新的大学篇章随之展开。</p><p>兴奋中，我开始了大学生活的第一天。</p></blockquote><p><img src="http://owkccdyrm.bkt.clouddn.com/100%20days.jpg" alt="img"></p><p><br></p><blockquote><p>军事训练开始了。</p><p>军事理论课、早操、汇演…</p><p>一切都是那么的陌生。</p><p>慌慌张张中。</p><p>我度过了北理工生活的第22天。</p></blockquote><p><img src="http://owkccdyrm.bkt.clouddn.com/100days_1.jpg" alt="img"></p><p><br></p><blockquote><p>期待着。</p><p>期待着。</p><p>北理工生活的第 56 天。</p><p>百团大战社团招新也开始了。</p><p>我似乎也找到了志同道合的朋友。</p></blockquote><p><img src="http://owkccdyrm.bkt.clouddn.com/100days_2.jpg" alt="img"></p><p><br></p><blockquote><p>2017 年 11 月 27 日。</p><p>这是我来到北理工的 100 天。</p><p>我习惯了北理工的生活。</p><p>更加爱上了这所学校。</p></blockquote><p><img src="http://owkccdyrm.bkt.clouddn.com/100days_3.jpg" alt="img"></p><p><br></p><blockquote><p>从夏天到冬天。</p><p>从博雅到丹枫。</p><p>还有。</p><p>经常会更新菜式的食堂。</p><p>赶在 11 点断水前去洗澡的小匆忙。</p><p>上网不涉密，涉密不上网的校园网。</p><p>和父母通电话是走过一遍又一遍的宿舍走廊。</p></blockquote><p><img src="http://owkccdyrm.bkt.clouddn.com/100days_4.jpg" alt="img"></p><p><br></p><p>因为种种原因。</p><p>一个 2 个月前就开始准备的项目。</p><p>今早推出后。</p><p>因为不符合「一些人」的价值观。</p><p>遗憾下线。</p><p><br></p><p>现在这部作品存在于「<a href="http://www.xinpianchang.com/square" target="_blank" rel="noopener">新片场</a>」中。</p><p>是我们的团队作品，与北理工记者团无关。</p><p>点击链接查看原片 —&gt; <a href="http://www.xinpianchang.com/a102547?from=space" target="_blank" rel="noopener">我在北理的 100 天 - 新片场</a></p><p><br></p><p>希望下一个一百天，我们都在。</p><p>鞠躬。</p><p>共勉。</p><p><br></p><hr><p>策划｜巴惠质 武上博 黎子溪<br>剧本｜黄嘉昊 章正阳<br>拍摄｜税思越 吴曦腾 黄嘉昊<br>出镜｜张殷耀 王凌枫 魏韵璋 游若昕 章诗宜 韩松阳 朴婧怡 李东洪<br>后期｜魏韵璋 孟宪夫<br>编辑｜石明玉<br>指导｜孟璐 税思越 杨珏成 曹元博 王朝阳 汤 正 梁煜昊 张殷耀 蔡建华<br>责编｜巴惠质<br>鸣谢｜17自动化辅导员贺小琴 乡琴 独立音协</p><hr><p><br></p><p><br></p><p>©Spencer Woo</p>]]></content>
    
    <summary type="html">
    
      
      
        
        
          
        
      
    
    </summary>
    
    
      <category term="sexy moves" scheme="https://spencerwoo.com/tags/sexy-moves/"/>
    
  </entry>
  
  <entry>
    <title>Java | 在 Java 中调用 Shell 脚本</title>
    <link href="https://spencerwoo.com/2017/11/25/Java-%E5%9C%A8-Java-%E4%B8%AD%E8%B0%83%E7%94%A8-Shell-%E8%84%9A%E6%9C%AC/"/>
    <id>https://spencerwoo.com/2017/11/25/Java-在-Java-中调用-Shell-脚本/</id>
    <published>2017-11-25T15:51:29.000Z</published>
    <updated>2018-04-09T00:56:04.510Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="金旭亮真是个可怕的人"><a href="#金旭亮真是个可怕的人" class="headerlink" title="金旭亮真是个可怕的人"></a><a href="http://www.jinxuliang.com/MainWebSite" target="_blank" rel="noopener">金旭亮</a>真是个可怕的人</h1><p>Java 大作业。</p><p>Java 本是一个美丽端庄的语言。</p><p>本以为 Java 有着 C++ 所缺失的素雅。</p><p>可因为 Java 和数值分析考试被安排在了一周。</p><p><strong>令人头疼。</strong></p><p><br></p><h1 id="Demons"><a href="#Demons" class="headerlink" title="Demons"></a>Demons</h1><p>我和阳阳是 Partners.</p><p>我们要做一个时间管理桌面应用。</p><p>大概是要在运行的时候把不合适的网站屏蔽掉。</p><p>酱紫。</p><p><br></p><p>就叫他「Demons」吧。</p><p>中文「迪蒙」。</p><p><br></p><h1 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h1><p>感谢开发者<a href="http://github.com/bradjasper" target="_blank" rel="noopener">Brad Jasper</a>。</p><p>利用系统级别的 <code>Shell</code> 命令能通过修改 <code>.host</code> 文件来防止特定网站的浏览。</p><p>如何将 <code>Shell</code> 直接嵌套在 <code>Java</code> 里面呢？</p><p>我是这样实现的：</p><h3 id="Shell-java"><a href="#Shell-java" class="headerlink" title="Shell.java"></a>Shell.java</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> focus;</div><div class="line"></div><div class="line"><span class="keyword">import</span> java.io.BufferedReader;</div><div class="line"><span class="keyword">import</span> java.io.IOException;</div><div class="line"><span class="keyword">import</span> java.io.InputStreamReader;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"><span class="comment"> * Created by spencerwoo on 2017/11/25.</span></div><div class="line"><span class="comment"> * Project Name: IdeaProjects</span></div><div class="line"><span class="comment"> */</span></div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Shell</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">runScript</span><span class="params">(String scriptPath)</span> </span>&#123;</div><div class="line"></div><div class="line">        <span class="keyword">try</span> &#123;</div><div class="line">            Process process = Runtime.getRuntime().exec(<span class="string">"bash "</span> + scriptPath);</div><div class="line">            BufferedReader read = <span class="keyword">new</span> BufferedReader(<span class="keyword">new</span> InputStreamReader(process.getInputStream()));</div><div class="line">            <span class="keyword">try</span> &#123;</div><div class="line">                process.waitFor();</div><div class="line">            &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</div><div class="line">                System.out.println(e.getMessage());</div><div class="line">            &#125;</div><div class="line"></div><div class="line">            <span class="keyword">while</span> (read.ready()) &#123;</div><div class="line">                System.out.println(read.readLine());</div><div class="line">            &#125;</div><div class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</div><div class="line">            System.out.println(e.getMessage());</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>然后再在 main 函数中这样引用就可以直接运行 <code>Shell script</code>了。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Shell.runScript(<span class="string">"focusShell/testShell.sh"</span>);</div></pre></td></tr></table></figure><p>其中参数是 <code>Shell</code> 文件的相对路径。(Relative path)</p><p><br></p><h1 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h1><p>emmm。</p><p>这是我们 UI 的初稿。</p><h3 id="主页面"><a href="#主页面" class="headerlink" title="主页面"></a>主页面</h3><p><img src="http://owkccdyrm.bkt.clouddn.com/2.jpg" alt="img"></p><h3 id="菜单"><a href="#菜单" class="headerlink" title="菜单"></a>菜单</h3><p><img src="http://owkccdyrm.bkt.clouddn.com/UI1.jpg" alt="img"></p><p>不知道阳阳能给我实现到什么程度。</p><p>西西。</p><p><br><br><strong>鞠躬。</strong><br><br><br><br></p><p>©2017 Spencer Woo</p>]]></content>
    
    <summary type="html">
    
      
      
        
        
          
        
      
    
    </summary>
    
    
      <category term="code" scheme="https://spencerwoo.com/tags/code/"/>
    
      <category term="sexy moves" scheme="https://spencerwoo.com/tags/sexy-moves/"/>
    
      <category term="Java" scheme="https://spencerwoo.com/tags/Java/"/>
    
      <category term="Linux" scheme="https://spencerwoo.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>HANDS ON | B&amp;O Beoplay H5 上手</title>
    <link href="https://spencerwoo.com/2017/11/08/HANDS-ON-B-O-Beoplay-H5-%E4%B8%8A%E6%89%8B/"/>
    <id>https://spencerwoo.com/2017/11/08/HANDS-ON-B-O-Beoplay-H5-上手/</id>
    <published>2017-11-08T10:43:36.000Z</published>
    <updated>2018-01-26T04:25:29.890Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p><strong>这耳机太毒了。</strong></p><blockquote><p>Beoplay H5</p><p>无线入耳式耳机</p><p>让您的每日旅程更美妙</p></blockquote><p><img src="http://owkccdyrm.bkt.clouddn.com/IMG_8666.jpg" alt="img"></p><p>▲ <em>外包装 来自 丹麦的 Bang &amp; Olufsen🇩🇰</em></p><p><br></p><h1 id="先夸一顿。"><a href="#先夸一顿。" class="headerlink" title="先夸一顿。"></a>先夸一顿。</h1><p>真好看。</p><p>真好看。</p><p>真好看。</p><p><strong>粉色尤其好看。</strong></p><p><img src="http://owkccdyrm.bkt.clouddn.com/IMG_8668.jpg" alt="img"></p><p>▲ <em>打开盒子 看到粉色的两只耳朵</em></p><p><br></p><h2 id="丹麦的北欧风果真是惹不起的。"><a href="#丹麦的北欧风果真是惹不起的。" class="headerlink" title="丹麦的北欧风果真是惹不起的。"></a>丹麦的北欧风果真是惹不起的。</h2><blockquote><p>B&amp;O（Bang &amp; Olufsen）是由 Peter Bang 和 Svend Olufsen 于 1925 年创立于丹麦斯特鲁尔的视听品牌，两位锐意创新的年轻工程师矢志追求高品质放音效果，致力于设计完美的音响设备，如今这一世界品牌已经成为优异性能与杰出设计的经典标志。</p></blockquote><p><br></p><p>其实我真的是一个颜控吧。</p><p>出街要带着的东西，就应该闪闪 bling bling。</p><p>这个闪着嫩粉色光晕的金属打磨过的 B&amp;O logo 可以说是很吸睛了。</p><p><br></p><p>带有些许 Apple 阻尼感的包装盒，两层结构。</p><p>上层是耳机本体，和充电座。</p><p>下层是说明书，以及各种配件，包括一个收纳袋、四对不同尺寸的硅胶套、三对不同尺寸的 COMPLY 记忆海绵套、三个带有 B&amp;O logo 的塑料线夹、三对不同尺寸的「鲨鱼鳍」防掉耳挂。</p><p><img src="http://owkccdyrm.bkt.clouddn.com/IMG_8670.jpg" alt="img"></p><p>▲ <em>Includes COMPLY Premium Earphone Tips 的字样</em></p><p><br></p><h2 id="单独说说充电。"><a href="#单独说说充电。" class="headerlink" title="单独说说充电。"></a>单独说说充电。</h2><p><img src="http://owkccdyrm.bkt.clouddn.com/IMG_8675.jpg" alt="img"></p><p>▲ <em>磁吸式的充电底座</em></p><p>充电底座。</p><p>异常惊艳。</p><p>长按线控开机，两个耳朵磁吸在一起就关机。</p><p>惊艳得，让赞大佬说：</p><blockquote><p>果真是上千的东西啊。</p></blockquote><p>（<em>赞大佬是我的室友，德高望重，经验丰富。</em>）</p><p><br></p><h1 id="夸完了。"><a href="#夸完了。" class="headerlink" title="夸完了。"></a>夸完了。</h1><p>上结论。</p><p><strong>这耳机是破烂</strong>。</p><p><img src="http://owkccdyrm.bkt.clouddn.com/IMG_8676.jpg" alt="img"></p><p>▲ <em>四对硅胶套、三对 COMPLY 记忆海绵套、三个塑料线夹、三对「鲨鱼鳍」防掉耳挂 —— 丰富的配件</em></p><p>我的原意，本来是要戴着他出街、玩耍、跑步、健身（误）。</p><p>可我回个头，你左耳朵就掉下来了。</p><p>我再抬个头，右耳朵就掉下来了。</p><p><strong>真过分。</strong></p><p>丰富如上图的配件都解决不了佩戴的舒适感。</p><p>并且，它真沉。</p><p>还涨耳朵。</p><p>挂脖子上当个项链吧。</p><p><br></p><h2 id="叹气。"><a href="#叹气。" class="headerlink" title="叹气。"></a>叹气。</h2><p>讲真，我从来没有戴入耳式耳机戴出这般的煎熬。</p><p>有过而无不及的煎熬可能就剩 Beats Solo 2 Wireless 在连续戴一个小时左右的夹耳感了。</p><p>糟糕的体验对不起这 ¥1998 的官网价。</p><p>啊，它还不防水。</p><p>🙄</p><p><br></p><h1 id="最后说说听感"><a href="#最后说说听感" class="headerlink" title="最后说说听感"></a>最后说说听感</h1><p><img src="http://owkccdyrm.bkt.clouddn.com/Beoplay%20H5%20Parameters.jpg" alt="img"></p><p>▲ <em>来自 B&amp;O 官网的参数</em></p><p>阻抗不大，手机够推。</p><p>蓝牙 4.2 支持 aptX 和 AAC 编解码器。</p><p>听感还是不错的。</p><p>唐大佬说：</p><blockquote><p>B&amp;O 家的调音并没有向反人类的方向调，很是欣慰了。</p></blockquote><p>（<em><a href="http://life.felinae98.cn" target="_blank" rel="noopener">唐大佬</a>是我的对面宿舍室友，德高望重，经验丰富。是拥有森海塞尔 2004 年旗舰 —— 头戴式耳机 HD650，和入耳式耳机 IE800 的男人。</em>）</p><p>不过我还是喜欢索尼。</p><p>嘻嘻。</p><p><br></p><h3 id="就这样。"><a href="#就这样。" class="headerlink" title="就这样。"></a>就这样。</h3><p><img src="http://owkccdyrm.bkt.clouddn.com/Full_3.jpg" alt="img"></p><p>真好看。</p><p>已退货。</p><p>结束。告辞。</p><p><br></p><p><br></p><p>© Spencer Woo</p>]]></content>
    
    <summary type="html">
    
      
      
        
        
          
        
      
    
    </summary>
    
    
      <category term="sexy moves" scheme="https://spencerwoo.com/tags/sexy-moves/"/>
    
      <category term="hands on" scheme="https://spencerwoo.com/tags/hands-on/"/>
    
  </entry>
  
  <entry>
    <title>HOW TO | 如何整治百度网盘</title>
    <link href="https://spencerwoo.com/2017/11/06/HOW-TO-%E5%A6%82%E4%BD%95%E6%95%B4%E6%B2%BB%E7%99%BE%E5%BA%A6%E7%BD%91%E7%9B%98/"/>
    <id>https://spencerwoo.com/2017/11/06/HOW-TO-如何整治百度网盘/</id>
    <published>2017-11-06T11:53:40.000Z</published>
    <updated>2018-01-26T04:26:01.010Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>目标：榨干百度网盘的下载速度</p><p>工具：<a href="http://aria2.github.io" target="_blank" rel="noopener">Aria2</a></p><p>开发环境：macOS High Sierra 10.13</p><p>依托：<a href="http://brew.sh" target="_blank" rel="noopener">Homebrew</a></p><p><br></p><h1 id="为什么要整治百度网盘"><a href="#为什么要整治百度网盘" class="headerlink" title="为什么要整治百度网盘"></a>为什么要整治百度网盘</h1><p><strong>慢。</strong></p><p>慢的一匹。</p><p>非「超级会员」在百度网盘限速下，下载速度能达到 100 KB/S。（同样网络环境 Steam 客户端下载速度能达到 1.5~2 MB/S）</p><p>呵呵😑</p><p><br></p><h1 id="如何整治百度网盘"><a href="#如何整治百度网盘" class="headerlink" title="如何整治百度网盘"></a>如何整治百度网盘</h1><hr><h2 id="安装依托：Homebrew"><a href="#安装依托：Homebrew" class="headerlink" title="安装依托：Homebrew"></a>安装依托：Homebrew</h2><blockquote><p>Homebrew — The missing package manager for macOS</p></blockquote><p>利用 Homebrew 我们可以干净利落的下载、配置、安装我们所需要的下载利器：Aria2。</p><p>首先，打开终端 (Terminal)，运行命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">/usr/bin/ruby -e "$(curl -fsSL http://raw.githubusercontent.com/Homebrew/install/master/install)"</div></pre></td></tr></table></figure><p>代码会在执行任务前告诉你他要干什么，看清就可以一路进行下去。（该输密码输密码，该回车回车。）</p><p>这样就安装好了 Homebrew，此时请不要关掉终端。</p><p><br></p><h2 id="利用-Homebrew-安装-Aria2"><a href="#利用-Homebrew-安装-Aria2" class="headerlink" title="利用  Homebrew 安装 Aria2"></a>利用  Homebrew 安装 Aria2</h2><ol><li><p>在刚刚的终端窗口继续输入代码、运行命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">brew install aria2c</div></pre></td></tr></table></figure></li><li><p>继续输入代码：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">aria2c -v</div></pre></td></tr></table></figure><p>并运行，以测试是否安装成功，如果出现类似下图：</p><p><img src="http://owkccdyrm.bkt.clouddn.com/aria2c-v.jpg" alt="img"></p><p>则证明安装 Aria2 成功。</p></li><li><p>安装完毕，搞定。</p></li></ol><p><br></p><h2 id="安装-Chrome-Safari-Firefox-插件：BaiduExporter"><a href="#安装-Chrome-Safari-Firefox-插件：BaiduExporter" class="headerlink" title="安装 Chrome/Safari/Firefox 插件：BaiduExporter"></a>安装 Chrome/Safari/Firefox 插件：BaiduExporter</h2><blockquote><p>BaiduExporter — 可以方便的把百度网盘的下载地址导出到 aria2/aria2-rpc，支持 YAAW。</p></blockquote><h4 id="以-Chrome-浏览器为例，两个安装方式："><a href="#以-Chrome-浏览器为例，两个安装方式：" class="headerlink" title="以 Chrome 浏览器为例，两个安装方式："></a>以 Chrome 浏览器为例，两个安装方式：</h4><ol><li><p>利用 <code>git</code>：</p><ul><li><p>打开终端，运行命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git clone http://github.com/acgotaku/BaiduExporter.git</div></pre></td></tr></table></figure></li></ul><p>效果如下图：</p><p><img src="http://owkccdyrm.bkt.clouddn.com/git_baidu_exporter.jpg" alt="img"></p><ul><li>在终端继续输入 <code>open BaiduExporter</code>，看到文件夹打开。</li></ul></li><li><p>直接访问这里：<a href="http://github.com/acgotaku/BaiduExporter" target="_blank" rel="noopener">BaiduExporter on GitHub</a>，并点击绿色按钮 <code>Clone or download</code>，在弹出列表中点击 <code>Download ZIP</code>，这样将会下载源代码库文件压缩包 (.zip 文件) 至桌面，下载完成后解压打开。</p></li></ol><h4 id="在文件夹中找到-Chrome-crx，直接拖入-Chrome-浏览器中，点击安装扩展程序。"><a href="#在文件夹中找到-Chrome-crx，直接拖入-Chrome-浏览器中，点击安装扩展程序。" class="headerlink" title="在文件夹中找到 Chrome.crx，直接拖入 Chrome 浏览器中，点击安装扩展程序。"></a>在文件夹中找到 Chrome.crx，直接拖入 Chrome 浏览器中，点击安装扩展程序。</h4><p><img src="http://owkccdyrm.bkt.clouddn.com/git_exporter_finder.jpg" alt="img"></p><p><br></p><h2 id="配置-Aria2-的-conf-文件"><a href="#配置-Aria2-的-conf-文件" class="headerlink" title="配置 Aria2 的 conf 文件"></a>配置 Aria2 的 conf 文件</h2><ol><li><p>打开终端，执行如下代码：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mkdir ~/.aria2 &amp;&amp; cd ~/.aria2 &amp;&amp; touch aria2.conf &amp;&amp; touch aria2.session &amp;&amp; open aria2.conf</div></pre></td></tr></table></figure></li><li><p>参考<a href="http://raw.githubusercontent.com/acgotaku/BaiduExporter/master/aria2c/aria2.conf" target="_blank" rel="noopener">配置文件</a>，将内容全部复制即可。</p></li></ol><p><br></p><h2 id="成功啦-使用方法"><a href="#成功啦-使用方法" class="headerlink" title="成功啦 | 使用方法"></a>成功啦 | 使用方法</h2><p>两种方法：首先，再次打开<strong>终端</strong></p><ol><li><p>输入命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">aria2c</div></pre></td></tr></table></figure><p>在前端运行 Aria2，关闭终端命令窗口即关闭 Aria2。</p></li><li><p>或者，输入命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">aria2c -D</div></pre></td></tr></table></figure><p>在后台运行，关闭可以通过 <code>kill</code> 命令来关闭。</p></li></ol><p>现在用 Chrome 打开你的百度网盘，不出意外，就会出现「导出下载」。</p><p>直接勾选要下载的文件，点击下面的 ARIA2 RPC。</p><p><img src="http://owkccdyrm.bkt.clouddn.com/baidu_works.jpg" alt="img"></p><p>成功。</p><p>搞定。</p><p><br></p><hr><h3 id="鸣谢-Reference"><a href="#鸣谢-Reference" class="headerlink" title="鸣谢 | Reference"></a>鸣谢 | Reference</h3><ul><li><a href="http://blog.sunnyyoung.net/tong-guo-aria2-zha-gan-bai-du-wang-pan/" target="_blank" rel="noopener">通过 Aria2 榨干百度网盘</a></li><li><a href="http://github.com/acgotaku/BaiduExporter" target="_blank" rel="noopener">BaiduExporter on GitHub</a></li><li><a href="http://hencolle.com/2016/10/16/baidu_exporter/#last" target="_blank" rel="noopener">Guide on Packaging and Import Baidu Exporter to Chrome</a></li></ul><h3 id="另外-一种不需要命令行的带有-GUI-界面的-Aria2"><a href="#另外-一种不需要命令行的带有-GUI-界面的-Aria2" class="headerlink" title="另外 | 一种不需要命令行的带有 GUI 界面的 Aria2"></a>另外 | 一种不需要命令行的带有 GUI 界面的 Aria2</h3><ul><li><a href="http://github.com/yangshun1029/aria2gui" target="_blank" rel="noopener">Aria2GUI for MAC OS X</a></li><li><a href="http://www.jianshu.com/p/b58fff3fb946" target="_blank" rel="noopener">简单说一下Aria2GUI的配置方法</a></li></ul><p><br></p><p><strong>鞠躬。</strong></p><p><strong>告辞。</strong></p><p><strong>百度，望安好。</strong></p><p>🙂</p><p><br></p><p><br></p><p>© Spencer Woo</p>]]></content>
    
    <summary type="html">
    
      
      
        
        
          
        
      
    
    </summary>
    
      <category term="教程向" scheme="https://spencerwoo.com/categories/%E6%95%99%E7%A8%8B%E5%90%91/"/>
    
    
      <category term="code" scheme="https://spencerwoo.com/tags/code/"/>
    
      <category term="sexy moves" scheme="https://spencerwoo.com/tags/sexy-moves/"/>
    
  </entry>
  
  <entry>
    <title>天津 | LOG</title>
    <link href="https://spencerwoo.com/2017/10/30/%E5%A4%A9%E6%B4%A5-LOG/"/>
    <id>https://spencerwoo.com/2017/10/30/天津-LOG/</id>
    <published>2017-10-30T02:33:34.000Z</published>
    <updated>2018-01-26T04:26:20.060Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p><br></p><h1 id="Nervous-Breakdown"><a href="#Nervous-Breakdown" class="headerlink" title="Nervous Breakdown"></a>Nervous Breakdown</h1><p><img src="http://owkccdyrm.bkt.clouddn.com/7585940752_IMG_4913.jpg" alt="img"></p><p>▲<em>天津 · 小白楼旁边的小屋子</em></p><p><br></p><p>嗯。</p><p>我去了趟天津。</p><p>36个小时之前还没有人知道这件事情。</p><p>emmm. 其实阳阳知道。不过他不算人。</p><p><br></p><p>毕竟自己还是个 emotional 的人儿。</p><p>负能量总需要通过一些途径发泄一下的吧。</p><p><br></p><p>为了些什么。</p><blockquote><p>至少，我知道，那里会有一个念着我的人。</p><p>也许我果真是一个自私又懒惰的人。</p></blockquote><p><br></p><h1 id="壹"><a href="#壹" class="headerlink" title="壹"></a>壹</h1><p>天津真是个美丽、美丽、美丽的地方。</p><p>And I cannot stress this enough.</p><p>虽然走之前，我就已经作好了北京被天津碾压的心理准备，但没有想到被碾压的如此彻底。</p><p>这是一个来自北京的<code>乡巴佬</code>的自白。</p><p><br></p><p><img src="http://owkccdyrm.bkt.clouddn.com/7585940752_IMG_4918.jpg" alt="img"></p><p>▲<em>天津 · 小白楼附近的共享单车</em></p><p><br></p><h1 id="贰"><a href="#贰" class="headerlink" title="贰"></a>贰</h1><p>坐早上9点的高铁，开得飞快。</p><p>快到我睡了一小会儿，就发现已经进天津市区了。</p><p>298km/h 真不是吹的。</p><p><br></p><p><img src="http://owkccdyrm.bkt.clouddn.com/7518858448_IMG_5156.jpg" alt="img"></p><p>▲ <em>天津 · 五大道景点 · 白色的墙面</em></p><p><img src="http://owkccdyrm.bkt.clouddn.com/7518858448_IMG_5117.jpg" alt="img"></p><p>▲ <em>天津 · 五大道景点 · 水面</em></p><p><img src="http://owkccdyrm.bkt.clouddn.com/06394F98-7259-404F-AD04-7B4A2479DA47.JPG" alt="img"></p><p>▲ <em>天津 · 五大道</em></p><p><br></p><blockquote><p>小黎姑娘有很多东西都不明白，为什么明明喜欢着我，结果又喜欢了别人；为什么我们在一起那么久，比不过一场萍水的相逢；如果你不爱我，为什么又要娶我。</p><p>小黎姑娘哈哈大笑，真是荒唐。</p><p>小黎姑娘呜呜大哭，真是悲伤。</p></blockquote><p><br></p><h1 id="叁"><a href="#叁" class="headerlink" title="叁"></a>叁</h1><p>走的时候带了自己的小单反。</p><p>两个镜头，18-200mm 和 50mm 定焦。</p><p>不沉。还很开心。</p><p>天津是一个随便看看拍拍照照就可以直出大片的城市。</p><p>（啊，我还带了件衣服。那里真的、真的、刺骨的、寒冷。）</p><p><br></p><p><img src="http://owkccdyrm.bkt.clouddn.com/IMG_5158.jpg" alt="img"></p><p>▲ <em>天津 · 五大道风景区 · 纵深感</em></p><p><br></p><p>唉。</p><p>叹一下气。继续说。</p><p><br></p><h1 id="肆"><a href="#肆" class="headerlink" title="肆"></a>肆</h1><p><img src="http://owkccdyrm.bkt.clouddn.com/7585940752_IMG_4902.jpg" alt="img"></p><p>▲<em>天津 · 糖糖</em></p><p><br></p><blockquote><p>陆少阳想，喜欢一个人，真是复杂，有的人因为一个侧影就爱上对方，有的人花了一生的时间也未能攻破心防。</p><p>成为一群人的传奇，还是成为一个人的传奇。</p><p>如果这唯一的一个人也失去了，是不是你注定就是平庸。</p></blockquote><p><br></p><p>人究竟谈恋爱是为了什么。</p><p>真气真气。</p><p><br></p><h1 id="伍"><a href="#伍" class="headerlink" title="伍"></a>伍</h1><p>中午吃了非天津特色菜。</p><p>春熙食堂——来自成都的市井串串。</p><p><br></p><p><img src="http://owkccdyrm.bkt.clouddn.com/IMG_4963.jpg" alt="img"></p><p><br></p><p><img src="http://owkccdyrm.bkt.clouddn.com/IMG_4959.jpg" alt="img"></p><p><br></p><p><img src="http://owkccdyrm.bkt.clouddn.com/IMG_4960.jpg" alt="img"></p><p>▲ <em>天津 · 串串店里面的我</em></p><p><br></p><h1 id="陆"><a href="#陆" class="headerlink" title="陆"></a>陆</h1><p>啊，我去的那家串串店是我去天津之后唯一一次吃正常的餐厅。</p><p>之后就是：</p><ul><li><p><code>炸鸡</code></p></li><li><p><code>金拱门</code></p></li><li><p><code>开封菜</code></p></li></ul><p>哈哈哈。</p><p>一个24小时点了四次<code>金拱门</code>的男人。</p><p><br></p><blockquote><p>杨秋之以为自己见到了美，他听老师说，美是人类内心的根源，你见到了美，自然而然地，就明白人类为什么前行，为什么进步，为什么义无反顾。</p></blockquote><p><br></p><p><strong>她带我去了她的学校。</strong></p><p>好大好大。</p><p>好多鹅。</p><p>（鸭子，不是鹅。被纠正了。）</p><p><br></p><p><img src="http://owkccdyrm.bkt.clouddn.com/IMG_8332.jpg" alt="img"></p><p>▲ <em>天津财经大学 · 教学楼</em></p><p><br></p><p><img src="http://owkccdyrm.bkt.clouddn.com/IMG_4976.jpg" alt="img"></p><p>▲ <em>天津财经大学 · 湖</em></p><p><br></p><p><img src="http://owkccdyrm.bkt.clouddn.com/IMG_5004.jpg" alt="img"></p><p>▲ iPhone 7 Plus &amp;&amp; iPhone 6s</p><p><br></p><h1 id="柒"><a href="#柒" class="headerlink" title="柒"></a>柒</h1><p>晚上的天津极极极美。</p><p>美到窒息。</p><p>海河撑起了整座城市。</p><p><br></p><p><img src="http://owkccdyrm.bkt.clouddn.com/Snapseed%203.jpg" alt="img"></p><p><br></p><p><img src="http://owkccdyrm.bkt.clouddn.com/Snapseed%202.jpg" alt="img"></p><p><br></p><p><img src="http://owkccdyrm.bkt.clouddn.com/Snapseed.jpg" alt="img"></p><p><br></p><p><img src="http://owkccdyrm.bkt.clouddn.com/2ABAC868-83AD-49D8-8B0C-658F346E5F6F.JPG" alt="img"></p><p><br></p><p>真的真的。</p><p>在寒风中等我十秒曝光的人 er。</p><p>哈哈哈。</p><p>真爱。</p><p><br></p><h1 id="捌"><a href="#捌" class="headerlink" title="捌"></a>捌</h1><p><img src="http://owkccdyrm.bkt.clouddn.com/7518858448_IMG_5085.jpg" alt="img"></p><p>▲ <em>天津 · 天津金皇大酒店</em></p><p><br></p><p>晚上住了家五星酒店。</p><p>周围堵车堵的不可理喻。</p><p>酒店的床也很舒服。</p><p>有个人陪着的感觉也很开心。</p><p>真的很开心。</p><p><br></p><blockquote><p>我一直盼望你来找我，发型凌乱，胡子拉碴，带着满身思念敲我的门。</p></blockquote><p>这样子。</p><p><br></p><h1 id="玖"><a href="#玖" class="headerlink" title="玖"></a>玖</h1><blockquote><p>我也知晓岁月无情，姑娘无尽，但亦遗憾不能永世在一起。</p><p>所以祝你幸福。</p><p>祝你幸福。祝你幸福。</p></blockquote><p>没了。</p><p>看看照片吧。</p><p><img src="http://owkccdyrm.bkt.clouddn.com/7518858448_IMG_5146.jpg" alt="img"></p><p><br></p><p><img src="http://owkccdyrm.bkt.clouddn.com/IMG_5112.jpg" alt="img"></p><p><br></p><p><img src="http://owkccdyrm.bkt.clouddn.com/IMG_5187.jpg" alt="img"></p><p><br></p><h1 id="拾"><a href="#拾" class="headerlink" title="拾"></a>拾</h1><blockquote><p>谈恋爱是一件浪费时间的事。</p><p>有时候想到如果跟现在这位分手，再去认识新的人，再花许多时间去开始粘人的热恋期。<br>了解他的爱好、习性、隐秘的缺点与家庭，真的非常费心费力。<br>那种重复的甜言蜜语还要再说给别人，确实觉得有点后怕。</p><p>也许我是一个自私又懒惰的人。</p></blockquote><p>晚安。</p><p><img src="http://owkccdyrm.bkt.clouddn.com/D9B419A5-50D1-4EAA-82DF-95D92E75D4CC.jpg" alt="img"></p><p>▲ <em>天津 · 海河</em></p><p><br></p><p><br><br><br></p><p>©2017 Spencer Woo</p>]]></content>
    
    <summary type="html">
    
      
      
        
        
          
        
      
    
    </summary>
    
      <category term="碎碎念" scheme="https://spencerwoo.com/categories/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"/>
    
    
      <category term="sexy moves" scheme="https://spencerwoo.com/tags/sexy-moves/"/>
    
  </entry>
  
  <entry>
    <title>这个圈子 | 很野</title>
    <link href="https://spencerwoo.com/2017/10/27/%E8%BF%99%E4%B8%AA%E5%9C%88%E5%AD%90-%E5%BE%88%E9%87%8E/"/>
    <id>https://spencerwoo.com/2017/10/27/这个圈子-很野/</id>
    <published>2017-10-27T05:04:20.000Z</published>
    <updated>2018-01-26T04:04:51.730Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p><br></p><div id="aplayer1" class="aplayer" style="margin-bottom: 20px;"></div><script>var ap = new APlayer({element: document.getElementById("aplayer1"),narrow: false,autoplay: true,showlrc: 0,music: {title: "Puerto Cabezas, NI",author: "Lewis Del Mar",url: "http://owkccdyrm.bkt.clouddn.com/Lewis%20Del%20Mar-Puerto%20Cabezas,%20NI.mp3",pic: "http://owkccdyrm.bkt.clouddn.com/IMG_8297.JPG",}});window.aplayers || (window.aplayers = []);window.aplayers.push(ap);</script><p><br><br><em>本文首发于知乎 | <a href="http://www.zhihu.com/question/67078910/answer/250780765" target="_blank" rel="noopener">程序员除了敲代码，还有哪些隐藏的神技能？</a></em><br><br><br>谢邀。<br><br><br><img src="http://owkccdyrm.bkt.clouddn.com/IMG_7740.jpg" alt="img"><br><br><br>程序员这个群体，是「文人相轻」的。<br><br><br>程序员背负了这个社会所赋予的太多的价值和包袱。<br>「正名」的过程是繁冗复杂的。<br><br><br><br></p><h2 id="一"><a href="#一" class="headerlink" title="一"></a>一</h2><p><img src="http://owkccdyrm.bkt.clouddn.com/C6D0C91D-5110-4F26-9225-D04EDF652B4C.JPG" alt="img"><br><br><br>也是因为大学刚刚开始了一年的缘故吧。<br>写代码的经历并没有很丰富。<br>除了日常的 MOOC 和在线学习的 OJ 提交，课业任务上的代码就所剩无几了。<br><br></p><h2 id="二"><a href="#二" class="headerlink" title="二"></a>二</h2><p>题目要问的是「程序员的隐藏技能」。<br>其实，能看进去大段大段的、全英文的、晦涩的开发文档，怕是程序员最有特点的技能了。<br><br><br>毕竟，捣鼓代码是本职任务。<br><br></p><h2 id="三"><a href="#三" class="headerlink" title="三"></a>三</h2><p>学校里讲了 C 语言，讲了些许算法和数据结构。<br>讲了讲 Web 开发和 Java。<br><br><br>自己又弄了 Github Pages，用 hexo 搭了个小网站。<br><br><br>除了知乎，还有 Instagram 和 EyeEm 的账号，虽然并不活跃，但也有点粉丝。<br><br></p><h2 id="四"><a href="#四" class="headerlink" title="四"></a>四</h2><p><img src="http://owkccdyrm.bkt.clouddn.com/IMG_3594.JPG" alt="img"><br><br><br>「歪，你上面说的这些，哪里算隐藏技能了？」<br><br><br>嘻嘻，程序员还是要先聊些本行的东西。<br><br></p><h2 id="五"><a href="#五" class="headerlink" title="五"></a>五</h2><p>我贼喜欢拍照啊。<br><br><br><img src="http://owkccdyrm.bkt.clouddn.com/37773988-95B2-4055-B530-AE0CD1C1C864.jpg" alt="img"><br><br><br><img src="http://owkccdyrm.bkt.clouddn.com/6D4727C6-3FB4-4A94-874A-04115C8BFF19.JPG" alt="img"><br><br><br><img src="http://owkccdyrm.bkt.clouddn.com/5914341A-1D18-4451-898C-6ABB3D7E217D.JPG" alt="img"><br><br><br><img src="http://owkccdyrm.bkt.clouddn.com/934CBEA0-4F78-4D10-B836-6B327B826A80.JPG" alt="img"><br><br></p><p>看着养眼，就很开心了。<br>朋友圈摄影师。<br>鞠躬鞠躬。<br><br></p><h2 id="六"><a href="#六" class="headerlink" title="六"></a>六</h2><p>自从前些时候。<br>我了解到 iPhone 7 Plus 支持 4K 30fps 的录制。<br><br><br>可以说是兴奋的不得了。<br><br><br>尝试着录制了几个 vlog 片段。</p><div id="dplayer3" class="dplayer" style="margin-bottom: 20px;"></div><script>var dplayer3 = new DPlayer({"element":document.getElementById("dplayer3"),"video":{"url":"http://owkccdyrm.bkt.clouddn.com/vlog.Oct.22.MP4","pic":"http://owkccdyrm.bkt.clouddn.com/IMG_8298.PNG"}});</script><!-- dplayer used1 --><p>▲ 于北京电影学院</p><p><br></p><h2 id="七"><a href="#七" class="headerlink" title="七"></a>七</h2><p>虽然。<br>人们说。<br>或是我们自黑。<br>这圈子里的人，大都是「死肥宅」。<br>不过，有些我们。<br>还是有着大把技能的。<br><br><br>鞠躬。<br>完毕。<br><br></p><h2 id="八"><a href="#八" class="headerlink" title="八"></a>八</h2><p>对了。<br>我还很会写小情书 。</p><p><br><br><br></p><p>.<br><br><br><br></p><p>©2017 Spencer Woo</p>]]></content>
    
    <summary type="html">
    
      
      
        
        
          
        
      
    
    </summary>
    
      <category term="碎碎念" scheme="https://spencerwoo.com/categories/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"/>
    
    
      <category term="sexy moves" scheme="https://spencerwoo.com/tags/sexy-moves/"/>
    
  </entry>
  
  <entry>
    <title>碎碎念 | 年少荒唐</title>
    <link href="https://spencerwoo.com/2017/10/14/%E7%A2%8E%E7%A2%8E%E5%BF%B5-%E5%B9%B4%E5%B0%91%E8%8D%92%E5%94%90/"/>
    <id>https://spencerwoo.com/2017/10/14/碎碎念-年少荒唐/</id>
    <published>2017-10-14T05:21:51.000Z</published>
    <updated>2018-01-26T04:04:49.070Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><blockquote><p>后来许多人问我一个人夜晚踟蹰路上的心情，我想起的却不是孤单和路长，而是波澜壮阔的海和天空中闪耀的星光。</p></blockquote><p><br></p><p><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=29378196&auto=1&height=66"></iframe><br><br></p><h2 id="年少荒唐"><a href="#年少荒唐" class="headerlink" title="年少荒唐"></a>年少荒唐</h2><p>买了一本书。<br>朱炫写的。<br><br><br><img src="http://owkccdyrm.bkt.clouddn.com/IMG_7979.jpg" alt="img"><br><br><br>朱炫。<br>他是我知乎上面很喜欢的一个人。</p><p><br><br><del>- 已删除 -</del><br>梁边妖。<br>嗯，之后就是他了。<br>（对不起，金旭亮老师。）<br><br></p><h2 id="念头-·-壹"><a href="#念头-·-壹" class="headerlink" title="念头 · 壹"></a>念头 · 壹</h2><p><del>- 已删除 -</del></p><p><br></p><blockquote><p>我年少的时候，喜欢看热血的东西。<br>幻想自己是屠龙的勇士，登塔的先锋。<br>我左手有剑，右手有光，没头没脑地燃烧自己。</p></blockquote><p><br><br><del>- 已删除 -</del><br><br></p><h2 id="念头-·-贰"><a href="#念头-·-贰" class="headerlink" title="念头 · 贰"></a>念头 · 贰</h2><p>昨天晚上。<br>本想找一个安静的地方更博。<br>然后自己在宿舍发呆了2个小时。</p><p><br></p><blockquote><p>所谓热血的少年，青涩的爱恋，死亡与梦之约。<br>这么好的故事。<br>我不能演砸了。</p></blockquote><p><br><br>舍友问我。<br>「博博你吃不吃水果。」<br><br><br>哎。<br><br></p><h2 id="念头-·-叁"><a href="#念头-·-叁" class="headerlink" title="念头 · 叁"></a>念头 · 叁</h2><blockquote><p>小小少年的表情，我看了整整一个梦，脸对着脸，我呼出的热气几乎融了他鼻尖上的白霜。</p></blockquote><p>想喝酒。<br>想去天台喝酒。<br>为什么不开心就会想到要去高处喝酒。<br><br><br>因为「高处不胜寒」啊。<br><br></p><h2 id="念头-·-伍"><a href="#念头-·-伍" class="headerlink" title="念头 · 伍"></a>念头 · 伍</h2><p>睡得很舒服。<br>持续三天了。<br><br><br><del>- 已删除 -</del><br><br><br>哈哈哈。哈哈哈。<br><br></p><h2 id="念头-·-陆"><a href="#念头-·-陆" class="headerlink" title="念头 · 陆"></a>念头 · 陆</h2><blockquote><p>我明白了，这个表情，就是不服气。</p></blockquote><p><br><br><img src="http://owkccdyrm.bkt.clouddn.com/C657C45A-4649-4ABD-B71E-1DD4BEA470DB.JPG" alt="img"><br><br><br>鞠躬。<br>更博给谁看。摊手。<br>没有「念头 · 肆」。不好意思。<br><br><br><br></p><p>©2017 Spencer Woo</p>]]></content>
    
    <summary type="html">
    
      
      
        
        
          
        
      
    
    </summary>
    
      <category term="碎碎念" scheme="https://spencerwoo.com/categories/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"/>
    
    
      <category term="sexy moves" scheme="https://spencerwoo.com/tags/sexy-moves/"/>
    
  </entry>
  
  <entry>
    <title>来哈尔滨陪我看星星</title>
    <link href="https://spencerwoo.com/2017/10/04/%E6%9D%A5%E5%93%88%E5%B0%94%E6%BB%A8%E9%99%AA%E6%88%91%E7%9C%8B%E6%98%9F%E6%98%9F/"/>
    <id>https://spencerwoo.com/2017/10/04/来哈尔滨陪我看星星/</id>
    <published>2017-10-04T15:26:35.000Z</published>
    <updated>2018-01-26T04:04:48.240Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>本文首发于知乎 | <a href="http://www.zhihu.com/question/22410997/answer/239007719" target="_blank" rel="noopener">哈尔滨是一座怎样的城市</a>。</p><p><br></p><p><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=28851137&auto=1&height=66"></iframe><br><br></p><p>感谢邀请。<br>多图杀猫。<br><br><br><img src="http://owkccdyrm.bkt.clouddn.com/854BB82F-AD00-4DB6-90D7-567891D17FFC.JPG" alt="img"><br>▲哈尔滨江畔 | 防洪纪念塔<br><br></p><h2 id="国庆"><a href="#国庆" class="headerlink" title="国庆"></a>国庆</h2><p>现在是2017年10月。<br>国庆假期。<br>到处的人都多的不可理喻。<br><br><br>哈尔滨是个什么样子的城市？<br><br><br>冷。<br>寒冷。<br>入骨的冷。<br><br><br>「寒冷是一座城市对一个人最大的恶意。」<br><br><br>在哈尔滨呆了第19个年头的人（我）如是说。<br><br><br><img src="http://owkccdyrm.bkt.clouddn.com/FFC10747-45B0-4499-AF8B-216D06D785D3.JPG" alt="img"><br>▲哈尔滨松花江 | 过江铁桥<br><br></p><h2 id="天气"><a href="#天气" class="headerlink" title="天气"></a>天气</h2><p>今天的天气异常的蓝。虽然「入冬」了，但可能是因为还没有供暖的缘故吧，哈尔滨还能保有这样蓝天。<br><br><br>天蓝的让人忍不住说「woc」啊。<br><br><br><img src="http://owkccdyrm.bkt.clouddn.com/B3F63726-2CD1-4B26-8A5D-53FC4176D986.jpg" alt="img"><br>▲斯大林公园 | 彩旗<br><br></p><h2 id="中央大街-Central-Street"><a href="#中央大街-Central-Street" class="headerlink" title="中央大街 | Central Street"></a>中央大街 | Central Street</h2><p>中央大街可以说是哈尔滨最美丽、最悠久、最为人知的街道了。<br><br><br>也是逢年过节人最多的地方了。<br><br><br>毕竟这街道，是古朴的石砖，而非冰冷的沥青，构建而成的。随处可见的巴洛克风格的建筑也让这城市有了俄国的韵味。中央大街这里的「俄罗斯」，甚至比哈尔滨老道外的「俄罗斯」更有一份「俄罗斯」。<br><br><br><img src="http://owkccdyrm.bkt.clouddn.com/3FA9E8DF-D18E-48F3-85F4-C8806727460F.JPG" alt="img"><br>▲中央大街 | 旗子和看不清多少的人<br><br><br>这里除了厚厚的衣裳，蓝蓝的天空。<br>还有热气腾腾的锅包肉，发扬全国的烤冷面。<br>甚至还有甜的出人意料的铁栏杆。<br><br></p><p>嘘。每年的11月之后到第二年1月前是铁栏杆最甜的时候。<br><br><br><img src="http://owkccdyrm.bkt.clouddn.com/IMG_7640.jpg" alt="img"><br>▲中央大街 | 楼宇<br><br><br><img src="http://owkccdyrm.bkt.clouddn.com/IMG_7641.jpg" alt="img"><br>▲中央大街 | 另一侧带广告牌的楼宇<br><br><br>哈尔滨作为一个旅游城市（误？），似乎更多的是将异乡的特点和文化交织在一起，重构、编纂，而成为了东北最有特点、最为鲜明的地方。<br><br><br>或许也是这个原因，让哈尔滨美女如云吧。<br><br><br><img src="http://owkccdyrm.bkt.clouddn.com/IMG_7636.jpg" alt="img"><br>▲中央大街 | 随处可见的锅包肉店面<br><br></p><h2 id="形象塑造"><a href="#形象塑造" class="headerlink" title="形象塑造"></a>形象塑造</h2><p>当你远离这种为了塑造一座城市的特点而建造的街道之后，这座城市的市井之气也会被展现的一览无余。<br><br><br><img src="http://owkccdyrm.bkt.clouddn.com/12498C79-FCD5-42B5-9827-CCE00D8B51D3.JPG" alt="img"><br>▲哈工大西门 | 文艺师傅的烤鱿鱼<br><br><br><img src="http://owkccdyrm.bkt.clouddn.com/6362F135-09A8-4AB5-B41C-70F477F26625.JPG" alt="img"><br>▲哈工大西门 | 高记烤面筋<br><br></p><h2 id="市井"><a href="#市井" class="headerlink" title="市井"></a>市井</h2><p>哈尔滨和中国乃至世界的每一座城市都一样，有些属于自己的东西，比如建筑、比如江水、比如早早黯淡的天色和晚晚升起的太阳。<br><br><br>当然每座城市都拥有的街头小摊、繁乱的人群、拥堵的车流，哈尔滨也一个不落。<br><br><br><img src="http://owkccdyrm.bkt.clouddn.com/9AB2055A-549F-4E01-B756-B5EA8C68491E.JPG" alt="img"><br>▲哈工大西门 | 牌子<br><br><br>我想要讲的，大概也就这样了。<br><br><br>鞠躬。<br>来这里请多穿。<br><br></p><h3 id="再次鞠躬。"><a href="#再次鞠躬。" class="headerlink" title="再次鞠躬。"></a>再次鞠躬。</h3><p><br><br><br></p><p>©2017 Spencer Woo</p>]]></content>
    
    <summary type="html">
    
      
      
        
        
          
        
      
    
    </summary>
    
      <category term="摄影" scheme="https://spencerwoo.com/categories/%E6%91%84%E5%BD%B1/"/>
    
    
      <category term="sexy moves" scheme="https://spencerwoo.com/tags/sexy-moves/"/>
    
      <category term="speak out" scheme="https://spencerwoo.com/tags/speak-out/"/>
    
  </entry>
  
  <entry>
    <title>This is Harbin | 北方的城市冻死个人</title>
    <link href="https://spencerwoo.com/2017/10/01/This-is-Harbin/"/>
    <id>https://spencerwoo.com/2017/10/01/This-is-Harbin/</id>
    <published>2017-10-01T13:27:43.000Z</published>
    <updated>2018-01-26T04:05:02.580Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h2 id="10月1日-举国同庆"><a href="#10月1日-举国同庆" class="headerlink" title="10月1日 举国同庆"></a>10月1日 举国同庆</h2><p><br><br><div id="dplayer2" class="dplayer" style="margin-bottom: 20px;"></div><script>var dplayer2 = new DPlayer({"element":document.getElementById("dplayer2"),"video":{"url":"http://owkccdyrm.bkt.clouddn.com/Lana%20Del%20Rey%20-%20White%20Mustang%20%28Official%20Video%29.mp4","pic":"http://owkccdyrm.bkt.clouddn.com/3.jpg"}});</script><!-- dplayer used1 --><br><br><br>我刚刚回到哈尔滨。<br><br><br>「自古逢秋悲寂寥 我言秋日胜春朝」<br><br><br>啥意思呢。<br>真 TM 冷。<br>寒冷是一个城市对一个人最大的恶意。<br><br></p><h3 id="约拍"><a href="#约拍" class="headerlink" title="约拍"></a>约拍</h3><p><br><br>约见了唐朝 —— 人称「人型三脚架 人抖手不抖」<br>要继续拍我的「东方树叶」镜头，特写，戏精博博。<br>最后成片，1分半的镜头。<br><strong>有1分15秒是废的。</strong><br><br><br><img src="http://owkccdyrm.bkt.clouddn.com/39FAA52D-52A1-463A-8971-657BBF73408E.JPG" alt="img"><br>▲凯德广场地下超市 | 农夫山泉区 | EOS 650D f/5.0 1/60s ISO 1000<br><br><br>这里遇见的人。<br>都觉得看着三瓶东方树叶傻笑的我。<br>和旁边举着单反傻笑的唐朝。<br>是傻子。<br><br><br>哎。<br><strong>做电影的人总得有点戏份加身。</strong><br>职业素养。<br><br></p><h3 id="大风"><a href="#大风" class="headerlink" title="大风"></a>大风</h3><p><br><br>今天感受到了这座城市深深的恶意。<br>穿了三件衣服。<br>T恤、衬衫、外套。<br>寒风还是彻骨的冷。<br><br><br><img src="http://owkccdyrm.bkt.clouddn.com/9AB2055A-549F-4E01-B756-B5EA8C68491E.JPG" alt="img"><br>▲哈工大西门 | EOS 650D f/5.6 1/50s ISO 6400<br><br><br>旁边有烤苞米的师傅。<br>他问我假期怎么没回家啊。<br>哎，我都说「这烤苞米是怎么卖的」了，都不够证明我是东北人吗。<br><br><br>工大里面的小姐姐都没有我的小姐姐可爱。<br>工大旁边的烧烤倒是比陪小姐姐吃的火锅好吃。<br>下次要带小姐姐吃烧烤、火锅、烤羊排、披萨、薯条和烤冷面。<br>小姐姐请多穿。<br><br></p><h3 id="市井的"><a href="#市井的" class="headerlink" title="市井的"></a>市井的</h3><p><br><br>五点多的天已经开始黑起来了。<br>刚刚吃完烧烤的我。<br><strong>饥肠辘辘。</strong><br><br><br><img src="http://owkccdyrm.bkt.clouddn.com/12498C79-FCD5-42B5-9827-CCE00D8B51D3.JPG" alt="img"><br>▲哈工大西门 | 唯有爱与美食不可辜负的大鱿鱼 | EOS 650D f/5.6 1/50s ISO 6400<br><br><br><br><br><img src="http://owkccdyrm.bkt.clouddn.com/6362F135-09A8-4AB5-B41C-70F477F26625.JPG" alt="img"><br>▲哈工大西门 | 烤面筋 | EOS 650D f/5.6 1.50s ISO 6400<br><br><br>唯有美食与爱不可辜负。<br>烤鱿鱼的师傅可以说是很文艺了。<br><br><br>我在这附近走啊走啊走。<br>可我约的车就是没到。<br><br><br>累。<br><br></p><blockquote><p>我也知晓，岁月无情、姑娘无尽。但亦遗憾，不能永世和你在一起。<br>所以祝你幸福，祝你幸福。<br>祝你幸福。</p></blockquote><p><br><br>鞠躬。<br><br><br><br></p><p>©2017 Spencer Woo</p>]]></content>
    
    <summary type="html">
    
      
      
        
        
          
        
      
    
    </summary>
    
      <category term="摄影" scheme="https://spencerwoo.com/categories/%E6%91%84%E5%BD%B1/"/>
    
    
      <category term="sexy moves" scheme="https://spencerwoo.com/tags/sexy-moves/"/>
    
      <category term="speak out" scheme="https://spencerwoo.com/tags/speak-out/"/>
    
  </entry>
  
  <entry>
    <title>谁知道我在说些什么呢</title>
    <link href="https://spencerwoo.com/2017/09/30/%E8%B0%81%E7%9F%A5%E9%81%93%E6%88%91%E5%9C%A8%E8%AF%B4%E4%BA%9B%E4%BB%80%E4%B9%88%E5%91%A2/"/>
    <id>https://spencerwoo.com/2017/09/30/谁知道我在说些什么呢/</id>
    <published>2017-09-29T22:01:31.000Z</published>
    <updated>2018-01-26T04:04:50.810Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h3 id="现在是北京的早晨"><a href="#现在是北京的早晨" class="headerlink" title="现在是北京的早晨"></a>现在是北京的早晨</h3><p><br></p><h3 id="六点"><a href="#六点" class="headerlink" title="六点"></a>六点</h3><p><br><br><img src="http://owkccdyrm.bkt.clouddn.com/726000B9-1485-4358-AEE2-7B1710E0C6BD-14719-000003B79C097F3C_tmp.jpg" alt="img"><br>▲我最喜欢的两个东东都在这里<br><br></p><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=425137411&auto=1&height=66"></iframe><p>六点。<br>北京。<br>卯时 | 东方未明<br>70 · 空气质量良<br>14° 晴<br>风向正西 风力三级<br><br><br>▲ 寒山转苍翠 秋水日潺涓 ▲<br><br><br>还有三个小时，我就要去坐回家的高铁。<br><br><br>人啊。<br>人终归是要恋爱的吧。<br><br><br>可谁他妈知道谈恋爱是什么样子啊。<br><br></p><h3 id="睡眠"><a href="#睡眠" class="headerlink" title="睡眠"></a>睡眠</h3><p>刚刚睡了不到三个小时。<br>昨天晚上的烧烤吃的太多。<br>点了五个烤馕。<br>五个人都没吃完。<br><br></p><h3 id="看星星"><a href="#看星星" class="headerlink" title="看星星"></a>看星星</h3><p>我好想去看星星啊。</p><p><del>- 已删除 -</del></p><p>哈哈哈哈哈哈哈…<br><br></p><h3 id="帽子"><a href="#帽子" class="headerlink" title="帽子"></a>帽子</h3><p>妈哒哈哈哈。<br>老子圆嘛。<br>不戴帽子了妈卖批哈哈哈哈哈。<br><br></p><h3 id="S-W-A-T-C-H"><a href="#S-W-A-T-C-H" class="headerlink" title="S W A T C H"></a>S W A T C H</h3><p>嗯。<br>我的表坏掉了。<br>更确切的说。<br>我的表带太脏了。<br>但我不脏的。<br>我的表带，谁知道它一天天都在想些什么。<br><br></p><h3 id="他们说没照片都没意思看我更博"><a href="#他们说没照片都没意思看我更博" class="headerlink" title="他们说没照片都没意思看我更博"></a>他们说没照片都没意思看我更博</h3><p><br><br><img src="http://owkccdyrm.bkt.clouddn.com/B1B2FD5F-0E21-4C85-9CD5-47560BCCA5DE.jpg" alt="img"><br>▲诺。拿去拿去。<br><br><br>鞠躬。<br>我就在瞎说啦。嘘。<br><br><br><br></p><p>©2017 Spencer Woo</p>]]></content>
    
    <summary type="html">
    
      
      
        
        
          
        
      
    
    </summary>
    
      <category term="碎碎念" scheme="https://spencerwoo.com/categories/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"/>
    
    
      <category term="sexy moves" scheme="https://spencerwoo.com/tags/sexy-moves/"/>
    
  </entry>
  
  <entry>
    <title>iPhone Photography | 如何用手机拍出大片既视感</title>
    <link href="https://spencerwoo.com/2017/09/22/iPhone-Photography/"/>
    <id>https://spencerwoo.com/2017/09/22/iPhone-Photography/</id>
    <published>2017-09-22T05:57:50.000Z</published>
    <updated>2018-04-01T11:17:53.570Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><blockquote><p>拍一个东西，不停地拍，不同角度，不同光线地拍，是因为不可能有人物正好出现在你所要的三分点上，也不可能有那么多对称的场景来让你捕捉，神奇的光线不会乖乖地毕恭毕敬地投射在你身上。<strong>对称、对角线、黄金分割构图，是通过什么方法实现的？颜色的获得是靠观察的挖掘，还是靠后期的调谐？一个决定瞬间，是设计场景等待而来，还是包括场景都是一瞬间的事？</strong>这些都不是看看文章和听我在这儿说几个技巧就能实现的。从技巧，到最后落到一张照片上，是需要操作流程的，我们需要反复琢磨这个流程。<br>by 原画册韩松 | 链接：<a href="http://www.zhihu.com/question/20921841/answer/131411394" target="_blank" rel="noopener">提高手机摄影水平，有什么心得？</a> | 来源：知乎</p></blockquote><h1 id="手机摄影"><a href="#手机摄影" class="headerlink" title="手机摄影"></a>手机摄影</h1><p>iPhone Photography<br>Android Photography<br>Windows Phone Photography???</p><blockquote><p>我认为摄影爱好者要面临两个审美问题：<br>①知道某件东西能否能称为美—为自己的摄影确立目标<br>②能分析这件东西为什么美—为自己都摄影提供解决方案</p></blockquote><p><br></p><h2 id="构图"><a href="#构图" class="headerlink" title="构图"></a>构图</h2><p>如何构图。<br>如何把我们想要拍摄的主题表现的淋漓尽致。<br><img src="http://owkccdyrm.bkt.clouddn.com/2016-07-27%2004.04.56%201.JPG" alt="img"><br><em>▲ 中心对称构图法 | 中国青岛八大关 | f/1.9 ISO:40 1/668s | shot on Samsung Galaxy S6 Edge</em></p><p><img src="http://owkccdyrm.bkt.clouddn.com/2016-07-16%2006.35.42%201.jpg" alt="img"><br><em>▲ 三分黄金构图法 | 中国黑龙江帽儿山 | f/1.9 ISO:40 1/728s | shot on Samsung Galaxy S6 Edge</em></p><p>那么多的摄影师一直强调中心构图法、三分构图法、黄金分割法…<br>其实最为重要的是：<strong>手机端平摆正。</strong></p><p>再要注意的，就是要把拍摄的主体放在取景框的这样几个位置上：</p><ul><li>中心点</li><li>三分点</li><li>对称轴</li><li>引导线</li></ul><p>以及由他们衍生出来的位置。<br><img src="http://owkccdyrm.bkt.clouddn.com/12.jpg" alt="img"><br><em>图片来自韩松老师</em><br>这样拍出来的照片，符合大众的审美，大多都不会出差错。</p><p><img src="http://owkccdyrm.bkt.clouddn.com/steps.jpg" alt="img"><br><em>▲ 这里，开启手机的取景框分割线，构图更容易。</em></p><p><img src="http://owkccdyrm.bkt.clouddn.com/IMG_7364.PNG" alt="img"><br><em>▲ 把主体放在三分线的交点处食用更佳。</em></p><p>啊对了，手机的镜头都是定焦镜头，不具备光学变焦，就算是双摄，也跟单反相差甚远。<br>因此构图一定端稳、摆正、事先构图，<strong>不要双指放大取景框再去拍摄。</strong></p><p><img src="http://owkccdyrm.bkt.clouddn.com/building.jpg" alt="img"><br><em>▲ 留白 | 仰视构图 | 北理 良乡校区 南校区 | f/1.8 ISO:20 1/507s | shot on iPhone 7 Plus</em></p><h2 id="色彩"><a href="#色彩" class="headerlink" title="色彩"></a>色彩</h2><p>最为难把握的色彩。<br>阳光并不是从来都会恰好打在你所要拍摄的物体上面。<br>后期软件所加上的滤镜，大多也是为了弥补前期颜色的黯淡、仓促。</p><p><img src="http://owkccdyrm.bkt.clouddn.com/IMG_7309.jpg" alt="img"><br><em>▲中心对称构图法构图 | 北理 良乡校区 理学楼 | f/1.8 ISO:20 1/224s | shot on iPhone 7 Plus</em></p><p>上面这张照片，是我刚下大学物理课，从教室走出来的时候，阳光从南操场倾泻进入教学楼的样子。<br>我把色调调暖，又把右下角的红色消防栓的饱和度调高，这样突出黄红的对比。</p><p>本质上，照片的色彩审美还是需要长期培养而来的。<br>多加练习。</p><h2 id="场景"><a href="#场景" class="headerlink" title="场景"></a>场景</h2><h4 id="别拍全！！！"><a href="#别拍全！！！" class="headerlink" title="别拍全！！！"></a>别拍全！！！</h4><p>有时候，为了展现留白的技巧、为了突出主体，可以只展现画面的一部分，这样更加具有视觉冲击力。<br><img src="http://owkccdyrm.bkt.clouddn.com/2016-06-27%2003.27.39%201.JPG" alt="img"><br><em>▲ 留白 + 只露一个角 | 长春 居民区屋檐 | f/1.9 ISO:40 1/1500s | shot on Samsung Galaxy S6 Edge</em><br>这个技巧并不是所有场景都适用的，但是为了保证画面纯净、为了主体突出，可以考虑。<br><img src="http://owkccdyrm.bkt.clouddn.com/IMG_20160613_122206-01.JPEG" alt="img"><br><em>▲ 延伸线 + 对称构图 | 北京 故宫内部 | f/1.9 ISO:40 1/1500s | shot on Samsung Galaxy S6 Edge</em><br>这里用小巷的纵深感体现故宫里面的幽深。<br>旁边墙上的挂灯也很好的体现了故宫的历史感。<br>毕竟，摄影的目的在于还原场景，在于培养审美，也在于表达摄影师在拍摄所在地方的见闻感受。</p><h1 id="最后，致谢"><a href="#最后，致谢" class="headerlink" title="最后，致谢"></a>最后，致谢</h1><p>感谢知乎平台上面的摄影师们三年来的无私分享，让我在摄影的路上少走了很多弯路。<br>本文所有照片均为本人自己手机拍摄。</p><p><em>啊，这篇文字是摄影协会培训用稿，希望有所帮助。</em></p><p><strong>设备信息：</strong></p><ul><li>Samsung Galaxy S6 Edge</li><li>iPhone 7 Plus</li></ul><p><strong>灵感来源：</strong><br><a href="http://www.zhihu.com/collection/70657927" target="_blank" rel="noopener">我的知乎收藏夹 – Photography</a><br><a href="http://zhuanlan.zhihu.com/o-album" target="_blank" rel="noopener">原画册 | 韩松老师 | IPPA, MPA, MIRA 大赛获奖者的专栏</a></p><p>感谢阅读。<br>我们在成为老法师的路上。<br>共勉。<br><br><br>鞠躬。<br><br><br><br><br>© 2017 Spencer Woo</p>]]></content>
    
    <summary type="html">
    
      
      
        
        
          
        
      
    
    </summary>
    
      <category term="摄影" scheme="https://spencerwoo.com/categories/%E6%91%84%E5%BD%B1/"/>
    
    
      <category term="tutorial" scheme="https://spencerwoo.com/tags/tutorial/"/>
    
      <category term="sexy moves" scheme="https://spencerwoo.com/tags/sexy-moves/"/>
    
      <category term="photography" scheme="https://spencerwoo.com/tags/photography/"/>
    
  </entry>
  
  <entry>
    <title>如何优雅的在 Windows 上食用 C 语言</title>
    <link href="https://spencerwoo.com/2017/09/21/CodeInC/"/>
    <id>https://spencerwoo.com/2017/09/21/CodeInC/</id>
    <published>2017-09-21T11:47:14.000Z</published>
    <updated>2018-04-09T01:00:50.580Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h3 id="写在前面的话"><a href="#写在前面的话" class="headerlink" title="写在前面的话"></a>写在前面的话</h3><p>才疏学浅，不知所云。<br><br><br>学弟问我，大一开始学 C 语言，很难的样子。<br>第一堂课不知道老师说了些什么。不知道写什么，也不知道用什么写。<br><br><br>是啊，为什么要用 C 语言，作为一门入门编程语言呢。日常唉声叹气。<br><br></p><h2 id="The-C-Programming-Language"><a href="#The-C-Programming-Language" class="headerlink" title="The C Programming Language"></a>The C Programming Language</h2><p>C 语言是一门悠久的语言，悠久到1972年。<br>然而过了40年，现在教我们入门 C 语言的老师们，仍在叫我们用 <a href="http://baike.baidu.com/item/Microsoft%20Visual%20C++%206.0/8120077?fr=aladdin&amp;fromid=2703807&amp;fromtitle=vc%2B%2B6.0" target="_blank" rel="noopener">VC++ 6.0</a>，这个来自上个世纪，和我一般大小的，1998年的 IDE。<br><br><br>心疼。<br><br></p><h2 id="HOW-TO"><a href="#HOW-TO" class="headerlink" title="HOW TO"></a>HOW TO</h2><p>最简单的 C 语言代码。<br>最经典的 C 语言代码。<br>嗯。<br><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/*</span></div><div class="line"><span class="comment">* @Author: spencerwoo</span></div><div class="line"><span class="comment">* @Date:   2017-09-21 20:48:06</span></div><div class="line"><span class="comment">* @Last Modified by:   spencerwoo</span></div><div class="line"><span class="comment">* @Last Modified time: 2017-09-21 20:48:20</span></div><div class="line"><span class="comment">*/</span></div><div class="line"></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> <span class="keyword">const</span> *argv[])</span></span>&#123;</div><div class="line"><span class="built_in">printf</span>(<span class="string">"Hello world.\n"</span>);</div><div class="line"><span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p><p>好了。我们实现了利用 C 语言输出一段文字「Hello world.」到控制台「Console」。<br><strong>鼓掌。</strong><br>所以呢，我们在哪里写这段代码，怎么编译再运行这段代码呢？<br>新手的你我，先用 IDE 吧。<br><br></p><h2 id="IDE——集成开发环境"><a href="#IDE——集成开发环境" class="headerlink" title="IDE——集成开发环境"></a>IDE——集成开发环境</h2><p>Integrated Development Environment<br>集成开发环境</p><p>市面上有哪些比较适合新人的能编写 C 语言 IDE？<br>按照我对它们的好感度，我排了个序。<br><br></p><h3 id="C语言最好最可爱的-IDE-有什么"><a href="#C语言最好最可爱的-IDE-有什么" class="headerlink" title="C语言最好最可爱的 IDE 有什么!"></a>C语言最好最可爱的 IDE 有什么!</h3><ol><li><a href="http://www.codeblocks.org" target="_blank" rel="noopener">Codeblock</a><br> 轻便，实用，编译快，体积小，没广告，还跨平台(Windows, Linux, macOS)。</li><li><a href="http://www.visualstudio.com/zh-hans/?rr=http%3A%2F%2Fwww.baidu.com%2Flink%3Furl%3DBnjZjnni1FE4vM64sPEdPFTsmxa1lrrP3IjDV-f2iuKYKGDOOBRdeCguoZh1kgkr%26wd%3D%26eqid%3Db8fe73c20006b3fb0000000359c3af73" target="_blank" rel="noopener">Visual Studio 2017 Community</a><br> 地表最强 IDE，巨硬开发。大、全、不仅能开发 C语言程序，还能开发其他各种应用。臃肿，容易把电脑弄坏。谨慎食用，但上手体验极佳。</li><li><a href="http://www.jetbrains.com/clion/" target="_blank" rel="noopener">CLion</a><br> 逼格最高 IDE，JetBrain家的。极为强大。极为高贵。极贵。</li><li><a href="http://www.bloodshed.net/devcpp.html" target="_blank" rel="noopener">Dev C++</a><br> 最受欢迎，最丑，最容易上手。emmm，其实还是可用的。(ACM-ICPC集训队推荐)</li><li>记事本<br> 不解释。甩链接 -&gt;<ul><li><a href="http://spencerwoo98.github.io/2017/09/20/3/" target="_blank" rel="noopener">Why you should use Sublime Text 3 as your text editor.</a></li><li><a href="http://zhuanlan.zhihu.com/p/28045283" target="_blank" rel="noopener">如何优雅的在 macOS 上编译调试 C++ 程序？</a><br>希望进阶的同学，敬请等待更新。<br><br></li></ul></li></ol><h2 id="编译运行？喵喵喵？？"><a href="#编译运行？喵喵喵？？" class="headerlink" title="编译运行？喵喵喵？？"></a>编译运行？喵喵喵？？</h2><p><strong>C语言源代码</strong></p><ul><li>编译—-&gt;形成目标代码，目标代码是在目标机器上运行的代码。</li><li>连接—-&gt;将目标代码与C函数库相连接，并将源程序所用的库代码与目标代码合并，并形成最终可执行的二进制机器代码（程序）。</li><li>执行—-&gt;在特定的机器环境下运行C程序。</li></ul><p>这三个步骤，由操作系统以及 IDE 帮助我们进行。<br>请看具体操作。</p><h4 id="具体操作-Code-Blocks-示例"><a href="#具体操作-Code-Blocks-示例" class="headerlink" title="具体操作(Code::Blocks 示例)"></a>具体操作(Code::Blocks 示例)</h4><ol><li>创建新文件<ul><li>主菜单中选择「File -&gt; New -&gt; Project…」</li><li>在弹出的菜单中选择「Console application」（这是控制台程序的意思）</li><li>下面界面，选择开发语言，我们选 C</li><li>然后弹出界面，这里「Project title」填你要创建的工程名，「Folder to create project in」选择你要保存工程文件的目录。后面两个是自动生成的工程文件，和工程文件的位置。每个工程都对应一个工程文件</li><li>后面全部选择默认选项，直接 Next</li><li>向导结束后，工程创建完成。在左边 Projects 窗口中，我们能够看到创建好的工程里默认有一个名为「main.c」的文件</li></ul></li><li>编写代码</li><li>编译：<code>Ctrl</code> + <code>F9</code></li><li>运行：<code>F9</code></li></ol><p>最后我们的成功标志，就是在黑框框里面（终端/Console/CMD）出现 Hello World. 的字样。<br><br><br>FYI，如果你在 Mac 上面在终端里面用 gcc 编译运行，出现的效果大概是这个样子。<br><img src="http://owkccdyrm.bkt.clouddn.com/Jietu20170921-204928@2x.jpg" alt="img"><br>这代表我们的代码执行成功。<br><br></p><h4 id="下面这个视频是我在自己的-MacBook-上面用-Sublime-Text-3-创建文件-helloworld-c，在终端用-gcc-命令编译运行的过程。"><a href="#下面这个视频是我在自己的-MacBook-上面用-Sublime-Text-3-创建文件-helloworld-c，在终端用-gcc-命令编译运行的过程。" class="headerlink" title="下面这个视频是我在自己的 MacBook 上面用 Sublime Text 3 创建文件 helloworld.c，在终端用 gcc 命令编译运行的过程。"></a>下面这个视频是我在自己的 MacBook 上面用 Sublime Text 3 创建文件 helloworld.c，在终端用 gcc 命令编译运行的过程。</h4><div id="dplayer1" class="dplayer" style="margin-bottom: 20px;"></div><script>var dplayer1 = new DPlayer({"element":document.getElementById("dplayer1"),"video":{"url":"http://owkccdyrm.bkt.clouddn.com/2.mov","pic":"http://owkccdyrm.bkt.clouddn.com/sublime-mac-c.jpg"}});</script><!-- dplayer used1 --><p><br></p><h2 id="最后最后"><a href="#最后最后" class="headerlink" title="最后最后"></a>最后最后</h2><p>学习新的语言都是艰难的过程。<br>Learning curve 很陡峭。<br>共勉。<br><br><br>毕竟，3年前的我，还不知道什么是 gcc 呢。<br><br><br>鞠躬。<br><br><br><br><br>©2017 Spencer Woo</p>]]></content>
    
    <summary type="html">
    
      
      
        
        
          
        
      
    
    </summary>
    
      <category term="教程向" scheme="https://spencerwoo.com/categories/%E6%95%99%E7%A8%8B%E5%90%91/"/>
    
    
      <category term="tutorial" scheme="https://spencerwoo.com/tags/tutorial/"/>
    
      <category term="code" scheme="https://spencerwoo.com/tags/code/"/>
    
      <category term="sexy moves" scheme="https://spencerwoo.com/tags/sexy-moves/"/>
    
      <category term="sublime text" scheme="https://spencerwoo.com/tags/sublime-text/"/>
    
  </entry>
  
  <entry>
    <title>Why you should use Sublime Text 3 as your text editor.</title>
    <link href="https://spencerwoo.com/2017/09/20/use-sublime-text-3/"/>
    <id>https://spencerwoo.com/2017/09/20/use-sublime-text-3/</id>
    <published>2017-09-20T06:00:35.000Z</published>
    <updated>2018-01-28T08:26:08.910Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>Why you should use Sublime Text 3 as your text editor.</p><p>Oh. This is also my first ever written blog.</p><p><strong>鞠躬。</strong></p><p><br></p><h2 id="记事本？？？"><a href="#记事本？？？" class="headerlink" title="记事本？？？"></a>记事本？？？</h2><p><br></p><p>是啊，写代码就要用记事本啊。</p><p>记事本、文本编辑器。我们和那些用 IDE 的妖艳贱货不一样的很。</p><blockquote><p>唉，我觉得我的文字越来越有万伯阳的味道了。</p></blockquote><p><br></p><h2 id="首先：快"><a href="#首先：快" class="headerlink" title="首先：快"></a>首先：快</h2><p><br></p><p>1．你打开一次 Eclipse 之类的IDE够我打开、关闭、再打开我的 Sublime Text 20次了。</p><p><strong>实验</strong></p><p>打开 IntelliJ IDEA 平台至出现代码界面需要30.50秒</p><p>打开 Sublime Text 3 至出现代码界面需要1.73秒</p><blockquote><p>这里需要一个优雅而不失风度的微笑</p></blockquote><p>2．全局搜索和索引速度超快，可配置快捷键实现快速跳转，批量删改，构建参数。</p><p><br></p><h2 id="以及：性感"><a href="#以及：性感" class="headerlink" title="以及：性感"></a>以及：性感</h2><p><br></p><p>打开 Command Palette –&gt; Install Package -&gt; Theme 完成魔改。</p><p><img src="http://owkccdyrm.bkt.clouddn.com/Jietu20171031-184914.jpg" alt="img"></p><p>于是你有了 Dev C++ 之流很难拥有的美丽的外观，以及清晰美观的 Sidebar：侧边栏。</p><p><br></p><h2 id="最后：可拓展"><a href="#最后：可拓展" class="headerlink" title="最后：可拓展"></a>最后：可拓展</h2><p><br></p><ol><li><p>基于 snippet 的代码自动补全。</p><blockquote><p>这里有一个 gif 但我并不知道它能不能播放。</p></blockquote><p><img src="http://owkccdyrm.bkt.clouddn.com/IMB_LQv5Yj.GIF" alt="img"></p><blockquote><p>耶现在可以有动画了。特别酷。</p></blockquote></li><li><p>可利用海量插件实现生产力提升。</p></li></ol><ul><li>自动生成代码作者、生成日期、修改日期(<a href="http://github.com/skuroda/Sublime-AdvancedNewFile/" target="_blank" rel="noopener">AdvancedNewFile</a>)；</li><li>自动 format 各种语言的代码，以增加代码可读性、美观程度(<a href="http://github.com/timonwong/SublimeAStyleFormatter" target="_blank" rel="noopener">SublimeAStyleFormatter</a>, <a href="http://github.com/rareyman/HTMLBeautify" target="_blank" rel="noopener">HTMLBeautify</a>, <a href="http://github.com/csscomb/sublime-csscomb" target="_blank" rel="noopener">CSScomb</a>, <a href="http://github.com/jonlabelle/SublimeJsPrettier" target="_blank" rel="noopener">JS Prettier</a>…)；</li><li>自动补全 HTML (<a href="http://github.com/sergeche/emmet-sublime" target="_blank" rel="noopener">Emmet</a>)；</li><li>代码自动补全(<a href="http://github.com/SublimeCodeIntel/SublimeCodeIntel" target="_blank" rel="noopener">SublimeCodeIntel</a>)，语法高亮(<a href="http://github.com/SublimeLinter/SublimeLinter3" target="_blank" rel="noopener">SublimeLinter</a>)，侧边栏背景沉浸(<a href="http://github.com/TheSpyder/SyncedSideBar" target="_blank" rel="noopener">SyncedSideBar</a>)，etc；</li></ul><p>拥有 Sublime Text，就拥有一个秒开的、美丽的、啥都能干的 「IDE」。</p><p>这就是为什么，SublimeText 3，是世界上最好的代码编辑器。</p><p><strong>鞠躬。</strong></p><p><br></p><h2 id="其实"><a href="#其实" class="headerlink" title="其实"></a>其实</h2><p><br><br>这篇文字，是网络开拓者协会要我帮他们写的咯。</p><p>我把它转成 Markdown，看着超舒服。</p><p><br><br><br></p><p>©2017 Spencer Woo</p>]]></content>
    
    <summary type="html">
    
      
      
        
        
          
        
      
    
    </summary>
    
      <category term="教程向" scheme="https://spencerwoo.com/categories/%E6%95%99%E7%A8%8B%E5%90%91/"/>
    
    
      <category term="code" scheme="https://spencerwoo.com/tags/code/"/>
    
      <category term="sexy moves" scheme="https://spencerwoo.com/tags/sexy-moves/"/>
    
      <category term="sublime text" scheme="https://spencerwoo.com/tags/sublime-text/"/>
    
  </entry>
  
  <entry>
    <title>WHO AM I</title>
    <link href="https://spencerwoo.com/2017/09/20/getToKnowMe/"/>
    <id>https://spencerwoo.com/2017/09/20/getToKnowMe/</id>
    <published>2017-09-20T04:47:19.000Z</published>
    <updated>2018-01-26T04:04:54.330Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h2 id="见字好。"><a href="#见字好。" class="headerlink" title="见字好。"></a>见字好。</h2><p><br></p><div id="aplayer2" class="aplayer" style="margin-bottom: 20px;"></div><script>var ap = new APlayer({element: document.getElementById("aplayer2"),narrow: false,autoplay: true,showlrc: 0,music: {title: "Radioactive (Acoustic)",author: "Imagine Dragons",url: "http://owkccdyrm.bkt.clouddn.com/Imagine%20Dragons%20-%20Radioactive%20%28Acoustic%29.mp3",pic: "http://owkccdyrm.bkt.clouddn.com/WechatIMG8.jpeg",}});window.aplayers || (window.aplayers = []);window.aplayers.push(ap);</script><p><br><br>我是什么呢。<br><br><br>我是学生。<br><br><br>独立摄影师。<br>独立撰稿人。<br><br><br>设计师。<br>美工。<br><br><br>独立程序员。<br><br></p><h2 id="见到你-hin-开心。"><a href="#见到你-hin-开心。" class="headerlink" title="见到你 hin 开心。"></a>见到你 hin 开心。</h2><p><br><br>鞠躬。</p><p>商业合作请走值乎。</p><p><br><br><br></p><p>©2017 Spencer Woo</p>]]></content>
    
    <summary type="html">
    
      
      
        
        
          
        
      
    
    </summary>
    
      <category term="认识我" scheme="https://spencerwoo.com/categories/%E8%AE%A4%E8%AF%86%E6%88%91/"/>
    
    
      <category term="sexy moves" scheme="https://spencerwoo.com/tags/sexy-moves/"/>
    
      <category term="speak out" scheme="https://spencerwoo.com/tags/speak-out/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://spencerwoo.com/2017/09/20/hello-world/"/>
    <id>https://spencerwoo.com/2017/09/20/hello-world/</id>
    <published>2017-09-20T04:00:00.000Z</published>
    <updated>2018-01-26T04:04:58.280Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>Hi.<br><br><br>这是我的个人博客。利用 Hexo 开源框架搭载而成。致谢。<br>下面是欢迎语。<br>欢迎食用。<br><br></p><p>Welcome to <a href="http://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="http://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="http://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="http://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure><p>More info: <a href="http://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure><p>More info: <a href="http://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure><p>More info: <a href="http://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure><p>More info: <a href="http://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        
        
          
        
      
    
    </summary>
    
      <category term="认识我" scheme="https://spencerwoo.com/categories/%E8%AE%A4%E8%AF%86%E6%88%91/"/>
    
    
      <category term="code" scheme="https://spencerwoo.com/tags/code/"/>
    
      <category term="not important" scheme="https://spencerwoo.com/tags/not-important/"/>
    
  </entry>
  
</feed>
