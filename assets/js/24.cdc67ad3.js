(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{380:function(e,t,r){"use strict";r.r(t);var s=r(16),a=Object(s.a)({},function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("p",[r("strong",[e._v("终端")]),e._v("，是用户与操作系统进行交互的最原始的输入输出环境，也是执行一些高级系统操作的必要工具。而 Windows 的终端「小黑框」，一直给大家一种「难看难用」的印象。接下来，我将介绍一些小方法，对 Windows 的终端环境改造，让其使用体验比肩 macOS 和 Linux 的终端。")]),e._v(" "),r("h2",{attrs:{id:"console、terminal-和-shell-的区别"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#console、terminal-和-shell-的区别","aria-hidden":"true"}},[e._v("#")]),e._v(" Console、Terminal 和 Shell 的区别")]),e._v(" "),r("p",[e._v("打住打住，在动手魔改 Windows 终端之前，由于我们接下来要分别从「终端」和「命令行解释器」的角度去改造 Windows 终端环境，所以先听我絮叨一些专有名词：控制台（Console）、"),r("strong",[e._v("终端（Terminal）和命令行解释器（Shell）")]),e._v("。")]),e._v(" "),r("p",[r("strong",[e._v("推荐阅读：")]),r("a",{attrs:{href:"https://link.zhihu.com/?target=http%3A//unix.stackexchange.com/questions/4126/what-is-the-exact-difference-between-a-terminal-a-shell-a-tty-and-a-con",target:"_blank",rel:"noopener noreferrer"}},[e._v("What is the exact difference between a 'terminal', a 'shell', a 'tty' and a 'console'?"),r("OutboundLink")],1)]),e._v(" "),r("p",[e._v("对于现在来讲：")]),e._v(" "),r("ul",[r("li",[e._v("我们打开 Windows 的那个「小黑框」（Command Prompt），实际上就是打开了一个 "),r("strong",[e._v("终端")]),e._v("（Terminal）")]),e._v(" "),r("li",[e._v("在终端里面「输入命令，得到结果」的交互程序，就是 "),r("strong",[e._v("命令行解释器")]),e._v("（Shell）")])]),e._v(" "),r("p",[e._v("也正因如此，Windows 最新的 Shell 叫 Power"),r("strong",[e._v("Shell")]),e._v("。（控制台 Console 则是相对古老的概念，是大型机物理意义上面的独立终端，我们在这里先不探讨这个话题。）使用 macOS 和 Linux 的同学如果听说过 "),r("code",[e._v("bash")]),e._v(" 和 "),r("code",[e._v("zsh")]),e._v(" 的话，它们同样也是 Shell。")]),e._v(" "),r("p",[e._v("打个比方，Terminal 就像是一个人的衣服，可以有各种颜色、形状甚至功能；那么 Shell 则是这个人，你和他沟通来获得信息，并且他可以在与你沟通的过程中事先告诉你许多信息、提醒，甚至自动帮你补充你想说的话。")]),e._v(" "),r("p",[r("img",{attrs:{src:"https://i.loli.net/2019/02/17/5c695b7002661.gif",alt:"Demo"}})]),e._v(" "),r("p",[e._v("就像我前面提到的：PowerShell 是 Windows 新一代 Shell。而大家可能更为了解的「小黑框 Command Prompt」则是 Windows 向前兼容的古老作品，bug 多不说，还有诸多不方便。"),r("strong",[e._v("所以我们不用犹豫，直接使用 PowerShell 吧！")])]),e._v(" "),r("p",[e._v("接下来，我们来先改造 Windows PowerShell 的外在「默认终端」。")]),e._v(" "),r("h2",{attrs:{id:"默认的-powershell-终端"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#默认的-powershell-终端","aria-hidden":"true"}},[e._v("#")]),e._v(" 默认的 PowerShell 终端")]),e._v(" "),r("p",[e._v("Windows 为我们提供了一个默认的 PowerShell 终端，可以在 Windows 开始菜单上右键，点击「Windows PowerShell」打开。虽然默认终端有很多限制，但是其技术底层，响应就高效迅速，碾压其他所有第三方终端模拟器。我们从默认终端开始魔改。🍌")]),e._v(" "),r("h3",{attrs:{id:"改进-powershell-的字体"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#改进-powershell-的字体","aria-hidden":"true"}},[e._v("#")]),e._v(" 改进 PowerShell 的字体")]),e._v(" "),r("p",[e._v("不得不承认的是，在中文环境下，默认 PowerShell 的「新宋体」确实很（zhen）不（ta）耐（ma）看（chou）。然而由于默认 PowerShell 终端是一个非常底层的应用，其界面甚至没有利用 WinForm、WPF 等通用 UI 渲染框架来实现，而是直接调用底层 Windows API 来实现，因此其字体要求非常严格。（这也是我们不能随随便便下载一个我们喜欢的等宽字体给 PowerShell 默认终端使用的缘故。）")]),e._v(" "),r("p",[e._v("目前据我所知，唯一支持这一严格要求的字体（中文环境下）只有「Sarasa Gothic / 更纱黑体 / 更紗黑體 / 更紗ゴシック」（后面简称更纱黑体），可以从 "),r("a",{attrs:{href:"https://github.com/be5invis/Sarasa-Gothic/releases",target:"_blank",rel:"noopener noreferrer"}},[e._v("更纱黑体的 GitHub 页面下载"),r("OutboundLink")],1),e._v("。")]),e._v(" "),r("p",[r("img",{attrs:{src:"https://i.loli.net/2019/02/17/5c695ba435056.png",alt:""}})]),e._v(" "),r("p",[e._v("下载解压安装更纱黑体之后，我们重新启动一个 PowerShell 终端，就可以在菜单栏右键，选择「属性」→「字体」，并在字体中选择更纱黑体了。适合终端使用的等宽字体是「等距更纱黑体 T SC」或「Sarasa Mono T SC」。")]),e._v(" "),r("p",[r("img",{attrs:{src:"https://i.loli.net/2019/02/17/5c695bbbf239c.png",alt:""}})]),e._v(" "),r("p",[e._v("这样一来，我们就不必面对新宋体发愁了。")]),e._v(" "),r("h3",{attrs:{id:"更换-powershell-的配色"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#更换-powershell-的配色","aria-hidden":"true"}},[e._v("#")]),e._v(" 更换 PowerShell 的配色")]),e._v(" "),r("p",[e._v("微软官方提供了一个更换 PowerShell 配色的小工具："),r("a",{attrs:{href:"https://github.com/Microsoft/console/tree/master/tools/ColorTool",target:"_blank",rel:"noopener noreferrer"}},[e._v("ColorTool.exe"),r("OutboundLink")],1),e._v("，我们可以利用它来更换 PowerShell 的主题颜色。ColorTool 支持 iTerm 主题（以 "),r("code",[e._v(".itermcolors")]),e._v(" 结尾的主题文件）。")]),e._v(" "),r("p",[e._v("我们可以从 "),r("a",{attrs:{href:"https://github.com/Microsoft/console/releases",target:"_blank",rel:"noopener noreferrer"}},[e._v("ColorTool 的 GitHub 页面"),r("OutboundLink")],1),e._v(" 下载这个小工具。当然，如果你使用 "),r("a",{attrs:{href:"https://sspai.com/post/52496",target:"_blank",rel:"noopener noreferrer"}},[e._v("Scoop"),r("OutboundLink")],1),e._v("，也可以这样安装：")]),e._v(" "),r("div",{staticClass:"language-powershell extra-class"},[r("pre",{pre:!0,attrs:{class:"language-powershell"}},[r("code",[e._v("scoop install colortool\n")])])]),r("p",[e._v("值得注意的是，如果你是直接从 GitHub 上面下载了 "),r("code",[e._v("colortool.zip")]),e._v(" 并解压，"),r("code",[e._v("colortool.exe")]),e._v(" 的路径就并没有自动加入环境变量，所以你没有办法全局调用这个工具。因此我更加推荐利用 Scoop 这个优质的包管理来安装 ColorTool。")]),e._v(" "),r("p",[r("strong",[e._v("推荐阅读：")]),r("a",{attrs:{href:"https://sspai.com/post/52496",target:"_blank",rel:"noopener noreferrer"}},[e._v("「一行代码」搞定软件安装卸载，用 Scoop 管理你的 Windows 软件"),r("OutboundLink")],1)]),e._v(" "),r("p",[e._v("ColorTool 使用非常简单。工具自带了几种主题，我们可以利用下面这个命令进行查看：")]),e._v(" "),r("div",{staticClass:"language-powershell extra-class"},[r("pre",{pre:!0,attrs:{class:"language-powershell"}},[r("code",[e._v("colortool "),r("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),e._v("s "),r("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# -s 代表 schemes")]),e._v("\n")])])]),r("p",[r("img",{attrs:{src:"https://i.loli.net/2019/02/17/5c695bcc44af3.png",alt:""}})]),e._v(" "),r("p",[e._v("其中前面列出的几个 "),r("code",[e._v(".ini")]),e._v(" 和 "),r("code",[e._v(".itermcolors")]),e._v(" 就是主题配置文件，我们可以直接通过下面这个命令设置主题：")]),e._v(" "),r("div",{staticClass:"language-powershell extra-class"},[r("pre",{pre:!0,attrs:{class:"language-powershell"}},[r("code",[r("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 临时查看")]),e._v("\ncolortool <主题名称>\n"),r("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 定义默认值")]),e._v("\ncolortool "),r("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),e._v("d <主题名称>\n")])])]),r("p",[e._v("比如我们希望将主题配色更换为 "),r("code",[e._v("OneHalfDark.itermcolors")]),e._v("，只需要输入下面这个命令就可以更换并预览更新：")]),e._v(" "),r("div",{staticClass:"language-powershell extra-class"},[r("pre",{pre:!0,attrs:{class:"language-powershell"}},[r("code",[e._v("colortool OneHalfDark\n")])])]),r("p",[r("img",{attrs:{src:"https://i.loli.net/2019/02/17/5c695bdff21f9.gif",alt:""}})]),e._v(" "),r("p",[e._v("由于 ColorTool 直接支持 iTerm 主题配置文件，因此我们可以在 "),r("a",{attrs:{href:"https://iterm2colorschemes.com/",target:"_blank",rel:"noopener noreferrer"}},[e._v("iterm2colorschemes"),r("OutboundLink")],1),e._v(" 这个网站找到我们想要的主题背景进行配置，方法和上面介绍的一样：在 PowerShell 中定位至你希望更换的主题文件，使用命令 "),r("code",[e._v("colortool <主题名称>.itermcolors")]),e._v(" 进行配置即可。同时，如果你对上面的主题都不满意，你也可以直接在这个网站："),r("a",{attrs:{href:"https://terminal.sexy/",target:"_blank",rel:"noopener noreferrer"}},[e._v("terminal.sexy"),r("OutboundLink")],1),e._v(" 自行配置自己想要的主题，并通过同样的方式进行应用。")]),e._v(" "),r("h2",{attrs:{id:"第三方终端"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#第三方终端","aria-hidden":"true"}},[e._v("#")]),e._v(" 第三方终端")]),e._v(" "),r("p",[e._v("默认终端虽然响应迅速，但是其限制诸多，如果你对上面介绍的默认终端有所不满，也可以试一试下面这三个配置更方便，颜值更高的第三方终端模拟器。")]),e._v(" "),r("h3",{attrs:{id:"fluent-terminal"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#fluent-terminal","aria-hidden":"true"}},[e._v("#")]),e._v(" Fluent Terminal")]),e._v(" "),r("p",[e._v("Fluent Terminal 是现代的，也是我最推荐的终端。它是专属于 Windows 平台，利用 UWP 技术打造的颜值超高的终端模拟器。")]),e._v(" "),r("p",[r("img",{attrs:{src:"https://i.loli.net/2019/02/17/5c695becd4110.png",alt:""}})]),e._v(" "),r("p",[e._v("Fluent Terminal 在 GitHub 上面开源，项目地址在："),r("a",{attrs:{href:"https://github.com/felixse/FluentTerminal",target:"_blank",rel:"noopener noreferrer"}},[e._v("felixse/FluentTerminal"),r("OutboundLink")],1),e._v("。由于一些原因，作者并没有成功地将软件直接提交给微软商店上架，因此我们需要从 "),r("a",{attrs:{href:"https://github.com/felixse/FluentTerminal/releases",target:"_blank",rel:"noopener noreferrer"}},[e._v("其 GitHub Release 页面"),r("OutboundLink")],1),e._v(" 下载安装它。通常情况下，如果你的 Windows 版本较新，可以直接使用 "),r("code",[e._v("No Dependencies")]),e._v(" 的那个版本，不过如果接下来你安装过程出现问题，那么就使用第一个安装包。")]),e._v(" "),r("p",[r("img",{attrs:{src:"https://i.loli.net/2019/02/17/5c695bf170d8a.png",alt:""}})]),e._v(" "),r("p",[e._v("解压之后，我们得到如下的文件目录：")]),e._v(" "),r("p",[r("img",{attrs:{src:"https://i.loli.net/2019/02/17/5c695bfb5614b.png",alt:""}})]),e._v(" "),r("p",[e._v("右键点击 "),r("code",[e._v("Install.ps1")]),e._v("，选择使用 PowerShell 运行，之后按照提示操作即可安装成功。")]),e._v(" "),r("p",[e._v("Fluent Terminal 设置字体和主题颜色则简单得多：")]),e._v(" "),r("ul",[r("li",[r("p",[e._v("设置界面里，我们可以方便的选择合适的字体。")]),e._v(" "),r("p",[r("img",{attrs:{src:"https://i.loli.net/2019/02/17/5c695c054aaff.png",alt:""}})])]),e._v(" "),r("li",[r("p",[e._v("同时，我们也可以在 Profiles 里面将 PowerShell 设置为默认的 Shell。")]),e._v(" "),r("p",[r("img",{attrs:{src:"https://i.loli.net/2019/02/17/5c695c0ccce56.png",alt:""}})])]),e._v(" "),r("li",[r("p",[e._v("值得注意的是，Fluent Terminal 也支持 iTerm 主题配置文件，因此我们刚刚下载的主题同样可以在这里使用。")]),e._v(" "),r("p",[r("img",{attrs:{src:"https://i.loli.net/2019/02/17/5c695c149acfd.png",alt:""}})])])]),e._v(" "),r("p",[e._v("Fluent Terminal 是利用原生 Windows 10 最新的 UWP 技术打造而成，其响应速度仅稍逊于自带的默认 PowerShell 终端。值得推荐。👍")]),e._v(" "),r("h3",{attrs:{id:"hyper"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#hyper","aria-hidden":"true"}},[e._v("#")]),e._v(" Hyper")]),e._v(" "),r("p",[e._v("接下来介绍的 Hyper 以及下面的 Terminus，都是基于 Electron 的跨平台应用，配置方便、插件丰富、界面美丽。当然，避免不了的是 Electron 资源消耗大，打开和响应都没有前面介绍的快，但是它们的拓展性都非常强大，可以试一试。")]),e._v(" "),r("p",[e._v("Hyper 也在 GitHub 上面开源，项目地址在："),r("a",{attrs:{href:"https://github.com/zeit/hyper",target:"_blank",rel:"noopener noreferrer"}},[e._v("zeit/hyper"),r("OutboundLink")],1),e._v("，我们可以在 "),r("a",{attrs:{href:"https://github.com/zeit/hyper/releases",target:"_blank",rel:"noopener noreferrer"}},[e._v("Hyper 的 GitHub Release 页面"),r("OutboundLink")],1),e._v(" 下载安装，也可以利用 "),r("code",[e._v("scoop install hyper")]),e._v(" 来安装。")]),e._v(" "),r("p",[r("img",{attrs:{src:"https://i.loli.net/2019/02/17/5c695c22c4d72.png",alt:""}})]),e._v(" "),r("p",[e._v("Hyper 的配置相对复杂，需要直接修改其设置文件 "),r("code",[e._v(".hyper.js")]),e._v("。这里我仅仅介绍如何配置 Hyper 的默认 Shell 和字体，以及如何安装主题、插件的内容。")]),e._v(" "),r("p",[e._v("Hyper 配置的一切都发生在配置文件中，你可以通过快捷键 "),r("code",[e._v("Ctrl + ,")]),e._v(" 或者直接定位至 "),r("code",[e._v("C:\\Users\\<你的用户名>\\.hyper.js")]),e._v(" 来打开配置文件。可以看到已经有很多配置项留给我们修改，其中：")]),e._v(" "),r("ul",[r("li",[e._v("修改字体：")])]),e._v(" "),r("div",{staticClass:"language-javascript extra-class"},[r("pre",{pre:!0,attrs:{class:"language-javascript"}},[r("code",[r("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// 以更纱黑体为例子")]),e._v("\nfontFamily"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),r("span",{pre:!0,attrs:{class:"token string"}},[e._v("'\"Sarasa Mono T SC\", monospace'")]),e._v("\n")])])]),r("ul",[r("li",[e._v("修改默认 Shell 为 PowerShell：")])]),e._v(" "),r("div",{staticClass:"language-javascript extra-class"},[r("pre",{pre:!0,attrs:{class:"language-javascript"}},[r("code",[e._v("shell"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),r("span",{pre:!0,attrs:{class:"token string"}},[e._v("'C:\\\\WINDOWS\\\\System32\\\\WindowsPowerShell\\\\v1.0\\\\powershell.exe'")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\nshellArgs"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\nenv"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])])]),r("ul",[r("li",[e._v("安装主题或其他插件：")])]),e._v(" "),r("div",{staticClass:"language-javascript extra-class"},[r("pre",{pre:!0,attrs:{class:"language-javascript"}},[r("code",[r("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// 比如安装这个叫做 hyperterm-cobalt2-theme 的主题")]),e._v("\nplugins"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),r("span",{pre:!0,attrs:{class:"token string"}},[e._v('"hyperterm-cobalt2-theme"')]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v("\n")])])]),r("p",[e._v("很简单，之后我们保存配置文件，Hyper 会自动重新加载，并下载相应的主题或插件并实时更新，只需要等待片刻即可看到我们的配置生效。Hyper 的社区很完善，有大量精美的主题和插件，我们可以在 "),r("a",{attrs:{href:"https://hyper.is/plugins",target:"_blank",rel:"noopener noreferrer"}},[e._v("Hyper 插件"),r("OutboundLink")],1),e._v(" 寻找有趣的插件，在 "),r("a",{attrs:{href:"https://hyper.is/themes",target:"_blank",rel:"noopener noreferrer"}},[e._v("Hyper 主题"),r("OutboundLink")],1),e._v(" 挑选配色方案，同时这个 "),r("a",{attrs:{href:"https://github.com/bnb/awesome-hyper",target:"_blank",rel:"noopener noreferrer"}},[e._v("bnb/awesome-hyper"),r("OutboundLink")],1),e._v(" 整合仓库也可以参考很多。")]),e._v(" "),r("h3",{attrs:{id:"terminus"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#terminus","aria-hidden":"true"}},[e._v("#")]),e._v(" Terminus")]),e._v(" "),r("p",[e._v("Terminus 同样也在 GitHub 上面开源，项目地址在："),r("a",{attrs:{href:"https://github.com/Eugeny/terminus",target:"_blank",rel:"noopener noreferrer"}},[e._v("Eugeny/terminus"),r("OutboundLink")],1),e._v("。其实我更推荐 Terminus，因为它原生支持了 Windows Fluent 背景，同时它的设置是 GUI 方式的，更用户友好。")]),e._v(" "),r("p",[r("img",{attrs:{src:"https://i.loli.net/2019/02/17/5c695c2ba04ad.png",alt:""}})]),e._v(" "),r("p",[e._v("安装 Terminus 很方便，我们一样可以从 "),r("a",{attrs:{href:""}},[e._v("Terminus 的 GitHub Release 页面")]),e._v(" 下载安装它，也可以利用 "),r("code",[e._v("scoop install terminus")]),e._v(" 来安装。")]),e._v(" "),r("p",[e._v("Terminus 也是为数不多的几个有 Fluent Design 背景的 Electron 应用，我们可以在下面这里开启 Fluent 背景渲染，并把 Background type 改为 Fluent：")]),e._v(" "),r("p",[r("img",{attrs:{src:"https://i.loli.net/2019/02/17/5c695c363db01.png",alt:""}})]),e._v(" "),r("p",[e._v("配置 Terminus 的字体、配色和默认 Shell 都很简单：")]),e._v(" "),r("ul",[r("li",[r("p",[e._v("在这里我们可以修改字体（Font）和配色主题（Color Scheme）：")]),e._v(" "),r("p",[r("img",{attrs:{src:"https://i.loli.net/2019/02/17/5c695c3e3c528.png",alt:""}})])]),e._v(" "),r("li",[r("p",[e._v("在这里我们可以选择使用 PowerShell 作为默认的 Shell：")]),e._v(" "),r("p",[r("img",{attrs:{src:"https://i.loli.net/2019/02/17/5c695c489ae43.png",alt:""}})])])]),e._v(" "),r("p",[e._v("Terminus 的可玩性也很足，同样有很多插件可以安装，由于设置界面很清晰，我就不在这里一一列举了。")]),e._v(" "),r("p",[e._v("💻 这篇文章到这里也就大概结束了，我们：")]),e._v(" "),r("ul",[r("li",[e._v("不仅介绍了如何修改默认终端，让我们不需要每天面对新宋体发愁")]),e._v(" "),r("li",[e._v("还推荐了三个更现代的终端，供大家选择")])]),e._v(" "),r("p",[e._v("但是 Windows 终端美化之路还没有到尽头，接下来我还会继续介绍如何让 Power"),r("strong",[e._v("Shell")]),e._v(" 的 "),r("strong",[e._v("Shell")]),e._v(" 更炫酷，敬请期待。感谢阅读。")])])},[],!1,null,null,null);t.default=a.exports}}]);