(window.webpackJsonp=window.webpackJsonp||[]).push([[31],{311:function(e,t,a){"use strict";a.r(t);var r=a(2),s=Object(r.a)({},function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("p",[e._v("开源的 FreeBSD 成就了今天的 macOS，但是今天的 macOS 却因为闭源而失去了很多可定制化的地方。在 Linux 下动动编辑器改改代码就可以实现所谓的 UI 魔改，在如今的 macOS 下确实难上加难。当然为了统一设计风格而这一做的苹果公司我们还是可以理解。不过通过一些曲线救国的方式，我们的确能在某种程度上对 macOS 进行个性化的自定义。今天的菜单栏\b定制就是我们个性化 macOS 的第一步。")]),e._v(" "),a("p",[e._v("Reddit 是一个神奇的地方，是一个比百度贴吧里面讨论得更激烈，还比百度贴吧的广告少的地方。在 Reddit 里面有一个主题最近引起了我的注意："),a("code",[e._v("r/unixporn")])]),e._v(" "),a("p",[a("img",{attrs:{src:"https://i.loli.net/2018/05/29/5b0d08c21ffbb.jpg",alt:""}})]),e._v(" "),a("p",[e._v("里面的同学将自己魔改的类 Unix 系统的桌面主题、通知主题、终端配色和壁纸\b\b发出来进行分享。甚至有这个社区主题板块的人举办 Unix 系统魔改大赛。")]),e._v(" "),a("p",[e._v("不过这里面同学们魔改的类 Unix 系统 UI，其实大多数都是 Ubuntu 和 Arch Linux 的 Gnome 桌面、图标和状态栏。但是对美丽的向往阻止不了我们们将魔爪伸向 macOS ~")]),e._v(" "),a("blockquote",[a("p",[e._v("这篇文章灵感来自于 "),a("code",[e._v("r/unixporn")]),e._v(" 里面的这一篇帖子："),a("a",{attrs:{href:"https://www.reddit.com/r/unixporn/comments/8mbn7g/osx_minimal_oceanic/",target:"_blank",rel:"noopener noreferrer"}},[e._v("[OSX] Minimal Oceanic"),a("OutboundLink")],1)])]),e._v(" "),a("br"),e._v(" "),a("h1",{attrs:{id:"what-is-this"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#what-is-this","aria-hidden":"true"}},[e._v("#")]),e._v(" What is this?")]),e._v(" "),a("p",[e._v("今天我们将通过：")]),e._v(" "),a("p",[e._v("① 这个基于 HTML5 和 CSS 在 macOS 桌面加载小部件的工具 ➡️ "),a("a",{attrs:{href:"http://tracesof.net/uebersicht/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Übersicht"),a("OutboundLink")],1)]),e._v(" "),a("p",[e._v("② 这个用 Coffeescript 写的假装自己是 macOS 状态栏的桌面小部件，or "),a("code",[e._v("Widget")]),e._v(" ➡️ "),a("a",{attrs:{href:"https://github.com/zzzeyez/Pecan",target:"_blank",rel:"noopener noreferrer"}},[e._v("Pecan"),a("OutboundLink")],1)]),e._v(" "),a("p",[e._v("来实现这样的效果：")]),e._v(" "),a("p",[a("img",{attrs:{src:"https://i.loli.net/2018/06/04/5b15089cdae60.jpg",alt:""}})]),e._v(" "),a("br"),e._v(" "),a("h1",{attrs:{id:"tell-me-how"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tell-me-how","aria-hidden":"true"}},[e._v("#")]),e._v(" Tell me how!")]),e._v(" "),a("h2",{attrs:{id:"_1-首先要安装他：ubersicht"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-首先要安装他：ubersicht","aria-hidden":"true"}},[e._v("#")]),e._v(" 1. 首先要安装他：Übersicht")]),e._v(" "),a("p",[e._v("它是一个专门用于 macOS 来做桌面小工具的插件，很轻量，几乎不耗内存。同时又因为它的小部件可以通过 Coffeescript 来自己实现，并且可以直接用 CSS 来编辑样式，让这个插件做出来的 Widget 几乎有无限可能。")]),e._v(" "),a("p",[e._v("安装方法有两种：")]),e._v(" "),a("p",[a("strong",[e._v("【一个平常的安装方法】")])]),e._v(" "),a("p",[e._v("访问官网："),a("a",{attrs:{href:"http://tracesof.net/uebersicht/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Übersicht"),a("OutboundLink")],1),e._v(" 点击下载安装。")]),e._v(" "),a("p",[a("strong",[e._v("【一个牛逼的安装方法】")])]),e._v(" "),a("p",[e._v("① 下载安装使用依赖："),a("a",{attrs:{href:"https://brew.sh/",target:"_blank",rel:"noopener noreferrer"}},[a("strong",[e._v("Homebrew")]),a("OutboundLink")],1),e._v(" 🍺")]),e._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[e._v("/usr/bin/ruby -e "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$(")]),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("curl")]),e._v(" -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install"),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v(")")])]),e._v('"')]),e._v("\n")])])]),a("p",[e._v("将上面的命令复制粘贴到终端中执行；")]),e._v(" "),a("p",[e._v("② 加入 Caskroom 拓展，这样直接可以安装 GUI 软件：")]),e._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[e._v("brew tap homebrew/cask\n")])])]),a("p",[e._v("③ 执行命令安装 Übersicht：")]),e._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[e._v("brew cask "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("install")]),e._v(" ubersicht\n")])])]),a("p",[e._v("欧耶 (^o^)/ 搞定！")]),e._v(" "),a("br"),e._v(" "),a("h2",{attrs:{id:"_2-安装-macos-状态栏拓展包（pecan）"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-安装-macos-状态栏拓展包（pecan）","aria-hidden":"true"}},[e._v("#")]),e._v(" 2. 安装 macOS 状态栏拓展包（Pecan）")]),e._v(" "),a("p",[e._v("Pecan 是一位同学开发的 Übersicht 的 Widget，并且开源在了 GitHub 上\b，项目地址"),a("a",{attrs:{href:"https://github.com/zzzeyez/Pecan",target:"_blank",rel:"noopener noreferrer"}},[e._v("在这里"),a("OutboundLink")],1),e._v("，这个项目的原理其实就是在桌面上显示一条状态栏，这样一来就能够直接覆盖掉系统原生状态栏，并且实现原生状态栏包括看时间、看连接 WiFi 名称、网络速率等等在内的一系列功能。")]),e._v(" "),a("p",[e._v("安装方法，执行命令：")]),e._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[e._v("git")]),e._v(" clone https://github.com/zzzeyez/Pecan.git "),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$HOME")]),e._v("/Library/Application\\ Support/Übersicht/widgets/Pecan\n")])])]),a("p",[e._v("上面命令就是将这个 Pecan 拓展包的源码放到 Übersicht 的 Widget 文件夹下，这样 Übersicht 就可以读取到这个文件夹下的东西来展示 Widget.")]),e._v(" "),a("p",[e._v("Pecan 内置了五个主题，分别叫这些：bliss, fillmore, hasel, nurse, santafe.")]),e._v(" "),a("div",{staticStyle:{width:"360px",display:"block",margin:"0 auto"}},[e._v("![](https://i.loli.net/2018/05/29/5b0d1c325a302.png)")]),e._v(" "),a("p",[e._v("我们先开启启用主题脚本：")]),e._v(" "),a("p",[e._v("① 首先终端执行：")]),e._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[e._v("sed")]),e._v(" -i -e "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"s~/Users/zzzeyez/scripts/uber~HOME/Library/Application\\ Support/Übersicht/widgets~g"')]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$HOME")]),e._v('/Library/Application\\ Support/Übersicht/widgets/Pecan/pecan-style"')]),e._v("\n")])])]),a("p",[e._v("这样就通过调用 "),a("code",[e._v("sed")]),e._v(" 流编辑器将脚本中的 "),a("code",[e._v("Widget")]),e._v(" 路径修改为本机的路径。")]),e._v(" "),a("p",[e._v("② 然后将脚本放入 "),a("code",[e._v("/usr/local/bin")]),e._v(" 可执行文件中，来全局调用：")]),e._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[e._v("mv")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$HOME")]),e._v('/Library/Application\\ Support/Übersicht/widgets/Pecan/pecan-style"')]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"/usr/local/bin"')]),e._v("\n")])])]),a("p",[e._v("③ 最后，我们可以通过直接输入命令 "),a("code",[e._v("pecan-style")]),e._v(" 来查看、更换主题：")]),e._v(" "),a("ul",[a("li",[e._v("通过 "),a("code",[e._v("pecan-style --list")]),e._v(" 来查看可用主题；")]),e._v(" "),a("li",[e._v("通过 "),a("code",[e._v("pecan-style --load fillmore")]),e._v(" 来加载 "),a("code",[e._v("fillmore")]),e._v(" 主题。")])]),e._v(" "),a("div",{attrs:{align:"center"}},[e._v("![](https://i.loli.net/2018/05/29/5b0d17cec9cb0.jpg)")]),e._v(" "),a("br"),e._v(" "),a("h2",{attrs:{id:"_3-将系统原生状态栏设置自动隐藏"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-将系统原生状态栏设置自动隐藏","aria-hidden":"true"}},[e._v("#")]),e._v(" 3. 将系统原生状态栏设置自动隐藏")]),e._v(" "),a("div",{attrs:{align:"center"}},[e._v("![](https://i.loli.net/2018/05/29/5b0d18b87fb81.jpg)")]),e._v(" "),a("p",[e._v("就这样，我们的高度可定制状态栏就实现了。")]),e._v(" "),a("p",[e._v("有一些兼容性的问题在于：")]),e._v(" "),a("ul",[a("li",[e._v("由于这个所谓的状态栏实际上只是桌面 Widget，因此它只能在桌面上进行显示，其他的应用的窗口能够将这个状态栏覆盖；")]),e._v(" "),a("li",[e._v("如果原生状态栏不开启自动隐藏的话，两层状态栏也会同时存在，比较尴尬。")])]),e._v(" "),a("p",[e._v("感谢 Reddit 的同学给我提供灵感，同时推荐这个 Reddit 主题："),a("code",[e._v("r/unixporn")]),e._v("，里面一些同学做的 Linux 桌面也实在是迷人。")]),e._v(" "),a("br"),e._v(" "),a("br"),e._v(" "),a("p",[a("a",{attrs:{href:"https://spencerwoo.com",target:"_blank",rel:"noopener noreferrer"}},[e._v("© Spencer Woo"),a("OutboundLink")],1)])])},[],!1,null,null,null);t.default=s.exports}}]);