(window.webpackJsonp=window.webpackJsonp||[]).push([[37],{255:function(t,r,e){"use strict";e.r(r);var a=e(1),o=Object(a.a)({},function(){var t=this,r=t.$createElement,e=t._self._c||r;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("blockquote",[e("p",[t._v("曾踏月而来")]),t._v(" "),e("p",[t._v("只因你在山中")]),t._v(" "),e("p",[t._v("山风拂发、拂颈、拂裸露的肩膀")]),t._v(" "),e("p",[t._v("而月光衣我以华裳")])]),t._v(" "),e("hr"),t._v(" "),e("p",[e("img",{attrs:{src:"https://i.loli.net/2018/01/28/5a6d937413bbd.jpg",alt:""}})]),t._v(" "),e("p",[t._v("托 V 站大佬的福，我用上了极为可靠的、支持 HTTPS 的、GeoTrust EV SSL CA - G4 签发证书的、"),e("strong",[t._v("证书名字叫：Cat Networks, Inc 的图床！")]),t._v("—— "),e("a",{attrs:{href:"https://sm.ms/",target:"_blank",rel:"noopener noreferrer"}},[t._v("SM.MS"),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("就冲这名字，我就得用这个啊。")]),t._v(" "),e("p",[t._v("最近的半年里，当我还在用七牛云做我的图床，以及我的网站并不支持 HTTPS 的时候，我的图片都是通过在 macOS 平台上或许是最为知名的图床工具—— "),e("a",{attrs:{href:"https://www.toolinbox.net/iPic/",target:"_blank",rel:"noopener noreferrer"}},[t._v("iPic"),e("OutboundLink")],1),t._v(" 进行方便快捷的上传。当然 iPic 也确实，在大部分时间里，满足了我的需求。然而，iPic 免费版的微博图床存在压缩图片、图片可能被添加水印或删除等诸多不足，而高级版采用的订阅制也让不少人心生不快。不过为了便捷的操作我还是在去年的双十一购置了一年的 iPic 高级版账户，花费了我 30 大洋。这样我的图片也就能通过 iPic 无缝衔接式的上传至七牛云。")]),t._v(" "),e("p",[t._v("事到如今，我换掉了不支持未备案域名 HTTPS 的七牛云，换成了 SM.MS 图床。如何方便、快捷、简单、无脑地把我想要上传至图床的内容成功上传，并且还能将图片外链直接复制到剪切板呢？经过一下午的探索，我发现了：基础、强、极其强三种方法。")]),t._v(" "),e("br"),t._v(" "),e("h1",{attrs:{id:"基础-网页版点击文件直接上传"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#基础-网页版点击文件直接上传","aria-hidden":"true"}},[t._v("#")]),t._v(" 基础 - 网页版点击文件直接上传")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://i.loli.net/2018/01/28/5a6d9ee69a62a.jpg",alt:""}})]),t._v(" "),e("h1",{attrs:{id:"强-chrome-插件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#强-chrome-插件","aria-hidden":"true"}},[t._v("#")]),t._v(" 强 - Chrome 插件")]),t._v(" "),e("p",[t._v("在 GitHub 上逛呀又逛，发现了一个支持 SM.MS 图床的插件："),e("a",{attrs:{href:"https://github.com/sinchang/smms",target:"_blank",rel:"noopener noreferrer"}},[t._v("SM.MS 图床"),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("大概功能是拖拽上传，自动提取图片外链。配置十分简单，并且已经上架 Chrome Web Store。")]),t._v(" "),e("br"),t._v(" "),e("h1",{attrs:{id:"极其强-automator"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#极其强-automator","aria-hidden":"true"}},[t._v("#")]),t._v(" 极其强 - Automator")]),t._v(" "),e("blockquote",[e("p",[t._v("iOS 上大名鼎鼎的 "),e("a",{attrs:{href:"https://sspai.com/post/tag/workflow",target:"_blank",rel:"noopener noreferrer"}},[t._v("Workflow"),e("OutboundLink")],1),t._v(" 在"),e("a",{attrs:{href:"https://sspai.com",target:"_blank",rel:"noopener noreferrer"}},[t._v("我派"),e("OutboundLink")],1),t._v("是深入人心，许多大神研究了很多高阶的玩法，利用 Workflow 提高了不少的效率。不得不承认，自从我开始用 Workflow 之后，也是越来越离不开他。iOS 端有 Workflow 这样的神器，那么 Mac 端呢？当然有，而且还是 macOS 系统自带的，叫 Automator ，俗称「扛炮」。他在一个很不起眼的地方，你可以通过 Spotlight 搜索来启动它。")])]),t._v(" "),e("p",[e("img",{attrs:{src:"https://i.loli.net/2018/01/28/5a6da18d521a0.png",alt:""}})]),t._v(" "),e("p",[t._v("讲道理，第一次知道 Automator 叫扛炮，我笑的停不下来。")]),t._v(" "),e("p",[t._v("其实，利用 macOS 自带的 Automator 程序，我们可以自己 DIY 一个简单、免费的图床上传工具，来满足我日常写字传图的需求。")]),t._v(" "),e("h2",{attrs:{id:"_1-dependency"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-dependency","aria-hidden":"true"}},[t._v("#")]),t._v(" 1. Dependency")]),t._v(" "),e("p",[e("a",{attrs:{href:"https://sm.ms/",target:"_blank",rel:"noopener noreferrer"}},[t._v("SM.MS"),e("OutboundLink")],1),t._v(" 提供了一个非常简单的上传 API，我们可以利用 macOS 自带的 curl 命令行工具通过 POST 方法直接上传本地图片。API 的返回参数是以 json 的形式返回数据的，我们可以利用命令行工具 jq 来解析 json 数据。")]),t._v(" "),e("p",[t._v("依托：")]),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://github.com/curl/curl",target:"_blank",rel:"noopener noreferrer"}},[t._v("curl"),e("OutboundLink")],1),t._v(" —— A command line tool and library for transferring data with URL syntax")]),t._v(" "),e("li",[e("a",{attrs:{href:"https://brew.sh/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Homebrew"),e("OutboundLink")],1),t._v(" —— The missing package manager for macOS（可有可无）")]),t._v(" "),e("li",[e("a",{attrs:{href:"https://github.com/stedolan/jq",target:"_blank",rel:"noopener noreferrer"}},[t._v("jq"),e("OutboundLink")],1),t._v(" —— Command-line JSON processor")])]),t._v(" "),e("h2",{attrs:{id:"_2-configuration"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-configuration","aria-hidden":"true"}},[t._v("#")]),t._v(" 2. Configuration")]),t._v(" "),e("h4",{attrs:{id:"a-安装依托"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#a-安装依托","aria-hidden":"true"}},[t._v("#")]),t._v(" a. 安装依托")]),t._v(" "),e("p",[t._v("macOS 自带 curl，无需担心。")]),t._v(" "),e("p",[t._v("如果你装有 Homebrew，可以在 Terminal 中键入 "),e("code",[t._v("brew install jq")]),t._v(" 来安装。")]),t._v(" "),e("p",[t._v("OR … 你也可以从 "),e("a",{attrs:{href:"https://github.com/stedolan/jq/releases",target:"_blank",rel:"noopener noreferrer"}},[t._v("GitHub"),e("OutboundLink")],1),t._v(" 下载然后将文件拖进 "),e("code",[t._v("/usr/local/bin")]),t._v(" 目录。下载完成后，在 Terminal 中键入 "),e("code",[t._v("chmod +x /usr/local/bin/jq")]),t._v(" 赋其可执行权限。")]),t._v(" "),e("h4",{attrs:{id:"b-配置-automator"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#b-配置-automator","aria-hidden":"true"}},[t._v("#")]),t._v(" b. 配置 Automator")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://i.loli.net/2018/01/28/5a6da5f8bc538.jpg",alt:""}})]),t._v(" "),e("p",[t._v("首先，我们打开 Automator，在弹出的窗口中选择新建服务 (Service)，然后从左边的资源库中依次拖拽出「拷贝至剪贴板」(Copy to Clipboard)，「运行 Shell 脚本」(Run Shell Script) 和「显示通知」(Display Notification) 三个操作。")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://i.loli.net/2018/01/28/5a6da7f3e297d.png",alt:""}})]),t._v(" "),e("p",[t._v("接着在 Shell 窗口中粘贴 "),e("code",[t._v("curl -F smfile=@$@ https://sm.ms/api/upload | /usr/local/bin/jq -r '.data.url' | sed 's/^/![](&/; s/$/)&/'| pbcopy")]),t._v(" ，并将右上角的「传递输入」选项设为「作为自变量」，即：Pass input: as arguments.")]),t._v(" "),e("p",[t._v("上面我们在 Shell 窗口中所执行的命令主体依次是："),e("code",[t._v("curl")]),t._v("，"),e("code",[t._v("jq")]),t._v("，"),e("code",[t._v("sed")]),t._v(" 和 "),e("code",[t._v("pbcopy")]),t._v(" 。")]),t._v(" "),e("ol",[e("li",[e("p",[t._v("通过 "),e("code",[t._v("curl -F smfile=@$@ https://sm.ms/api/upload")]),t._v(" 这一命令，我们选择的图片就已经上传到 SM.MS 图床上了，同时，服务器给我们返回了我们所需要的 JSON 文件，如果我们直接在终端执行这一命令会更直观的看到 JSON 的样子，如下图。")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://i.loli.net/2018/01/28/5a6dad980acd6.jpg",alt:""}})])]),t._v(" "),e("li",[e("p",[t._v("通过 "),e("code",[t._v("/usr/local/bin/jq -r '.data.url'")]),t._v(" 这个命令，我们就将服务器返回的 JSON 文件进行解析，得到我们的图片外链 url 并输出。")])]),t._v(" "),e("li",[e("p",[t._v("不过我还想直接得到 Markdown 格式图片链接，那么这段命令就起作用了 "),e("code",[t._v("sed 's/^/![](&/; s/$/)&/'")]),t._v("，这段命令会调用 sed 流编辑器将图片链接转换为 Markdown 格式。")])]),t._v(" "),e("li",[e("p",[t._v("最后我们用 "),e("code",[t._v("pbcopy")]),t._v(" 将得到的图片外链复制到剪贴板。")])])]),t._v(" "),e("p",[t._v("然后我们在 Shell 脚本后添加一个通知提醒自己图片上传成功：Display Notifications.")]),t._v(" "),e("p",[t._v("最后，我们保存服务，一个一键上传图片至 SM.MS 并复制图片链接的小工具就完成了。")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://i.loli.net/2018/01/28/5a6dab73911df.jpg",alt:""}})]),t._v(" "),e("p",[t._v("正常使用这个 Service 的时候，我们可以通过在图片上方鼠标右键选择服务 (Service) 然后点击我们刚刚保存的 Workflow 名字 (PicbedSM - MD) 来执行这个操作。")]),t._v(" "),e("p",[t._v("更高阶的玩法，我们还可以将这个 Service 直接绑定全局快捷键 （"),e("code",[t._v("⌘ + U")]),t._v("），这样我们选中一个图片就可以通过按键组合飞速上传，岂不美哉！")]),t._v(" "),e("br"),t._v(" "),e("p",[t._v("鞠躬。")]),t._v(" "),e("br"),t._v(" "),e("br"),t._v(" "),e("p",[t._v("© Spencer Woo")])])},[],!1,null,null,null);r.default=o.exports}}]);